<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Geisha.Engine</name>
    </assembly>
    <members>
        <member name="T:Geisha.Engine.Audio.Assets.AudioFileExtensions">
            <summary>
                Defines constants representing file extensions of audio assets used by engine.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Audio.Assets.AudioFileExtensions.Sound">
            <summary>
                Extension of sound asset file (including dot).
            </summary>
        </member>
        <member name="T:Geisha.Engine.Audio.Assets.Serialization.SoundFileContent">
            <summary>
                Represents sound file content to be used to load <see cref="T:Geisha.Engine.Audio.ISound" /> from a file into memory.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Audio.Assets.Serialization.SoundFileContent.AssetId">
            <summary>
                Asset id.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Audio.Assets.Serialization.SoundFileContent.SoundFilePath">
            <summary>
                Path to sound file.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Audio.AudioModule">
            <summary>
                Provides audio system and related components.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Audio.Components.AudioSourceComponent">
            <summary>
                Audio source capable of playing a single sound.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Audio.Components.AudioSourceComponent.Sound">
            <summary>
                Sound attached to audio source.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Audio.Components.AudioSourceComponent.IsPlaying">
            <summary>
                Indicates whether this audio source is currently playing a sound.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Audio.Components.Serialization.SerializableAudioSourceComponent">
            <summary>
                Represents serializable <see cref="T:Geisha.Engine.Audio.Components.AudioSourceComponent" /> that is used in a scene file content.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Audio.Components.Serialization.SerializableAudioSourceComponent.SoundAssetId">
            <summary>
                Asset id of <see cref="T:Geisha.Engine.Audio.ISound" /> asset.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Audio.Components.Serialization.SerializableAudioSourceComponent.IsPlaying">
            <summary>
                Represents <see cref="P:Geisha.Engine.Audio.Components.AudioSourceComponent.IsPlaying" /> property of <see cref="T:Geisha.Engine.Audio.Components.AudioSourceComponent" />.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Audio.IAudioBackend">
            <summary>
                Defines interface of audio backend used by the engine.
            </summary>
            <remarks>
                Audio backend provides services for sound loading and audio playback.
            </remarks>
        </member>
        <member name="M:Geisha.Engine.Audio.IAudioBackend.CreateSound(System.IO.Stream,Geisha.Engine.Audio.SoundFormat)">
            <summary>
                Creates new <see cref="T:Geisha.Engine.Audio.ISound" /> from data in given stream.
            </summary>
            <param name="stream">Stream containing data of the sound.</param>
            <param name="soundFormat">Format of sound data in the <paramref name="stream" />.</param>
            <returns><see cref="T:Geisha.Engine.Audio.ISound" /> that consists of sound data from the <paramref name="stream" />.</returns>
        </member>
        <member name="M:Geisha.Engine.Audio.IAudioBackend.CreateAudioPlayer">
            <summary>
                Creates audio player suitable for current platform.
            </summary>
            <returns>New instance of <see cref="T:Geisha.Engine.Audio.IAudioPlayer" /> suitable for current platform.</returns>
        </member>
        <member name="T:Geisha.Engine.Audio.IAudioPlayer">
            <summary>
                Defines interface of an audio player capable of audio playback.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Audio.IAudioPlayer.Play(Geisha.Engine.Audio.ISound)">
            <summary>
                Plays given sound.
            </summary>
            <param name="sound">Sound to be played.</param>
        </member>
        <member name="T:Geisha.Engine.Audio.ISound">
            <summary>
                Represents a sound.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Audio.ISound.Format">
            <summary>
                Sound format of this sound.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Audio.SoundFormat">
            <summary>
                Specifies sound format.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Audio.SoundFormat.Wav">
            <summary>
                Specifies sound format as WAV.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Audio.SoundFormat.Mp3">
            <summary>
                Specifies sound format as MP3.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Audio.UnsupportedSoundFileFormatException">
            <summary>
                The exception that is thrown when loading an asset that is already loaded by particular managed asset instance.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Audio.UnsupportedSoundFileFormatException.FileExtension">
            <summary>
                Asset info of asset that loading has failed.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Core.Assets.AssetId">
            <summary>
                Represents type safe identifier of an asset.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.AssetId.CreateUnique">
            <summary>
                Creates new, globally unique, instance of <see cref="T:Geisha.Engine.Core.Assets.AssetId" />.
            </summary>
            <returns>New, globally unique, instance of <see cref="T:Geisha.Engine.Core.Assets.AssetId" />.</returns>
            <remarks>Uniqueness of created <see cref="T:Geisha.Engine.Core.Assets.AssetId" /> instances is based on uniqueness of <see cref="T:System.Guid" />.</remarks>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.AssetId.#ctor(System.Guid)">
            <summary>
                Creates new instance of <see cref="T:Geisha.Engine.Core.Assets.AssetId" /> with <see cref="P:Geisha.Engine.Core.Assets.AssetId.Value" /> set as specified by
                <paramref name="value" />.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:Geisha.Engine.Core.Assets.AssetId.Value">
            <summary>
                Actual value of identifier.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.AssetId.Equals(Geisha.Engine.Core.Assets.AssetId)">
            <summary>
                Returns a value indicating whether the value of this instance is equal to the value of the specified
                <see cref="T:Geisha.Engine.Core.Assets.AssetId" /> instance.
            </summary>
            <param name="other">The object to compare to this instance.</param>
            <returns>
                <c>true</c> if the <paramref name="other" /> parameter equals the value of this instance; otherwise,
                <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.AssetId.Equals(System.Object)">
            <summary>
                Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="obj">The object to compare to this instance.</param>
            <returns>
                <c>true</c> if <paramref name="obj" /> is an instance of <see cref="T:Geisha.Engine.Core.Assets.AssetId" /> and equals the value of this
                instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.AssetId.GetHashCode">
            <summary>
                Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.AssetId.op_Equality(Geisha.Engine.Core.Assets.AssetId,Geisha.Engine.Core.Assets.AssetId)">
            <summary>
                Determines whether two specified instances of <see cref="T:Geisha.Engine.Core.Assets.AssetId" /> are equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> and <paramref name="right" /> represent the same
                <see cref="T:Geisha.Engine.Core.Assets.AssetId" />; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.AssetId.op_Inequality(Geisha.Engine.Core.Assets.AssetId,Geisha.Engine.Core.Assets.AssetId)">
            <summary>
                Determines whether two specified instances of <see cref="T:Geisha.Engine.Core.Assets.AssetId" /> are not equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> and <paramref name="right" /> do not represent the same
                <see cref="T:Geisha.Engine.Core.Assets.AssetId" />; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.AssetId.ToString">
            <summary>
                Converts the value of the current <see cref="T:Geisha.Engine.Core.Assets.AssetId" /> object to its equivalent string representation.
            </summary>
            <returns>A string representation of the value of the current <see cref="T:Geisha.Engine.Core.Assets.AssetId" /> object.</returns>
        </member>
        <member name="T:Geisha.Engine.Core.Assets.AssetInfo">
            <summary>
                Asset registration info to be used in <see cref="T:Geisha.Engine.Core.Assets.IAssetStore" />.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.AssetInfo.#ctor(Geisha.Engine.Core.Assets.AssetId,System.Type,System.String)">
            <summary>
                Creates new instance of <see cref="T:Geisha.Engine.Core.Assets.AssetInfo" />.
            </summary>
            <param name="assetId">Id of asset.</param>
            <param name="assetType">Type of asset.</param>
            <param name="assetFilePath">Path to asset file.</param>
        </member>
        <member name="P:Geisha.Engine.Core.Assets.AssetInfo.AssetId">
            <summary>
                Id of asset.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.Assets.AssetInfo.AssetType">
            <summary>
                Type of asset.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.Assets.AssetInfo.AssetFilePath">
            <summary>
                Path to asset file.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.AssetInfo.ToString">
            <summary>
                Converts the value of the current <see cref="T:Geisha.Engine.Core.Assets.AssetInfo" /> object to its equivalent string representation.
            </summary>
            <returns>A string representation of the value of the current <see cref="T:Geisha.Engine.Core.Assets.AssetInfo" /> object.</returns>
        </member>
        <member name="T:Geisha.Engine.Core.Assets.IAssetStore">
            <summary>
                Provides access to assets.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.IAssetStore.GetAsset``1(Geisha.Engine.Core.Assets.AssetId)">
            <summary>
                Returns asset of given type and id.
            </summary>
            <typeparam name="TAsset">Type of asset requested.</typeparam>
            <param name="assetId">Id of asset requested.</param>
            <returns>Instance of requested asset.</returns>
            <remarks>
                An asset requires registration in asset store first to be available for access. Engine discovers and registers
                assets automatically at startup. To configure directory path where engine searches for assets use
                <see cref="P:Geisha.Engine.Core.Configuration.CoreConfiguration.AssetsRootDirectoryPath" /> in <c>game.json</c> file. To manually register an asset
                use <see cref="M:Geisha.Engine.Core.Assets.IAssetStore.RegisterAsset(Geisha.Engine.Core.Assets.AssetInfo)" /> or <see cref="M:Geisha.Engine.Core.Assets.IAssetStore.RegisterAssets(System.String)" />. Asset store manages loading assets into memory
                by itself. If requested asset is not yet loaded into memory it is loaded then and its instance returned. If asset
                was already loaded into memory and is available then its instance is immediately served.
            </remarks>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.IAssetStore.GetAssetId(System.Object)">
            <summary>
                Returns id of given asset instance.
            </summary>
            <param name="asset">Asset for which id is requested.</param>
            <returns>Asset id.</returns>
            <remarks>Asset id can be provided only for those assets that were loaded with this instance of asset store.</remarks>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.IAssetStore.GetRegisteredAssets">
            <summary>
                Returns <see cref="T:Geisha.Engine.Core.Assets.AssetInfo" /> of each registered asset.
            </summary>
            <returns><see cref="T:Geisha.Engine.Core.Assets.AssetInfo" /> of each registered asset.</returns>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.IAssetStore.RegisterAsset(Geisha.Engine.Core.Assets.AssetInfo)">
            <summary>
                Registers an asset for access in asset store.
            </summary>
            <param name="assetInfo">Asset registration info.</param>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.IAssetStore.RegisterAssets(System.String)">
            <summary>
                Registers all assets discovered in specified directory path.
            </summary>
            <param name="assetDiscoveryPath">Root directory path for assets discovery and registration process.</param>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.IAssetStore.UnloadAsset(Geisha.Engine.Core.Assets.AssetId)">
            <summary>
                Unloads asset with specified id.
            </summary>
            <param name="assetId">Id of asset to unload.</param>
            <remarks>
                If asset is loaded then <see cref="M:Geisha.Engine.Core.Assets.IAssetStore.UnloadAsset(Geisha.Engine.Core.Assets.AssetId)" /> unloads this asset. If asset is not loaded then
                <see cref="M:Geisha.Engine.Core.Assets.IAssetStore.UnloadAsset(Geisha.Engine.Core.Assets.AssetId)" /> does nothing.
            </remarks>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.IAssetStore.UnloadAssets">
            <summary>
                Unloads all loaded assets that was registered in asset store.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Core.Assets.AssetNotRegisteredException">
            <summary>
                The exception that is thrown when accessing an asset that is not registered in <see cref="T:Geisha.Engine.Core.Assets.AssetStore" />.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.Assets.AssetNotRegisteredException.AssetId">
            <summary>
                Asset id of asset that access to has failed.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.Assets.AssetNotRegisteredException.AssetType">
            <summary>
                Type of asset that access to has failed. Can be <c>null</c> when type is unknown.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Core.Assets.AssetFactoryNotFoundException">
            <summary>
                The exception that is thrown when registering an asset in <see cref="T:Geisha.Engine.Core.Assets.AssetStore" /> for which no implementation of
                <see cref="T:Geisha.Engine.Core.Assets.IManagedAssetFactory" /> is provided.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.Assets.AssetFactoryNotFoundException.AssetInfo">
            <summary>
                Asset info of asset that registration has failed.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Core.Assets.MultipleAssetFactoriesFoundException">
            <summary>
                The exception that is thrown when registering an asset in <see cref="T:Geisha.Engine.Core.Assets.AssetStore" /> for which multiple
                implementations of <see cref="T:Geisha.Engine.Core.Assets.IManagedAssetFactory" /> are provided.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.Assets.MultipleAssetFactoriesFoundException.AssetInfo">
            <summary>
                Asset info of asset that registration has failed.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Core.Assets.AssetStore">
            <inheritdoc cref="T:Geisha.Engine.Core.Assets.IAssetStore" />
            <summary>
                Provides access to assets.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.AssetStore.GetAsset``1(Geisha.Engine.Core.Assets.AssetId)">
            <inheritdoc />
            <summary>
                Returns asset of given type and id.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.AssetStore.GetAssetId(System.Object)">
            <inheritdoc />
            <summary>
                Returns id of given asset instance.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.AssetStore.GetRegisteredAssets">
            <inheritdoc />
            <summary>
                Returns <see cref="T:Geisha.Engine.Core.Assets.AssetInfo" /> of each registered asset.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.AssetStore.RegisterAsset(Geisha.Engine.Core.Assets.AssetInfo)">
            <inheritdoc />
            <summary>
                Registers an asset for access in asset store.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.AssetStore.RegisterAssets(System.String)">
            <inheritdoc />
            <summary>
                Registers all assets discovered in specified directory path.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.AssetStore.UnloadAsset(Geisha.Engine.Core.Assets.AssetId)">
            <inheritdoc />
            <summary>
                Unloads asset with specified id.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.AssetStore.UnloadAssets">
            <inheritdoc />
            <summary>
                Unloads all loaded assets that was registered in asset store.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.AssetStore.Dispose">
            <summary>
                Calls <see cref="M:Geisha.Engine.Core.Assets.AssetStore.UnloadAssets" /> method.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Core.Assets.IAssetDiscoveryRule">
            <summary>
                Specifies interface of asset discovery rule used in process of automatic assets discovery and registration from
                file system.
            </summary>
            <remarks>
                Single implementation of this interface per asset file type should be provided. All registered asset discovery
                rules are run for all files and it is recommended that for given file type only one rule actually returns an
                <see cref="T:Geisha.Engine.Core.Assets.AssetInfo" />.
            </remarks>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.IAssetDiscoveryRule.Discover(Geisha.Common.FileSystem.IFile)">
            <summary>
                Creates single <see cref="T:Geisha.Engine.Core.Assets.AssetInfo" /> for specified <see cref="T:Geisha.Common.FileSystem.IFile" /> or returns empty if specified
                <see cref="T:Geisha.Common.FileSystem.IFile" /> is not identified as an asset.
            </summary>
            <param name="file"><see cref="T:Geisha.Common.FileSystem.IFile" /> to be identified as an asset.</param>
            <returns>Single <see cref="T:Geisha.Engine.Core.Assets.AssetInfo" /> if <paramref name="file" /> is identified as an asset file; otherwise, empty.</returns>
        </member>
        <member name="T:Geisha.Engine.Core.Assets.IManagedAsset">
            <summary>
                Defines interface of object representing an asset that can be managed by <see cref="T:Geisha.Engine.Core.Assets.IAssetStore" />.
            </summary>
            <remarks>
                Class implementing <see cref="T:Geisha.Engine.Core.Assets.IManagedAsset" /> represents some kind of package for actual asset object
                instance. It is responsible for implementing loading and unloading of actual asset and keeping its instance for
                usage by other clients. Implementation of this interface should be provided for each asset type that should be
                managed and provided by <see cref="T:Geisha.Engine.Core.Assets.IAssetStore" />. To enable <see cref="T:Geisha.Engine.Core.Assets.IAssetStore" /> to manage implementation
                of <see cref="T:Geisha.Engine.Core.Assets.IManagedAsset" /> there must be provided and registered an implementation of corresponding
                <see cref="T:Geisha.Engine.Core.Assets.IManagedAssetFactory" />.
            </remarks>
        </member>
        <member name="P:Geisha.Engine.Core.Assets.IManagedAsset.AssetInfo">
            <summary>
                Info of asset managed by this <see cref="T:Geisha.Engine.Core.Assets.IManagedAsset" />.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.Assets.IManagedAsset.AssetInstance">
            <summary>
                Instance of loaded asset object managed by this <see cref="T:Geisha.Engine.Core.Assets.IManagedAsset" />.
            </summary>
            <remarks>
                It should be set to not-null object instance after call to <see cref="M:Geisha.Engine.Core.Assets.IManagedAsset.Load" /> method. It should be set to
                null after call to <see cref="M:Geisha.Engine.Core.Assets.IManagedAsset.Unload" /> method.
            </remarks>
        </member>
        <member name="P:Geisha.Engine.Core.Assets.IManagedAsset.IsLoaded">
            <summary>
                Describes managed asset state whether it is loaded or unloaded. If <see cref="P:Geisha.Engine.Core.Assets.IManagedAsset.IsLoaded" /> is <c>true</c> then
                <see cref="P:Geisha.Engine.Core.Assets.IManagedAsset.AssetInstance" /> must be not null.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.IManagedAsset.Load">
            <summary>
                Loads actual asset object and sets its instance to <see cref="P:Geisha.Engine.Core.Assets.IManagedAsset.AssetInstance" />.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.IManagedAsset.Unload">
            <summary>
                Unloads actual asset object and sets <see cref="P:Geisha.Engine.Core.Assets.IManagedAsset.AssetInstance" /> to null.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Core.Assets.IManagedAssetFactory">
            <summary>
                Defines interface of factory producing <see cref="T:Geisha.Engine.Core.Assets.IManagedAsset" /> objects. Factory implementation will serve
                <see cref="T:Geisha.Engine.Core.Assets.IAssetStore" /> to create <see cref="T:Geisha.Engine.Core.Assets.IManagedAsset" /> objects.
            </summary>
            <remarks>
                When implementing <see cref="T:Geisha.Engine.Core.Assets.IManagedAsset" /> interface there should be provided and registered an
                implementation of <see cref="T:Geisha.Engine.Core.Assets.IManagedAssetFactory" /> interface. It is required for <see cref="T:Geisha.Engine.Core.Assets.IAssetStore" /> to
                manage assets correctly.
                <br /><br />
                For given <see cref="T:Geisha.Engine.Core.Assets.AssetInfo" /> there should be only single factory implementation
                registered that returns non empty result, i.e. for certain asset type there is only one factory that produces
                assets while for that type other factories return empty.
            </remarks>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.IManagedAssetFactory.Create(Geisha.Engine.Core.Assets.AssetInfo,Geisha.Engine.Core.Assets.IAssetStore)">
            <summary>
                Creates and returns single instance of <see cref="T:Geisha.Engine.Core.Assets.IManagedAsset" /> for given <paramref name="assetInfo" /> or
                returns empty result if <paramref name="assetInfo" /> does not match the factory.
            </summary>
            <param name="assetInfo">Asset info for which to create a managed asset.</param>
            <param name="assetStore">
                Asset store instance provided for creation of composite assets that require other existing
                assets.
            </param>
            <returns>
                Single instance of <see cref="T:Geisha.Engine.Core.Assets.IManagedAsset" /> if <paramref name="assetInfo" /> matches the factory;
                otherwise empty result.
            </returns>
        </member>
        <member name="T:Geisha.Engine.Core.Assets.ManagedAsset`1">
            <summary>
                Abstract base class simplifying implementation of <see cref="T:Geisha.Engine.Core.Assets.IManagedAsset" /> interface. It provides most of the
                contract required by <see cref="T:Geisha.Engine.Core.Assets.IManagedAsset" /> and requires only implementation of <see cref="M:Geisha.Engine.Core.Assets.ManagedAsset`1.LoadAsset" /> and
                <see cref="M:Geisha.Engine.Core.Assets.ManagedAsset`1.UnloadAsset(`0)" />.
            </summary>
            <typeparam name="TAsset">Asset type the managed asset object will handle.</typeparam>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.ManagedAsset`1.#ctor(Geisha.Engine.Core.Assets.AssetInfo)">
            <summary>
                Initializes <see cref="P:Geisha.Engine.Core.Assets.ManagedAsset`1.AssetInfo" /> property with specified <paramref name="assetInfo" /> parameter.
            </summary>
            <param name="assetInfo">Info of asset that will be managed by this <see cref="T:Geisha.Engine.Core.Assets.ManagedAsset`1" /> instance.</param>
        </member>
        <member name="P:Geisha.Engine.Core.Assets.ManagedAsset`1.AssetInfo">
            <summary>
                Info of asset managed by this <see cref="T:Geisha.Engine.Core.Assets.ManagedAsset`1" />.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.Assets.ManagedAsset`1.AssetInstance">
            <summary>
                Instance of loaded asset object managed by this <see cref="T:Geisha.Engine.Core.Assets.ManagedAsset`1" />.
            </summary>
            ///
            <remarks>
                It is set to not-null object instance after call to <see cref="M:Geisha.Engine.Core.Assets.ManagedAsset`1.Load" /> method. It is set to null after call to
                <see cref="M:Geisha.Engine.Core.Assets.ManagedAsset`1.Unload" /> method.
            </remarks>
        </member>
        <member name="P:Geisha.Engine.Core.Assets.ManagedAsset`1.IsLoaded">
            <summary>
                Describes managed asset state whether it is loaded or unloaded. If <see cref="P:Geisha.Engine.Core.Assets.ManagedAsset`1.IsLoaded" /> is <c>true</c> then
                <see cref="P:Geisha.Engine.Core.Assets.ManagedAsset`1.AssetInstance" /> is not null.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.ManagedAsset`1.Load">
            <summary>
                Loads actual asset object and sets its instance to <see cref="P:Geisha.Engine.Core.Assets.ManagedAsset`1.AssetInstance" />.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.ManagedAsset`1.Unload">
            <summary>
                Unloads actual asset object and sets <see cref="P:Geisha.Engine.Core.Assets.ManagedAsset`1.AssetInstance" /> to null.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.ManagedAsset`1.LoadAsset">
            <summary>
                Implementation of this method should load an asset object instance based on <see cref="P:Geisha.Engine.Core.Assets.ManagedAsset`1.AssetInfo" /> and return it.
            </summary>
            <returns>Loaded asset object instance.</returns>
        </member>
        <member name="M:Geisha.Engine.Core.Assets.ManagedAsset`1.UnloadAsset(`0)">
            <summary>
                Implementation of this method should unload (perform some kind of disposal logic) asset object instance provided as
                a parameter.
            </summary>
            <param name="asset">Loaded asset object instance to be unloaded.</param>
        </member>
        <member name="T:Geisha.Engine.Core.Assets.AssetAlreadyLoadedException">
            <summary>
                The exception that is thrown when loading an asset that is already loaded by particular managed asset instance.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.Assets.AssetAlreadyLoadedException.AssetInfo">
            <summary>
                Asset info of asset that loading has failed.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Core.Assets.AssetAlreadyUnloadedException">
            <summary>
                The exception that is thrown when unloading an asset that is already unloaded by particular managed asset instance.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.Assets.AssetAlreadyUnloadedException.AssetInfo">
            <summary>
                Asset info of asset that unloading has failed.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Core.Assets.LoadAssetReturnedNullException">
            <summary>
                The exception that is thrown when <see cref="M:Geisha.Engine.Core.Assets.ManagedAsset`1.LoadAsset" /> method returns null while loading
                an asset by particular managed asset instance.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.Assets.LoadAssetReturnedNullException.AssetInfo">
            <summary>
                Asset info of asset that loading has failed.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Core.Components.Serialization.SerializableTransformComponent">
            <summary>
                Represents serializable <see cref="T:Geisha.Engine.Core.Components.TransformComponent" /> that is used in a scene file content.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.Components.Serialization.SerializableTransformComponent.Translation">
            <summary>
                Represents <see cref="P:Geisha.Engine.Core.Components.TransformComponent.Translation" /> property of <see cref="T:Geisha.Engine.Core.Components.TransformComponent" />.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.Components.Serialization.SerializableTransformComponent.Rotation">
            <summary>
                Represents <see cref="P:Geisha.Engine.Core.Components.TransformComponent.Rotation" /> property of <see cref="T:Geisha.Engine.Core.Components.TransformComponent" />.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.Components.Serialization.SerializableTransformComponent.Scale">
            <summary>
                Represents <see cref="P:Geisha.Engine.Core.Components.TransformComponent.Scale" /> property of <see cref="T:Geisha.Engine.Core.Components.TransformComponent" />.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Core.Components.TransformComponent">
            <summary>
                Transform component represents set of geometrical transformations that include translation, rotation and scale.
            </summary>
            <remarks>Transform component allows to position objects in space by applying translation, rotation and scale to them.</remarks>
        </member>
        <member name="P:Geisha.Engine.Core.Components.TransformComponent.Translation">
            <summary>
                Translation along X, Y and Z axis from the origin of the coordinate system.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.Components.TransformComponent.Rotation">
            <summary>
                Rotation around X, Y and Z axis of the coordinate system.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.Components.TransformComponent.Scale">
            <summary>
                Scale along X, Y and Z axis of the coordinate system.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.Components.TransformComponent.VectorX">
            <summary>
                Unit vector in global coordinate system pointing along X axis of local coordinate system.
            </summary>
            <remarks>
                This property is useful to keep geometry logic relative to object's local coordinate system. If object is
                facing towards X axis in local coordinate system then after application of rotation this property gets vector of
                where the object is facing in global coordinate system. It can be used to easily move an object along the direction
                it is facing by moving it along <see cref="P:Geisha.Engine.Core.Components.TransformComponent.VectorX" />.
            </remarks>
        </member>
        <member name="P:Geisha.Engine.Core.Components.TransformComponent.VectorY">
            <summary>
                Unit vector in global coordinate system pointing along Y axis of local coordinate system.
            </summary>
            <remarks>
                This property is useful to keep geometry logic relative to object's local coordinate system. If object is
                facing towards Y axis in local coordinate system then after application of rotation this property gets vector of
                where the object is facing in global coordinate system. It can be used to easily move an object along the direction
                it is facing by moving it along <see cref="P:Geisha.Engine.Core.Components.TransformComponent.VectorY" />.
            </remarks>
        </member>
        <member name="P:Geisha.Engine.Core.Components.TransformComponent.VectorZ">
            <summary>
                Unit vector in global coordinate system pointing along Z axis of local coordinate system.
            </summary>
            <remarks>
                This property is useful to keep geometry logic relative to object's local coordinate system. If object is
                facing towards Z axis in local coordinate system then after application of rotation this property gets vector of
                where the object is facing in global coordinate system. It can be used to easily move an object along the direction
                it is facing by moving it along <see cref="P:Geisha.Engine.Core.Components.TransformComponent.VectorZ" />.
            </remarks>
        </member>
        <member name="P:Geisha.Engine.Core.Components.TransformComponent.Default">
            <summary>
                Returns default transform that is zero translation, zero rotation and scale factor equal one.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.Components.TransformComponent.Create2DTransformationMatrix">
            <summary>
                Creates 2D transformation matrix that represents 2D part of this transform component.
            </summary>
            <returns>2D transformation matrix representing this transform.</returns>
        </member>
        <member name="M:Geisha.Engine.Core.Components.TransformComponent.Create3DTransformationMatrix">
            <summary>
                Creates 3D transformation matrix that represents this transform component.
            </summary>
            <returns>3D transformation matrix representing this transform.</returns>
        </member>
        <member name="T:Geisha.Engine.Core.Configuration.IConfigurationManager">
            <summary>
                Provides access to configuration.
            </summary>
            <remarks>
                To provide default values for configuration initialize properties of configuration class in public
                parameterless constructor.
            </remarks>
        </member>
        <member name="M:Geisha.Engine.Core.Configuration.IConfigurationManager.GetConfiguration``1">
            <summary>
                Returns configuration object of specified type read from configuration file.
            </summary>
            <typeparam name="TConfiguration">Type of configuration. It must be a class with public parameterless constructor.</typeparam>
            <returns>
                Configuration object with data from configuration file if configuration entry exists in configuration file;
                otherwise default configuration.
            </returns>
        </member>
        <member name="T:Geisha.Engine.Core.Configuration.CoreConfiguration">
            <summary>
                Represents type safe configuration of engine core.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.Configuration.CoreConfiguration.AssetsRootDirectoryPath">
            <summary>
                Specifies path to root directory for assets discovery and registration. Default is <c>"Assets"</c>.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.Configuration.CoreConfiguration.FixedUpdatesPerFrameLimit">
            <summary>
                Specifies maximum number of fixed updates per single frame. Value <c>0</c> means unlimited. Default is <c>0</c>.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.Configuration.CoreConfiguration.FixedUpdatesPerSecond">
            <summary>
                Target number of fixed updates to be performed in a single second. Default is <c>60</c>.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.Configuration.CoreConfiguration.ShowAllEntitiesCount">
            <summary>
                Specifies whether to display the count of all entities in the current scene. Default is <c>false</c>.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.Configuration.CoreConfiguration.ShowRootEntitiesCount">
            <summary>
                Specifies whether to display the count of root entities in the current scene. Default is <c>false</c>.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.Configuration.CoreConfiguration.ShowFps">
            <summary>
                Specifies whether to display the FPS. Default is <c>false</c>.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.Configuration.CoreConfiguration.ShowFrameTime">
            <summary>
                Specifies whether to display frame time of last executed frame. Default is <c>false</c>.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.Configuration.CoreConfiguration.ShowTotalFrames">
            <summary>
                Specifies whether to display total number of frames executed since engine start-up. Default is <c>false</c>.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.Configuration.CoreConfiguration.ShowTotalTime">
            <summary>
                Specifies whether to display total time that has passed since engine start-up. Default is <c>false</c>.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.Configuration.CoreConfiguration.ShowSystemsExecutionTimes">
            <summary>
                Specifies whether to display diagnostic info about systems execution time and frame time share. Default is
                <c>false</c>.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.Configuration.CoreConfiguration.StartUpScene">
            <summary>
                Path to scene file that is loaded and started at engine start-up. Default is <c>""</c>.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.Configuration.CoreConfiguration.SystemsExecutionChain">
            <summary>
                Specifies execution chain of systems in order of execution that first system in the list is executed first, last
                system in the list is executed last. Default is empty list.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Core.CoreModule">
            <summary>
                Provides core engine infrastructure like game loop, scene management, assets management, entity-component-system
                architecture building blocks.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Core.Diagnostics.IAggregatedDiagnosticInfoProvider">
            <summary>
                Aggregates all <see cref="T:Geisha.Engine.Core.Diagnostics.IDiagnosticInfoProvider" /> implementations and provides single point for querying all
                available <see cref="T:Geisha.Engine.Core.Diagnostics.DiagnosticInfo" />.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.Diagnostics.IAggregatedDiagnosticInfoProvider.GetAllDiagnosticInfo">
            <summary>
                Returns all diagnostic info from all providers.
            </summary>
            <returns>Collection of <see cref="T:Geisha.Engine.Core.Diagnostics.DiagnosticInfo" />.</returns>
        </member>
        <member name="T:Geisha.Engine.Core.Diagnostics.DiagnosticInfo">
            <summary>
                Represents single diagnostic information composed of <see cref="P:Geisha.Engine.Core.Diagnostics.DiagnosticInfo.Name" /> and <see cref="P:Geisha.Engine.Core.Diagnostics.DiagnosticInfo.Value" />.
            </summary>
            <remarks>Example of internal usage of this class inside the engine is FPS that can be shown on the screen.</remarks>
        </member>
        <member name="M:Geisha.Engine.Core.Diagnostics.DiagnosticInfo.#ctor(System.String,System.String)">
            <summary>
                Creates new instance of <see cref="T:Geisha.Engine.Core.Diagnostics.DiagnosticInfo" /> given diagnostic info name and its value.
            </summary>
            <param name="name">Name of diagnostic info.</param>
            <param name="value">
                Value of diagnostic info. Creator of instance is responsible for proper formatting (converting to
                string) the value.
            </param>
        </member>
        <member name="P:Geisha.Engine.Core.Diagnostics.DiagnosticInfo.Name">
            <summary>
                Name of diagnostic info.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.Diagnostics.DiagnosticInfo.Value">
            <summary>
                Value of diagnostic info.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.Diagnostics.DiagnosticInfo.ToString">
            <summary>
                Converts the value of the current <see cref="T:Geisha.Engine.Core.Diagnostics.DiagnosticInfo" /> object to its equivalent string representation.
            </summary>
            <returns>A string representation of the value of the current <see cref="T:Geisha.Engine.Core.Diagnostics.DiagnosticInfo" /> object.</returns>
        </member>
        <member name="T:Geisha.Engine.Core.Diagnostics.IDiagnosticInfoProvider">
            <summary>
                Defines provider of <see cref="T:Geisha.Engine.Core.Diagnostics.DiagnosticInfo" /> for certain area. Any subsystem that would like to supply custom
                <see cref="T:Geisha.Engine.Core.Diagnostics.DiagnosticInfo" /> should provide and register implementation of this interface.
            </summary>
            <remarks>
                Concrete implementation of <see cref="T:Geisha.Engine.Core.Diagnostics.IDiagnosticInfoProvider" /> is responsible for filtering
                <see cref="T:Geisha.Engine.Core.Diagnostics.DiagnosticInfo" /> that it would like to supply.
                Therefore, if supplying of particular <see cref="T:Geisha.Engine.Core.Diagnostics.DiagnosticInfo" /> depends on some configuration, then result of
                <see cref="M:Geisha.Engine.Core.Diagnostics.IDiagnosticInfoProvider.GetDiagnosticInfo" /> should return only <see cref="T:Geisha.Engine.Core.Diagnostics.DiagnosticInfo" /> relevant at that time.
            </remarks>
        </member>
        <member name="M:Geisha.Engine.Core.Diagnostics.IDiagnosticInfoProvider.GetDiagnosticInfo">
            <summary>
                Returns all <see cref="T:Geisha.Engine.Core.Diagnostics.DiagnosticInfo" /> supplied by provider.
            </summary>
            <returns>Collection of <see cref="T:Geisha.Engine.Core.Diagnostics.DiagnosticInfo" />.</returns>
        </member>
        <member name="T:Geisha.Engine.Core.IEngineManager">
            <summary>
                Provides client API to control the engine.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.IEngineManager.IsEngineScheduledForShutdown">
            <summary>
                Indicates whether engine is scheduled for shutdown.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.IEngineManager.ScheduleEngineShutdown">
            <summary>
                Schedules engine shutdown in the end of current frame.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Core.GameTime">
            <summary>
                Represents game time that is composed of delta time and provides other useful time related information.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.GameTime.DateTimeProvider">
            <summary>
                Internal date and time provider used for calculating certain time information.
            </summary>
            <remarks>This is mainly for testability purposes.</remarks>
        </member>
        <member name="P:Geisha.Engine.Core.GameTime.StartUpTime">
            <summary>
                Time of engine start up.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.GameTime.FixedDeltaTime">
            <summary>
                Time span of fixed time step.
            </summary>
            <remarks>
                This is amount of time that is processed in single <see cref="M:Geisha.Engine.Core.Systems.IFixedTimeStepSystem.FixedUpdate(Geisha.Engine.Core.SceneModel.Scene)" /> for each
                <see cref="T:Geisha.Engine.Core.Systems.IFixedTimeStepSystem" />. It is used for stability of certain systems like physical simulations.
            </remarks>
        </member>
        <member name="P:Geisha.Engine.Core.GameTime.TimeSinceStartUp">
            <summary>
                Time that has passed since engine start up till now.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.GameTime.FramesSinceStartUp">
            <summary>
                Number of frames executed since engine start up.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.GameTime.DeltaTime">
            <summary>
                Time that has passed since previous frame. It is a time span of variable time step.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.GameTime.#ctor(System.TimeSpan)">
            <summary>
                Initializes new instance of <see cref="T:Geisha.Engine.Core.GameTime" /> structure given a delta time.
            </summary>
            <param name="deltaTime">Delta time of this <see cref="T:Geisha.Engine.Core.GameTime" />.</param>
        </member>
        <member name="M:Geisha.Engine.Core.GameTime.Equals(Geisha.Engine.Core.GameTime)">
            <summary>
                Returns a value indicating whether the value of this instance is equal to the value of the specified
                <see cref="T:Geisha.Engine.Core.GameTime" /> instance.
            </summary>
            <param name="other">The object to compare to this instance.</param>
            <returns>
                <c>true</c> if the <paramref name="other" /> parameter equals the value of this instance; otherwise,
                <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Engine.Core.GameTime.Equals(System.Object)">
            <summary>
                Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="obj">The object to compare to this instance.</param>
            <returns>
                <c>true</c> if <paramref name="obj" /> is an instance of <see cref="T:Geisha.Engine.Core.GameTime" /> and equals the value of this
                instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Engine.Core.GameTime.GetHashCode">
            <summary>
                Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Geisha.Engine.Core.GameTime.op_Equality(Geisha.Engine.Core.GameTime,Geisha.Engine.Core.GameTime)">
            <summary>
                Determines whether two specified instances of <see cref="T:Geisha.Engine.Core.GameTime" /> are equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> and <paramref name="right" /> represent the same
                <see cref="T:Geisha.Engine.Core.GameTime" />; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Engine.Core.GameTime.op_Inequality(Geisha.Engine.Core.GameTime,Geisha.Engine.Core.GameTime)">
            <summary>
                Determines whether two specified instances of <see cref="T:Geisha.Engine.Core.GameTime" /> are not equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> and <paramref name="right" /> do not represent the same
                <see cref="T:Geisha.Engine.Core.GameTime" />; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Geisha.Engine.Core.IGameTimeProvider">
            <summary>
                Interface providing <see cref="T:Geisha.Engine.Core.GameTime" />.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.IGameTimeProvider.GetGameTime">
            <summary>
                Returns <see cref="T:Geisha.Engine.Core.GameTime" /> with delta time equal time passed since last call to this method.
            </summary>
            <returns>
                <see cref="T:Geisha.Engine.Core.GameTime" /> with delta time equal time passed since last call to this method. First call returns
                <see cref="T:Geisha.Engine.Core.GameTime" /> with delta time equal zero.
            </returns>
        </member>
        <member name="T:Geisha.Engine.Core.GameTimeProvider">
            <summary>
                Class providing <see cref="T:Geisha.Engine.Core.GameTime" />.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.GameTimeProvider.GetGameTime">
            <inheritdoc />
            <summary>
                Returns <see cref="T:Geisha.Engine.Core.GameTime" /> with delta time equal time passed since last call to this
                method.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Core.GeishaEngineException">
            <summary>
            Represents general error that occur in Geisha Engine. Base exception for all Geisha Engine related components.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Core.SceneModel.Entity">
            <summary>
                Implements entity part of entity-component-system architecture. Entity represents any object in the game scene and
                it's behavior and interactions are defined by attached components processed by systems.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.SceneModel.Entity.Name">
            <summary>
                Name of entity. Can be used to uniquely identify entities by <c>string</c> names or include some debugging
                information.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.SceneModel.Entity.Parent">
            <summary>
                Entity that is parent of this entity (this entity is child of parent entity). Returns <c>null</c> if entity is root
                of entity tree.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.SceneModel.Entity.Scene">
            <summary>
                Scene that this entity is part of. Returns <c>null</c> if entity is not part of any scene.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.SceneModel.Entity.IsRoot">
            <summary>
                Defines whether this entity is root of entity tree. True if entity is root of entity tree; false otherwise.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.SceneModel.Entity.Root">
            <summary>
                Root of entity tree that this entity is part of. Returns this entity if it is root of entity tree.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.SceneModel.Entity.Children">
            <summary>
                Entities that are children of this entity.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.SceneModel.Entity.Components">
            <summary>
                Components attached to this entity.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.SceneModel.Entity.IsScheduledForDestruction">
            <summary>
                Indicates if entity is scheduled for destruction. It can be set with <see cref="M:Geisha.Engine.Core.SceneModel.Entity.Destroy" />.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Entity.GetComponent``1">
            <summary>
                Returns component of specified type. Throws exception if there are multiple or none requested components.
            </summary>
            <typeparam name="TComponent">Type of component to retrieve.</typeparam>
            <returns>Component of specified type.</returns>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Entity.GetComponents``1">
            <summary>
                Returns components of specified type.
            </summary>
            <typeparam name="TComponent">Type of components to retrieve.</typeparam>
            <returns>Components of specified type.</returns>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Entity.HasComponent``1">
            <summary>
                Checks if component of specified type is attached to entity.
            </summary>
            <typeparam name="TComponent">Type of component to check.</typeparam>
            <returns>True if component of specified type is attached to entity; false otherwise.</returns>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Entity.AddComponent(Geisha.Engine.Core.SceneModel.IComponent)">
            <summary>
                Attaches specified component instance to entity.
            </summary>
            <param name="component">Component instance to be attached.</param>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Entity.RemoveComponent(Geisha.Engine.Core.SceneModel.IComponent)">
            <summary>
                Removes specified component instance from entity.
            </summary>
            <param name="component">Component instance to be removed from entity.</param>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Entity.AddChild(Geisha.Engine.Core.SceneModel.Entity)">
            <summary>
                Adds given entity as a child to this entity. If given entity already has a parent it is removed from its children
                and parent is changed to this entity.
            </summary>
            <param name="entity">Entity to be added as a child to this entity.</param>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Entity.GetChildrenRecursively">
            <summary>
                Returns all children of entity including children of children effectively iterating through whole subtree.
            </summary>
            <returns>Entities that are all children of this entity including children of children.</returns>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Entity.GetChildrenRecursivelyIncludingRoot">
            <summary>
                Returns this entity and all its children including children of children effectively iterating through whole
                subtree.
            </summary>
            <returns>Entities collection that contains this entity and all its children including children of children.</returns>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Entity.Destroy">
            <summary>
                Marks entity as scheduled for destruction.
            </summary>
            <remarks>
                It can be checked if entity is scheduled for destruction by checking <see cref="P:Geisha.Engine.Core.SceneModel.Entity.IsScheduledForDestruction" />.
                Entities scheduled for destruction live until end of current frame and in the end of frame they are removed from
                scene graph.
            </remarks>
        </member>
        <member name="T:Geisha.Engine.Core.SceneModel.IComponent">
            <summary>
                Interface for all components to be supported by engine.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Core.SceneModel.ISceneConstructionScript">
            <summary>
                Defines interface of a construction script that is run for matching <see cref="T:Geisha.Engine.Core.SceneModel.Scene" /> before it is being
                processed by systems.
            </summary>
            <remarks>
                Provide and register custom implementations of this interface for custom processing of <see cref="T:Geisha.Engine.Core.SceneModel.Scene" /> loaded
                from file before it gets into systems processing pipeline. It can be used i.e. for setting up correct initial state
                of <see cref="T:Geisha.Engine.Core.SceneModel.Scene" /> like from the saved game.
            </remarks>
        </member>
        <member name="P:Geisha.Engine.Core.SceneModel.ISceneConstructionScript.Name">
            <summary>
                Name of the construction script. It is the matching key between script and <see cref="T:Geisha.Engine.Core.SceneModel.Scene" /> and therefore must
                be unique across all the scripts.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.ISceneConstructionScript.Execute(Geisha.Engine.Core.SceneModel.Scene)">
            <summary>
                Defines script steps to perform on specified <see cref="T:Geisha.Engine.Core.SceneModel.Scene" />.
            </summary>
            <param name="scene"><see cref="T:Geisha.Engine.Core.SceneModel.Scene" /> to be processed by script.</param>
        </member>
        <member name="T:Geisha.Engine.Core.SceneModel.Scene">
            <summary>
                Scene is collection of entities that build a single game environment e.g. single level. Scene represents particular
                game state from the engine perspective.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.SceneModel.Scene.RootEntities">
            <summary>
                Root entities of the scene. These typically represent whole logical objects in game world e.g. players, enemies,
                obstacles, projectiles, etc.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.SceneModel.Scene.AllEntities">
            <summary>
                All entities in the scene that is all root entities and all their children. It can be used to find particular
                entity even if it is only a part of certain complex object.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.SceneModel.Scene.ConstructionScript">
            <summary>
                Name of construction script set for the scene. If not null, after scene is loaded, this construction script will be
                executed for this scene before scene is processed by systems.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Scene.AddEntity(Geisha.Engine.Core.SceneModel.Entity)">
            <summary>
                Adds specified entity as a root entity to the scene.
            </summary>
            <param name="entity">Entity to be added to scene as root entity.</param>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Scene.RemoveEntity(Geisha.Engine.Core.SceneModel.Entity)">
            <summary>
                Removes specified entity from the scene. If entity is root entity it is removed together with all its children. If
                entity is not root entity it is removed from children of parent entity.
            </summary>
            <param name="entity">Entity to be removed from the scene.</param>
        </member>
        <member name="T:Geisha.Engine.Core.SceneModel.ISceneLoader">
            <summary>
                Provides functionality to save and load <see cref="T:Geisha.Engine.Core.SceneModel.Scene" /> from a file.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.ISceneLoader.Save(Geisha.Engine.Core.SceneModel.Scene,System.String)">
            <summary>
                Saves scene to a file.
            </summary>
            <param name="scene">Scene to be saved.</param>
            <param name="path">Path to a file that a scene will be saved to.</param>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.ISceneLoader.Save(Geisha.Engine.Core.SceneModel.Scene,System.IO.Stream)">
            <summary>
                Saves scene to a stream.
            </summary>
            <param name="scene">Scene to be saved.</param>
            <param name="stream">Stream that a scene will be saved to.</param>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.ISceneLoader.Load(System.String)">
            <summary>
                Loads scene from a file.
            </summary>
            <param name="path">Path to a file that a scene will be loaded from.</param>
            <returns>Scene loaded from a file.</returns>
        </member>
        <member name="T:Geisha.Engine.Core.SceneModel.SceneLoader">
            <inheritdoc />
            <summary>
                Provides functionality to save and load <see cref="T:Geisha.Engine.Core.SceneModel.Scene" /> from a file.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.SceneLoader.Save(Geisha.Engine.Core.SceneModel.Scene,System.String)">
            <inheritdoc />
            <summary>
                Saves scene to a file.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.SceneLoader.Save(Geisha.Engine.Core.SceneModel.Scene,System.IO.Stream)">
            <inheritdoc />
            <summary>
                Saves scene to a stream.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.SceneLoader.Load(System.String)">
            <inheritdoc />
            <summary>
                Loads scene from a file.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Core.SceneModel.ISceneManager">
            <summary>
                Defines API for loading and accessing already loaded scenes.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.SceneModel.ISceneManager.CurrentScene">
            <summary>
                Current scene that is loaded and processed by systems. It is the latest scene loaded by
                <see cref="T:Geisha.Engine.Core.SceneModel.ISceneManager" />.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.ISceneManager.LoadScene(System.String,Geisha.Engine.Core.SceneModel.SceneLoadMode)">
            <summary>
                Loads scene specified by path to a scene file. Loaded scene becomes current scene.
            </summary>
            <param name="path">Path to the scene file that will be loaded.</param>
            <param name="sceneLoadMode">
                Load mode that specifies scene loading behavior. See <see cref="T:Geisha.Engine.Core.SceneModel.SceneLoadMode" /> for
                details.
            </param>
            <remarks>
                The scene specified to be loaded will actually be loaded in the beginning of the next frame. So after calling
                <see cref="M:Geisha.Engine.Core.SceneModel.ISceneManager.LoadScene(System.String,Geisha.Engine.Core.SceneModel.SceneLoadMode)" /> the <see cref="P:Geisha.Engine.Core.SceneModel.ISceneManager.CurrentScene" /> will be processed by systems in currently executing frame
                till its end. Then on the next frame scene is loaded and it replaces <see cref="P:Geisha.Engine.Core.SceneModel.ISceneManager.CurrentScene" />. Previous instance
                of <see cref="P:Geisha.Engine.Core.SceneModel.ISceneManager.CurrentScene" /> becomes subject for garbage collection.
            </remarks>
        </member>
        <member name="T:Geisha.Engine.Core.SceneModel.SceneLoadMode">
            <summary>
                Enumeration specifying scene loading behavior.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Core.SceneModel.SceneLoadMode.UnloadAssets">
            <summary>
                Unload all loaded assets before loading specified scene.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Core.SceneModel.SceneLoadMode.PreserveAssets">
            <summary>
                Keep all loaded assets when loading specified scene.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Core.SceneModel.Serialization.ISerializableComponent">
            <summary>
                Interface for all serializable <see cref="T:Geisha.Engine.Core.SceneModel.IComponent" /> implementations that are used in a scene file content.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Core.SceneModel.Serialization.ISerializableComponentMapper">
            <summary>
                Provides functionality to map between <see cref="T:Geisha.Engine.Core.SceneModel.IComponent" /> and <see cref="T:Geisha.Engine.Core.SceneModel.Serialization.ISerializableComponent" /> in both
                directions.
            </summary>
            <remarks>
                For each component that requires custom serializable component the implementation of this interface must be
                provided.
                There can be only single implementation per component type.
            </remarks>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Serialization.ISerializableComponentMapper.IsApplicableForComponent(Geisha.Engine.Core.SceneModel.IComponent)">
            <summary>
                Tests applicability of this mapper for given component.
            </summary>
            <param name="component">Component instance.</param>
            <returns>True, if given component is supported by mapper; false otherwise.</returns>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Serialization.ISerializableComponentMapper.IsApplicableForSerializableComponent(Geisha.Engine.Core.SceneModel.Serialization.ISerializableComponent)">
            <summary>
                Tests applicability of this mapper for given serializable component.
            </summary>
            <param name="serializableComponent">Serializable component instance.</param>
            <returns>True, if given serializable component is supported by mapper; false otherwise.</returns>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Serialization.ISerializableComponentMapper.MapToSerializable(Geisha.Engine.Core.SceneModel.IComponent)">
            <summary>
                Maps <see cref="T:Geisha.Engine.Core.SceneModel.IComponent" /> to <see cref="T:Geisha.Engine.Core.SceneModel.Serialization.ISerializableComponent" />.
            </summary>
            <param name="component">Component to be mapped.</param>
            <returns>Serializable component that is equivalent of given component.</returns>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Serialization.ISerializableComponentMapper.MapFromSerializable(Geisha.Engine.Core.SceneModel.Serialization.ISerializableComponent)">
            <summary>
                Maps <see cref="T:Geisha.Engine.Core.SceneModel.Serialization.ISerializableComponent" /> to <see cref="T:Geisha.Engine.Core.SceneModel.IComponent" />.
            </summary>
            <param name="serializableComponent">Serializable component to be mapped.</param>
            <returns>Component that is equivalent of given serializable component.</returns>
        </member>
        <member name="T:Geisha.Engine.Core.SceneModel.Serialization.SerializableComponent">
            <summary>
                Serializable representation of any component implementing <see cref="T:Geisha.Engine.Core.SceneModel.IComponent" /> interface that is used in a
                scene file content.
            </summary>
            <remarks>
                <see cref="T:Geisha.Engine.Core.SceneModel.Serialization.SerializableComponent" /> is serializable representation of any component implementing
                <see cref="T:Geisha.Engine.Core.SceneModel.IComponent" /> interface that is created automatically for component types marked with
                <see cref="T:Geisha.Engine.Core.SceneModel.Serialization.SerializableComponentAttribute" />. Only properties marked with
                <see cref="T:Geisha.Engine.Core.SceneModel.Serialization.SerializablePropertyAttribute" /> are mapped respectively to <see cref="P:Geisha.Engine.Core.SceneModel.Serialization.SerializableComponent.IntProperties" />,
                <see cref="P:Geisha.Engine.Core.SceneModel.Serialization.SerializableComponent.DoubleProperties" /> and <see cref="P:Geisha.Engine.Core.SceneModel.Serialization.SerializableComponent.StringProperties" />.
            </remarks>
        </member>
        <member name="P:Geisha.Engine.Core.SceneModel.Serialization.SerializableComponent.ComponentType">
            <summary>
                Assembly qualified name of component type.
            </summary>
            <remarks>This assembly qualified name does not contain assembly version, culture info and processor architecture.</remarks>
        </member>
        <member name="P:Geisha.Engine.Core.SceneModel.Serialization.SerializableComponent.IntProperties">
            <summary>
                Integer properties of component. Key is property name, value is property value.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.SceneModel.Serialization.SerializableComponent.DoubleProperties">
            <summary>
                Double properties of component. Key is property name, value is property value.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.SceneModel.Serialization.SerializableComponent.StringProperties">
            <summary>
                String properties of component. Key is property name, value is property value.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Core.SceneModel.Serialization.SerializableComponentAttribute">
            <summary>
                Marks component type to use <see cref="T:Geisha.Engine.Core.SceneModel.Serialization.SerializableComponent" /> as serializable representation.
            </summary>
            <remarks>
                Component marked with <see cref="T:Geisha.Engine.Core.SceneModel.Serialization.SerializableComponentAttribute" /> is automatically mapped to
                <see cref="T:Geisha.Engine.Core.SceneModel.Serialization.SerializableComponent" /> and does not require custom implementation of
                <see cref="T:Geisha.Engine.Core.SceneModel.Serialization.ISerializableComponent" /> interface. Use <see cref="T:Geisha.Engine.Core.SceneModel.Serialization.SerializablePropertyAttribute" /> to mark
                properties that should be mapped and serialized automatically.
            </remarks>
        </member>
        <member name="T:Geisha.Engine.Core.SceneModel.Serialization.SerializableComponentMapperAdapter`2">
            <inheritdoc />
            <summary>
                Adapter class simplifying implementation of <see cref="T:Geisha.Engine.Core.SceneModel.Serialization.ISerializableComponentMapper" />.
            </summary>
            <typeparam name="TComponent">Component type the mapper supports.</typeparam>
            <typeparam name="TSerializableComponent">Serializable component type the mapper supports.</typeparam>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Serialization.SerializableComponentMapperAdapter`2.IsApplicableForComponent(Geisha.Engine.Core.SceneModel.IComponent)">
            <inheritdoc />
            <summary>
                Tests applicability of this mapper for given component.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Serialization.SerializableComponentMapperAdapter`2.IsApplicableForSerializableComponent(Geisha.Engine.Core.SceneModel.Serialization.ISerializableComponent)">
            <inheritdoc />
            <summary>
                Tests applicability of this mapper for given serializable component.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Serialization.SerializableComponentMapperAdapter`2.MapToSerializable(Geisha.Engine.Core.SceneModel.IComponent)">
            <inheritdoc />
            <summary>
                Maps <see cref="T:Geisha.Engine.Core.SceneModel.IComponent" /> to <see cref="T:Geisha.Engine.Core.SceneModel.Serialization.ISerializableComponent" />.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Serialization.SerializableComponentMapperAdapter`2.MapFromSerializable(Geisha.Engine.Core.SceneModel.Serialization.ISerializableComponent)">
            <inheritdoc />
            <summary>
                Maps <see cref="T:Geisha.Engine.Core.SceneModel.Serialization.ISerializableComponent" /> to <see cref="T:Geisha.Engine.Core.SceneModel.IComponent" />.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Serialization.SerializableComponentMapperAdapter`2.MapToSerializable(`0)">
            <summary>
                Maps <typeparamref name="TComponent" /> to <typeparamref name="TSerializableComponent" />.
            </summary>
            <param name="component">Component to be mapped.</param>
            <returns>Serializable component that is equivalent of given component.</returns>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Serialization.SerializableComponentMapperAdapter`2.MapFromSerializable(`1)">
            <summary>
                Maps <typeparamref name="TSerializableComponent" /> to <typeparamref name="TComponent" />.
            </summary>
            <param name="serializableComponent">Serializable component to be mapped.</param>
            <returns>Component that is equivalent of given serializable component.</returns>
        </member>
        <member name="T:Geisha.Engine.Core.SceneModel.Serialization.ISerializableComponentMapperProvider">
            <summary>
                Provides functionality to get mapper for given <see cref="T:Geisha.Engine.Core.SceneModel.IComponent" /> or <see cref="T:Geisha.Engine.Core.SceneModel.Serialization.ISerializableComponent" />.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Serialization.ISerializableComponentMapperProvider.GetMapperFor(Geisha.Engine.Core.SceneModel.IComponent)">
            <summary>
                Returns mapper for given component.
            </summary>
            <param name="component">Component for which mapper is requested.</param>
            <returns>Mapper for given component.</returns>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Serialization.ISerializableComponentMapperProvider.GetMapperFor(Geisha.Engine.Core.SceneModel.Serialization.ISerializableComponent)">
            <summary>
                Returns mapper for given serializable component.
            </summary>
            <param name="serializableComponent">Serializable component for which mapper is requested.</param>
            <returns>Mapper for given serializable component.</returns>
        </member>
        <member name="T:Geisha.Engine.Core.SceneModel.Serialization.SerializableComponentMapperProvider">
            <inheritdoc />
            <summary>
                Provides functionality to get mapper for given <see cref="T:Geisha.Engine.Core.SceneModel.IComponent" /> or <see cref="T:Geisha.Engine.Core.SceneModel.Serialization.ISerializableComponent" />.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Serialization.SerializableComponentMapperProvider.GetMapperFor(Geisha.Engine.Core.SceneModel.IComponent)">
            <inheritdoc />
            <summary>
                Returns mapper for given component.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Serialization.SerializableComponentMapperProvider.GetMapperFor(Geisha.Engine.Core.SceneModel.Serialization.ISerializableComponent)">
            <inheritdoc />
            <summary>
                Returns mapper for given serializable component.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Core.SceneModel.Serialization.SerializableEntity">
            <summary>
                Represents serializable <see cref="T:Geisha.Engine.Core.SceneModel.Entity" /> that is used in a scene file content.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.SceneModel.Serialization.SerializableEntity.Name">
            <summary>
                Represents <see cref="P:Geisha.Engine.Core.SceneModel.Entity.Name" /> property of <see cref="T:Geisha.Engine.Core.SceneModel.Entity" />.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.SceneModel.Serialization.SerializableEntity.Children">
            <summary>
                Represents <see cref="P:Geisha.Engine.Core.SceneModel.Entity.Children" /> property of <see cref="T:Geisha.Engine.Core.SceneModel.Entity" />.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.SceneModel.Serialization.SerializableEntity.Components">
            <summary>
                Represents <see cref="P:Geisha.Engine.Core.SceneModel.Entity.Components" /> property of <see cref="T:Geisha.Engine.Core.SceneModel.Entity" />.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Core.SceneModel.Serialization.ISerializableEntityMapper">
            <summary>
                Provides functionality to map between <see cref="T:Geisha.Engine.Core.SceneModel.Entity" /> and <see cref="T:Geisha.Engine.Core.SceneModel.Serialization.SerializableEntity" /> in both
                directions.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Serialization.ISerializableEntityMapper.MapToSerializable(Geisha.Engine.Core.SceneModel.Entity)">
            <summary>
                Maps <see cref="T:Geisha.Engine.Core.SceneModel.Entity" /> to <see cref="T:Geisha.Engine.Core.SceneModel.Serialization.SerializableEntity" />.
            </summary>
            <param name="entity"><see cref="T:Geisha.Engine.Core.SceneModel.Entity" /> to be mapped.</param>
            <returns><see cref="T:Geisha.Engine.Core.SceneModel.Serialization.SerializableEntity" /> that is equivalent of given <see cref="T:Geisha.Engine.Core.SceneModel.Entity" />.</returns>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Serialization.ISerializableEntityMapper.MapFromSerializable(Geisha.Engine.Core.SceneModel.Serialization.SerializableEntity)">
            <summary>
                Maps <see cref="T:Geisha.Engine.Core.SceneModel.Serialization.SerializableEntity" /> to <see cref="T:Geisha.Engine.Core.SceneModel.Entity" />.
            </summary>
            <param name="serializableEntity"><see cref="T:Geisha.Engine.Core.SceneModel.Serialization.SerializableEntity" /> to be mapped.</param>
            <returns><see cref="T:Geisha.Engine.Core.SceneModel.Entity" /> that is equivalent of given <see cref="T:Geisha.Engine.Core.SceneModel.Serialization.SerializableEntity" />.</returns>
        </member>
        <member name="T:Geisha.Engine.Core.SceneModel.Serialization.SerializableEntityMapper">
            <inheritdoc />
            <summary>
                Provides functionality to map between <see cref="T:Geisha.Engine.Core.SceneModel.Entity" /> and <see cref="T:Geisha.Engine.Core.SceneModel.Serialization.SerializableEntity" /> in both
                directions.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Serialization.SerializableEntityMapper.MapToSerializable(Geisha.Engine.Core.SceneModel.Entity)">
            <inheritdoc />
            <summary>
                Maps <see cref="T:Geisha.Engine.Core.SceneModel.Entity" /> to <see cref="T:Geisha.Engine.Core.SceneModel.Serialization.SerializableEntity" />.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Serialization.SerializableEntityMapper.MapFromSerializable(Geisha.Engine.Core.SceneModel.Serialization.SerializableEntity)">
            <inheritdoc />
            <summary>
                Maps <see cref="T:Geisha.Engine.Core.SceneModel.Serialization.SerializableEntity" /> to <see cref="T:Geisha.Engine.Core.SceneModel.Entity" />.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Core.SceneModel.Serialization.SerializablePropertyAttribute">
            <summary>
                Marks property of component to be mapped and serialized automatically. Component should be marked with
                <see cref="T:Geisha.Engine.Core.SceneModel.Serialization.SerializableComponentAttribute" />.
            </summary>
            <remarks>
                Property types supported for automatic serialization are: <see cref="T:System.Int32" />, <see cref="T:System.Double" />,
                <see cref="T:System.String" />.
            </remarks>
        </member>
        <member name="T:Geisha.Engine.Core.SceneModel.Serialization.SerializableScene">
            <summary>
                Represents serializable <see cref="T:Geisha.Engine.Core.SceneModel.Scene" /> that is used as a scene file content.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.SceneModel.Serialization.SerializableScene.RootEntities">
            <summary>
                Represents <see cref="P:Geisha.Engine.Core.SceneModel.Scene.RootEntities" /> property of <see cref="T:Geisha.Engine.Core.SceneModel.Scene" />.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Core.SceneModel.Serialization.SerializableScene.ConstructionScript">
            <summary>
                Represents <see cref="P:Geisha.Engine.Core.SceneModel.Scene.ConstructionScript" /> property of <see cref="T:Geisha.Engine.Core.SceneModel.Scene" />.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Core.SceneModel.Serialization.ISerializableSceneMapper">
            <summary>
                Provides functionality to map between <see cref="T:Geisha.Engine.Core.SceneModel.Scene" /> and <see cref="T:Geisha.Engine.Core.SceneModel.Serialization.SerializableScene" /> in both directions.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Serialization.ISerializableSceneMapper.MapToSerializable(Geisha.Engine.Core.SceneModel.Scene)">
            <summary>
                Maps <see cref="T:Geisha.Engine.Core.SceneModel.Scene" /> to <see cref="T:Geisha.Engine.Core.SceneModel.Serialization.SerializableScene" />.
            </summary>
            <param name="scene"><see cref="T:Geisha.Engine.Core.SceneModel.Scene" /> to be mapped.</param>
            <returns><see cref="T:Geisha.Engine.Core.SceneModel.Serialization.SerializableScene" /> that is equivalent of given <see cref="T:Geisha.Engine.Core.SceneModel.Scene" />.</returns>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Serialization.ISerializableSceneMapper.MapFromSerializable(Geisha.Engine.Core.SceneModel.Serialization.SerializableScene)">
            <summary>
                Maps <see cref="T:Geisha.Engine.Core.SceneModel.Serialization.SerializableScene" /> to <see cref="T:Geisha.Engine.Core.SceneModel.Scene" />.
            </summary>
            <param name="serializableScene"><see cref="T:Geisha.Engine.Core.SceneModel.Serialization.SerializableScene" /> to be mapped.</param>
            <returns><see cref="T:Geisha.Engine.Core.SceneModel.Scene" /> that is equivalent of given <see cref="T:Geisha.Engine.Core.SceneModel.Serialization.SerializableScene" />.</returns>
        </member>
        <member name="T:Geisha.Engine.Core.SceneModel.Serialization.SerializableSceneMapper">
            <inheritdoc />
            <summary>
                Provides functionality to map between <see cref="T:Geisha.Engine.Core.SceneModel.Scene" /> and <see cref="T:Geisha.Engine.Core.SceneModel.Serialization.SerializableScene" /> in both directions.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Serialization.SerializableSceneMapper.MapToSerializable(Geisha.Engine.Core.SceneModel.Scene)">
            <inheritdoc />
            <summary>
                Maps <see cref="T:Geisha.Engine.Core.SceneModel.Scene" /> to <see cref="T:Geisha.Engine.Core.SceneModel.Serialization.SerializableScene" />.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Core.SceneModel.Serialization.SerializableSceneMapper.MapFromSerializable(Geisha.Engine.Core.SceneModel.Serialization.SerializableScene)">
            <inheritdoc />
            <summary>
                Maps <see cref="T:Geisha.Engine.Core.SceneModel.Serialization.SerializableScene" /> to <see cref="T:Geisha.Engine.Core.SceneModel.Scene" />.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Input.Assets.Serialization.InputMappingFileContent">
            <summary>
                Represents input mapping file content to be used to load <see cref="T:Geisha.Engine.Input.Mapping.InputMapping" /> from a file into memory.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.Assets.Serialization.InputMappingFileContent.AssetId">
            <summary>
                Asset id.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.Assets.Serialization.InputMappingFileContent.ActionMappings">
            <summary>
                Action mappings dictionary. Dictionary key is an action name and value is a list of hardware actions.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.Assets.Serialization.InputMappingFileContent.AxisMappings">
            <summary>
                Axis mappings dictionary. Dictionary key is an axis name and value is a list of hardware axes.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Input.Assets.Serialization.SerializableHardwareAction">
            <summary>
                Represents <see cref="T:Geisha.Engine.Input.Mapping.HardwareAction" /> in input mapping file content.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.Assets.Serialization.SerializableHardwareAction.Key">
            <summary>
                Keyboard key mapped to action.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.Assets.Serialization.SerializableHardwareAction.MouseButton">
            <summary>
                Mouse button mapped to action.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Input.Assets.Serialization.SerializableHardwareAxis">
            <summary>
                Represents <see cref="T:Geisha.Engine.Input.Mapping.HardwareAxis" /> in input mapping file content.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.Assets.Serialization.SerializableHardwareAxis.Key">
            <summary>
                Keyboard key mapped to axis.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.Assets.Serialization.SerializableHardwareAxis.MouseAxis">
            <summary>
                Mouse axis mapped to axis.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.Assets.Serialization.SerializableHardwareAxis.Scale">
            <summary>
                Scaling factor of hardware axis state to logical axis state.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Input.Assets.Serialization.MouseButton">
            <summary>
                Enumerates mouse buttons supported as hardware actions in input mapping file content.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Assets.Serialization.MouseButton.LeftButton">
            <summary>
                Left mouse button.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Assets.Serialization.MouseButton.MiddleButton">
            <summary>
                Middle mouse button.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Assets.Serialization.MouseButton.RightButton">
            <summary>
                Right mouse button.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Assets.Serialization.MouseButton.XButton1">
            <summary>
                First extended mouse button.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Assets.Serialization.MouseButton.XButton2">
            <summary>
                Second extended mouse button.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Input.Assets.Serialization.MouseAxis">
            <summary>
                Enumerates mouse axes supported as hardware axes in input mapping file content.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Assets.Serialization.MouseAxis.AxisX">
            <summary>
                Horizontal axis of mouse movement.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Assets.Serialization.MouseAxis.AxisY">
            <summary>
                Vertical axis of mouse movement.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Input.Assets.InvalidInputMappingFileContentException">
            <summary>
                The exception that is thrown when loading input mapping asset from invalid input mapping file.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.Assets.InvalidInputMappingFileContentException.InputMappingFileContent">
            <summary>
                Asset info of asset that registration has failed.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Input.Components.InputComponent">
            <summary>
                Input component provides access to user input both direct hardware input and mapped logical input.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.Components.InputComponent.InputMapping">
            <summary>
                Input mapping attached to input component.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.Components.InputComponent.HardwareInput">
            <summary>
                Hardware input captured directly from input devices.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Input.Components.InputComponent.BindAction(System.String,System.Action)">
            <summary>
                Binds an <see cref="T:System.Action" /> to given action name that will be executed whenever action becomes active.
            </summary>
            <param name="actionName">Name of action to be bound.</param>
            <param name="action">Action to be executed.</param>
            <remarks>
                Bound <see cref="T:System.Action" /> is executed once when action becomes active. Action needs to become inactive and
                active again to execute bound <see cref="T:System.Action" /> again.
            </remarks>
        </member>
        <member name="M:Geisha.Engine.Input.Components.InputComponent.BindAxis(System.String,System.Action{System.Double})">
            <summary>
                Binds an <see cref="T:System.Action" /> to given axis name that will be executed every fixed update.
            </summary>
            <param name="axisName">Name of axis to be bound.</param>
            <param name="action">Action to be executed. Double parameter accepted by action is state of axis.</param>
        </member>
        <member name="M:Geisha.Engine.Input.Components.InputComponent.GetActionState(System.String)">
            <summary>
                Gets state of given action.
            </summary>
            <param name="actionName">
                Action name. If action with given name was not defined in <see cref="P:Geisha.Engine.Input.Components.InputComponent.InputMapping" /> this
                method throws an exception.
            </param>
            <returns>True if action is active (associated key is pressed); otherwise false.</returns>
        </member>
        <member name="M:Geisha.Engine.Input.Components.InputComponent.GetAxisState(System.String)">
            <summary>
                Gets state of given axis.
            </summary>
            <param name="axisName">
                Axis name. If axis with given name was not defined in <see cref="P:Geisha.Engine.Input.Components.InputComponent.InputMapping" /> this method
                throws an exception.
            </param>
            <returns>
                Non zero if axis is triggered; otherwise zero. Can be positive and negative depending on axis tilt direction.
                Amount depends on how much axis is triggered.
            </returns>
        </member>
        <member name="T:Geisha.Engine.Input.Components.Serialization.SerializableInputComponent">
            <inheritdoc />
            <summary>
                Represents serializable <see cref="T:Geisha.Engine.Input.Components.InputComponent" /> that is used in a scene file content.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.Components.Serialization.SerializableInputComponent.InputMappingAssetId">
            <summary>
                Asset id of <see cref="T:Geisha.Engine.Input.Mapping.InputMapping" /> asset.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Input.HardwareInput">
            <summary>
                Represents state of hardware input devices.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Input.HardwareInput.#ctor(Geisha.Engine.Input.KeyboardInput,Geisha.Engine.Input.MouseInput)">
            <summary>
                Creates new instance of <see cref="T:Geisha.Engine.Input.HardwareInput" /> class with specified <see cref="P:Geisha.Engine.Input.HardwareInput.KeyboardInput" /> and
                <see cref="P:Geisha.Engine.Input.HardwareInput.MouseInput" />.
            </summary>
            <param name="keyboardInput">Keyboard input part of the hardware input.</param>
            <param name="mouseInput">Mouse input part of the hardware input.</param>
        </member>
        <member name="P:Geisha.Engine.Input.HardwareInput.Empty">
            <summary>
                Empty hardware input.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.HardwareInput.KeyboardInput">
            <summary>
                State of keyboard.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.HardwareInput.MouseInput">
            <summary>
                State of mouse.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Input.IInputBackend">
            <summary>
                Defines interface of input backend used by the engine.
            </summary>
            <remarks>
                Input backend provides services for reading state of input devices available on certain platform.
            </remarks>
        </member>
        <member name="M:Geisha.Engine.Input.IInputBackend.CreateInputProvider">
            <summary>
                Creates input provider suitable for current platform.
            </summary>
            <returns>New instance of <see cref="T:Geisha.Engine.Input.IInputProvider" /> suitable for current platform.</returns>
        </member>
        <member name="T:Geisha.Engine.Input.IInputProvider">
            <summary>
                Specifies API for capturing current state of input devices.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.IInputProvider.LockCursorPosition">
            <summary>
                Specifies whether to lock the cursor position at center of the window/screen. If <c>true</c> the cursor is
                successively moved to the center of the window/screen; otherwise it is unlocked and can move freely.
            </summary>
            <remarks>
                It is useful to lock the cursor position (and often to hide it) when mouse is used as two-directional axis
                input e.g. in FPS game to move the camera.
            </remarks>
        </member>
        <member name="M:Geisha.Engine.Input.IInputProvider.Capture">
            <summary>
                Captures current state of input devices as instance of <see cref="T:Geisha.Engine.Input.HardwareInput" /> class.
            </summary>
            <returns><see cref="T:Geisha.Engine.Input.HardwareInput" /> instance that represents captured state of input devices.</returns>
        </member>
        <member name="T:Geisha.Engine.Input.InputModule">
            <summary>
                Provides input system and related components.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Input.Key">
            <summary>
                Specifies keyboard keys.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.Backspace">
            <summary>
                The Backspace key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.Tab">
            <summary>
                The Tab key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.Enter">
            <summary>
                The Enter key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.LeftShift">
            <summary>
                The left Shift key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.RightShift">
            <summary>
                The right Shift key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.LeftCtrl">
            <summary>
                The left CTRL key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.RightCtrl">
            <summary>
                The right CTRL key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.LeftAlt">
            <summary>
                The left ALT key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.RightAlt">
            <summary>
                The right ALT key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.Pause">
            <summary>
                The Pause key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.CapsLock">
            <summary>
                The Caps Lock key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.Escape">
            <summary>
                The ESC key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.Space">
            <summary>
                The Spacebar key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.PageUp">
            <summary>
                The Page Up key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.PageDown">
            <summary>
                The Page Down key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.End">
            <summary>
                The End key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.Home">
            <summary>
                The Home key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.Left">
            <summary>
                The Left Arrow key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.Up">
            <summary>
                The Up Arrow key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.Right">
            <summary>
                The Right Arrow key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.Down">
            <summary>
                The Down Arrow key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.Insert">
            <summary>
                The Insert key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.Delete">
            <summary>
                The Delete key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.D0">
            <summary>
                The 0 key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.D1">
            <summary>
                The 1 key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.D2">
            <summary>
                The 2 key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.D3">
            <summary>
                The 3 key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.D4">
            <summary>
                The 4 key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.D5">
            <summary>
                The 5 key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.D6">
            <summary>
                The 6 key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.D7">
            <summary>
                The 7 key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.D8">
            <summary>
                The 8 key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.D9">
            <summary>
                The 9 key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.A">
            <summary>
                The A key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.B">
            <summary>
                The B key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.C">
            <summary>
                The C key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.D">
            <summary>
                The D key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.E">
            <summary>
                The E key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.F">
            <summary>
                The F key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.G">
            <summary>
                The G key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.H">
            <summary>
                The H key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.I">
            <summary>
                The I key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.J">
            <summary>
                The J key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.K">
            <summary>
                The K key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.L">
            <summary>
                The L key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.M">
            <summary>
                The M key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.N">
            <summary>
                The N key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.O">
            <summary>
                The O key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.P">
            <summary>
                The P key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.Q">
            <summary>
                The Q key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.R">
            <summary>
                The R key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.S">
            <summary>
                The S key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.T">
            <summary>
                The T key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.U">
            <summary>
                The U key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.V">
            <summary>
                The V key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.W">
            <summary>
                The W key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.X">
            <summary>
                The X key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.Y">
            <summary>
                The Y key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.Z">
            <summary>
                The Z key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.NumPad0">
            <summary>
                The 0 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.NumPad1">
            <summary>
                The 1 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.NumPad2">
            <summary>
                The 2 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.NumPad3">
            <summary>
                The 3 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.NumPad4">
            <summary>
                The 4 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.NumPad5">
            <summary>
                The 5 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.NumPad6">
            <summary>
                The 6 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.NumPad7">
            <summary>
                The 7 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.NumPad8">
            <summary>
                The 8 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.NumPad9">
            <summary>
                The 9 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.Multiply">
            <summary>
                The Multiply key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.Add">
            <summary>
                The Add key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.Subtract">
            <summary>
                The Subtract key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.Decimal">
            <summary>
                The Decimal key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.Divide">
            <summary>
                The Divide key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.F1">
            <summary>
                The F1 key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.F2">
            <summary>
                The F2 key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.F3">
            <summary>
                The F3 key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.F4">
            <summary>
                The F4 key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.F5">
            <summary>
                The F5 key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.F6">
            <summary>
                The F6 key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.F7">
            <summary>
                The F7 key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.F8">
            <summary>
                The F8 key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.F9">
            <summary>
                The F9 key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.F10">
            <summary>
                The F10 key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.F11">
            <summary>
                The F11 key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.F12">
            <summary>
                The F12 key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.NumLock">
            <summary>
                The Num Lock key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.ScrollLock">
            <summary>
                The Scroll Lock key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.Semicolon">
            <summary>
                The Semicolon key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.EqualsSign">
            <summary>
                The Equals Sign key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.Comma">
            <summary>
                The Comma key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.Dash">
            <summary>
                The Dash key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.Period">
            <summary>
                The Period key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.Slash">
            <summary>
                The Slash key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.Tilde">
            <summary>
                The Tilde key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.OpenBrackets">
            <summary>
                The Open Brackets key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.Backslash">
            <summary>
                The Backslash key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.CloseBrackets">
            <summary>
                The Close Brackets key.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Key.Quotes">
            <summary>
                The Quotes key.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Input.KeyboardInput">
            <summary>
                Represents state of the keyboard.
            </summary>
            <remarks>
                Value <c>true</c> of key state means the key is in pressed state. Value <c>false</c> of key state means the
                key is in released state.
            </remarks>
        </member>
        <member name="M:Geisha.Engine.Input.KeyboardInput.#ctor(Geisha.Engine.Input.KeyboardInputBuilder)">
            <summary>
                Creates new instance of <see cref="T:Geisha.Engine.Input.KeyboardInput" /> struct initialized as defined by
                <see cref="T:Geisha.Engine.Input.KeyboardInputBuilder" /> instance.
            </summary>
            <param name="keyboardInputBuilder">
                <see cref="T:Geisha.Engine.Input.KeyboardInputBuilder" /> instance that defines state of all keyboard keys.
            </param>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.Item(Geisha.Engine.Input.Key)">
            <summary>
                Returns state of single keyboard key.
            </summary>
            <param name="key">Key whose state is requested.</param>
            <returns>True, if key is pressed; otherwise false.</returns>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.Backspace">
            <summary>
                State of the Backspace key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.Tab">
            <summary>
                State of the Tab key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.Enter">
            <summary>
                State of the Enter key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.LeftShift">
            <summary>
                State of the left Shift key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.RightShift">
            <summary>
                State of the right Shift key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.LeftCtrl">
            <summary>
                State of the left CTRL key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.RightCtrl">
            <summary>
                State of the right CTRL key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.LeftAlt">
            <summary>
                State of the left ALT key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.RightAlt">
            <summary>
                State of the right ALT key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.Pause">
            <summary>
                State of the Pause key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.CapsLock">
            <summary>
                State of the Caps Lock key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.Escape">
            <summary>
                State of the ESC key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.Space">
            <summary>
                State of the Spacebar key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.PageUp">
            <summary>
                State of the Page Up key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.PageDown">
            <summary>
                State of the Page Down key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.End">
            <summary>
                State of the End key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.Home">
            <summary>
                State of the Home key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.Left">
            <summary>
                State of the Left Arrow key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.Up">
            <summary>
                State of the Up Arrow key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.Right">
            <summary>
                State of the Right Arrow key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.Down">
            <summary>
                State of the Down Arrow key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.Insert">
            <summary>
                State of the Insert key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.Delete">
            <summary>
                State of the Delete key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.D0">
            <summary>
                State of the 0 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.D1">
            <summary>
                State of the 1 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.D2">
            <summary>
                State of the 2 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.D3">
            <summary>
                State of the 3 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.D4">
            <summary>
                State of the 4 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.D5">
            <summary>
                State of the 5 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.D6">
            <summary>
                State of the 6 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.D7">
            <summary>
                State of the 7 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.D8">
            <summary>
                State of the 8 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.D9">
            <summary>
                State of the 9 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.A">
            <summary>
                State of the A key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.B">
            <summary>
                State of the B key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.C">
            <summary>
                State of the C key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.D">
            <summary>
                State of the D key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.E">
            <summary>
                State of the E key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.F">
            <summary>
                State of the F key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.G">
            <summary>
                State of the G key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.H">
            <summary>
                State of the H key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.I">
            <summary>
                State of the I key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.J">
            <summary>
                State of the J key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.K">
            <summary>
                State of the K key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.L">
            <summary>
                State of the L key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.M">
            <summary>
                State of the M key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.N">
            <summary>
                State of the N key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.O">
            <summary>
                State of the O key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.P">
            <summary>
                State of the P key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.Q">
            <summary>
                State of the Q key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.R">
            <summary>
                State of the R key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.S">
            <summary>
                State of the S key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.T">
            <summary>
                State of the T key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.U">
            <summary>
                State of the U key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.V">
            <summary>
                State of the V key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.W">
            <summary>
                State of the W key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.X">
            <summary>
                State of the X key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.Y">
            <summary>
                State of the Y key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.Z">
            <summary>
                State of the Z key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.NumPad0">
            <summary>
                State of the 0 key on the numeric keypad. <c>true</c> indicates pressed state, while <c>false</c> indicates
                released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.NumPad1">
            <summary>
                State of the 1 key on the numeric keypad. <c>true</c> indicates pressed state, while <c>false</c> indicates
                released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.NumPad2">
            <summary>
                State of the 2 key on the numeric keypad. <c>true</c> indicates pressed state, while <c>false</c> indicates
                released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.NumPad3">
            <summary>
                State of the 3 key on the numeric keypad. <c>true</c> indicates pressed state, while <c>false</c> indicates
                released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.NumPad4">
            <summary>
                State of the 4 key on the numeric keypad. <c>true</c> indicates pressed state, while <c>false</c> indicates
                released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.NumPad5">
            <summary>
                State of the 5 key on the numeric keypad. <c>true</c> indicates pressed state, while <c>false</c> indicates
                released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.NumPad6">
            <summary>
                State of the 6 key on the numeric keypad. <c>true</c> indicates pressed state, while <c>false</c> indicates
                released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.NumPad7">
            <summary>
                State of the 7 key on the numeric keypad. <c>true</c> indicates pressed state, while <c>false</c> indicates
                released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.NumPad8">
            <summary>
                State of the 8 key on the numeric keypad. <c>true</c> indicates pressed state, while <c>false</c> indicates
                released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.NumPad9">
            <summary>
                State of the 9 key on the numeric keypad. <c>true</c> indicates pressed state, while <c>false</c> indicates
                released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.Multiply">
            <summary>
                State of the Multiply key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.Add">
            <summary>
                State of the Add key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.Subtract">
            <summary>
                State of the Subtract key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.Decimal">
            <summary>
                State of the Decimal key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.Divide">
            <summary>
                State of the Divide key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.F1">
            <summary>
                State of the F1 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.F2">
            <summary>
                State of the F2 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.F3">
            <summary>
                State of the F3 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.F4">
            <summary>
                State of the F4 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.F5">
            <summary>
                State of the F5 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.F6">
            <summary>
                State of the F6 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.F7">
            <summary>
                State of the F7 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.F8">
            <summary>
                State of the F8 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.F9">
            <summary>
                State of the F9 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.F10">
            <summary>
                State of the F10 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.F11">
            <summary>
                State of the F11 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.F12">
            <summary>
                State of the F12 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.NumLock">
            <summary>
                State of the Num Lock key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.ScrollLock">
            <summary>
                State of the Scroll Lock key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.Semicolon">
            <summary>
                State of the Semicolon key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.EqualsSign">
            <summary>
                State of the Equals Sign key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.Comma">
            <summary>
                State of the Comma key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.Dash">
            <summary>
                State of the Dash key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.Period">
            <summary>
                State of the Period key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.Slash">
            <summary>
                State of the Slash key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.Tilde">
            <summary>
                State of the Tilde key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.OpenBrackets">
            <summary>
                State of the Open Brackets key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.Backslash">
            <summary>
                State of the Backslash key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.CloseBrackets">
            <summary>
                State of the Close Brackets key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInput.Quotes">
            <summary>
                State of the Quotes key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Input.KeyboardInputBuilder">
            <summary>
                Provides simple way of setting initial state of <see cref="T:Geisha.Engine.Input.KeyboardInput" />. Represents temporary state of
                keyboard and allows to create actual <see cref="T:Geisha.Engine.Input.KeyboardInput" /> in that state.
            </summary>
            <remarks>
                Value <c>true</c> of key state means the key is in pressed state. Value <c>false</c> of key state means the
                key is in released state.
            </remarks>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.Backspace">
            <summary>
                State of the Backspace key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.Tab">
            <summary>
                State of the Tab key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.Enter">
            <summary>
                State of the Enter key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.LeftShift">
            <summary>
                State of the left Shift key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.RightShift">
            <summary>
                State of the right Shift key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.LeftCtrl">
            <summary>
                State of the left CTRL key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.RightCtrl">
            <summary>
                State of the right CTRL key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.LeftAlt">
            <summary>
                State of the left ALT key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.RightAlt">
            <summary>
                State of the right ALT key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.Pause">
            <summary>
                State of the Pause key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.CapsLock">
            <summary>
                State of the Caps Lock key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.Escape">
            <summary>
                State of the ESC key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.Space">
            <summary>
                State of the Spacebar key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.PageUp">
            <summary>
                State of the Page Up key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.PageDown">
            <summary>
                State of the Page Down key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.End">
            <summary>
                State of the End key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.Home">
            <summary>
                State of the Home key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.Left">
            <summary>
                State of the Left Arrow key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.Up">
            <summary>
                State of the Up Arrow key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.Right">
            <summary>
                State of the Right Arrow key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.Down">
            <summary>
                State of the Down Arrow key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.Insert">
            <summary>
                State of the Insert key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.Delete">
            <summary>
                State of the Delete key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.D0">
            <summary>
                State of the 0 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.D1">
            <summary>
                State of the 1 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.D2">
            <summary>
                State of the 2 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.D3">
            <summary>
                State of the 3 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.D4">
            <summary>
                State of the 4 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.D5">
            <summary>
                State of the 5 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.D6">
            <summary>
                State of the 6 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.D7">
            <summary>
                State of the 7 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.D8">
            <summary>
                State of the 8 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.D9">
            <summary>
                State of the 9 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.A">
            <summary>
                State of the A key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.B">
            <summary>
                State of the B key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.C">
            <summary>
                State of the C key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.D">
            <summary>
                State of the D key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.E">
            <summary>
                State of the E key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.F">
            <summary>
                State of the F key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.G">
            <summary>
                State of the G key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.H">
            <summary>
                State of the H key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.I">
            <summary>
                State of the I key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.J">
            <summary>
                State of the J key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.K">
            <summary>
                State of the K key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.L">
            <summary>
                State of the L key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.M">
            <summary>
                State of the M key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.N">
            <summary>
                State of the N key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.O">
            <summary>
                State of the O key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.P">
            <summary>
                State of the P key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.Q">
            <summary>
                State of the Q key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.R">
            <summary>
                State of the R key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.S">
            <summary>
                State of the S key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.T">
            <summary>
                State of the T key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.U">
            <summary>
                State of the U key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.V">
            <summary>
                State of the V key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.W">
            <summary>
                State of the W key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.X">
            <summary>
                State of the X key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.Y">
            <summary>
                State of the Y key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.Z">
            <summary>
                State of the Z key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.NumPad0">
            <summary>
                State of the 0 key on the numeric keypad. <c>true</c> indicates pressed state, while <c>false</c> indicates
                released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.NumPad1">
            <summary>
                State of the 1 key on the numeric keypad. <c>true</c> indicates pressed state, while <c>false</c> indicates
                released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.NumPad2">
            <summary>
                State of the 2 key on the numeric keypad. <c>true</c> indicates pressed state, while <c>false</c> indicates
                released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.NumPad3">
            <summary>
                State of the 3 key on the numeric keypad. <c>true</c> indicates pressed state, while <c>false</c> indicates
                released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.NumPad4">
            <summary>
                State of the 4 key on the numeric keypad. <c>true</c> indicates pressed state, while <c>false</c> indicates
                released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.NumPad5">
            <summary>
                State of the 5 key on the numeric keypad. <c>true</c> indicates pressed state, while <c>false</c> indicates
                released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.NumPad6">
            <summary>
                State of the 6 key on the numeric keypad. <c>true</c> indicates pressed state, while <c>false</c> indicates
                released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.NumPad7">
            <summary>
                State of the 7 key on the numeric keypad. <c>true</c> indicates pressed state, while <c>false</c> indicates
                released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.NumPad8">
            <summary>
                State of the 8 key on the numeric keypad. <c>true</c> indicates pressed state, while <c>false</c> indicates
                released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.NumPad9">
            <summary>
                State of the 9 key on the numeric keypad. <c>true</c> indicates pressed state, while <c>false</c> indicates
                released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.Multiply">
            <summary>
                State of the Multiply key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.Add">
            <summary>
                State of the Add key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.Subtract">
            <summary>
                State of the Subtract key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.Decimal">
            <summary>
                State of the Decimal key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.Divide">
            <summary>
                State of the Divide key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.F1">
            <summary>
                State of the F1 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.F2">
            <summary>
                State of the F2 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.F3">
            <summary>
                State of the F3 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.F4">
            <summary>
                State of the F4 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.F5">
            <summary>
                State of the F5 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.F6">
            <summary>
                State of the F6 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.F7">
            <summary>
                State of the F7 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.F8">
            <summary>
                State of the F8 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.F9">
            <summary>
                State of the F9 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.F10">
            <summary>
                State of the F10 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.F11">
            <summary>
                State of the F11 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.F12">
            <summary>
                State of the F12 key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.NumLock">
            <summary>
                State of the Num Lock key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.ScrollLock">
            <summary>
                State of the Scroll Lock key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.Semicolon">
            <summary>
                State of the Semicolon key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.EqualsSign">
            <summary>
                State of the Equals Sign key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.Comma">
            <summary>
                State of the Comma key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.Dash">
            <summary>
                State of the Dash key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.Period">
            <summary>
                State of the Period key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.Slash">
            <summary>
                State of the Slash key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.Tilde">
            <summary>
                State of the Tilde key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.OpenBrackets">
            <summary>
                State of the Open Brackets key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.Backslash">
            <summary>
                State of the Backslash key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.CloseBrackets">
            <summary>
                State of the Close Brackets key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.KeyboardInputBuilder.Quotes">
            <summary>
                State of the Quotes key. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Input.KeyboardInputBuilder.Build">
            <summary>
                Creates new <see cref="T:Geisha.Engine.Input.KeyboardInput" /> with the state of keys defined by the current state of the builder.
            </summary>
            <returns><see cref="T:Geisha.Engine.Input.KeyboardInput" /> with the state of keys defined by the current state of the builder.</returns>
        </member>
        <member name="T:Geisha.Engine.Input.Mapping.HardwareInputVariant">
            <summary>
                Represents single element of <see cref="T:Geisha.Engine.Input.HardwareInput" /> like a particular keyboard key, mouse button, mouse axis.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Input.Mapping.HardwareInputVariant.CreateKeyboardVariant(Geisha.Engine.Input.Key)">
            <summary>
                Creates new instance of <see cref="T:Geisha.Engine.Input.Mapping.HardwareInputVariant" /> that represents keyboard input variant like a
                particular keyboard key.
            </summary>
            <param name="keyboardVariant">
                Variant of keyboard input to be represented by <see cref="T:Geisha.Engine.Input.Mapping.HardwareInputVariant" />
                instance.
            </param>
            <returns><see cref="T:Geisha.Engine.Input.Mapping.HardwareInputVariant" /> representing specified keyboard variant.</returns>
        </member>
        <member name="M:Geisha.Engine.Input.Mapping.HardwareInputVariant.CreateMouseVariant(Geisha.Engine.Input.Mapping.HardwareInputVariant.MouseVariant)">
            <summary>
                Creates new instance of <see cref="T:Geisha.Engine.Input.Mapping.HardwareInputVariant" /> that represents mouse input variant like a particular
                mouse button or mouse axis.
            </summary>
            <param name="mouseVariant">Variant of mouse input to be represented by <see cref="T:Geisha.Engine.Input.Mapping.HardwareInputVariant" /> instance.</param>
            <returns><see cref="T:Geisha.Engine.Input.Mapping.HardwareInputVariant" /> representing specified mouse variant.</returns>
        </member>
        <member name="T:Geisha.Engine.Input.Mapping.HardwareInputVariant.Variant">
            <summary>
                Type of input source, namely a hardware input device.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Mapping.HardwareInputVariant.Variant.Keyboard">
            <summary>
                Keyboard input device.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Mapping.HardwareInputVariant.Variant.Mouse">
            <summary>
                Mouse input device.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Input.Mapping.HardwareInputVariant.MouseVariant">
            <summary>
                Enumerates supported variants of mouse input.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Mapping.HardwareInputVariant.MouseVariant.LeftButton">
            <summary>
                Left mouse button.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Mapping.HardwareInputVariant.MouseVariant.MiddleButton">
            <summary>
                Middle mouse button.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Mapping.HardwareInputVariant.MouseVariant.RightButton">
            <summary>
                Right mouse button.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Mapping.HardwareInputVariant.MouseVariant.XButton1">
            <summary>
                First extended mouse button.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Mapping.HardwareInputVariant.MouseVariant.XButton2">
            <summary>
                Second extended mouse button.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Mapping.HardwareInputVariant.MouseVariant.AxisX">
            <summary>
                Horizontal axis of mouse movement.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Input.Mapping.HardwareInputVariant.MouseVariant.AxisY">
            <summary>
                Vertical axis of mouse movement.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.Mapping.HardwareInputVariant.CurrentVariant">
            <summary>
                Current variant of input source type.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Input.Mapping.HardwareInputVariant.AsKeyboard">
            <summary>
                Converts this instance of <see cref="T:Geisha.Engine.Input.Mapping.HardwareInputVariant" /> to keyboard variant if possible.
            </summary>
            <returns><see cref="T:Geisha.Engine.Input.Key" /> of keyboard if this instance is keyboard variant; otherwise throws exception.</returns>
            <exception cref="T:Geisha.Engine.Input.Mapping.InvalidOperationForCurrentVariantException">
                Thrown when <see cref="P:Geisha.Engine.Input.Mapping.HardwareInputVariant.CurrentVariant" /> is not
                <see cref="F:Geisha.Engine.Input.Mapping.HardwareInputVariant.Variant.Keyboard" />.
            </exception>
        </member>
        <member name="M:Geisha.Engine.Input.Mapping.HardwareInputVariant.AsMouse">
            <summary>
                Converts this instance of <see cref="T:Geisha.Engine.Input.Mapping.HardwareInputVariant" /> to mouse variant if possible.
            </summary>
            <returns><see cref="T:Geisha.Engine.Input.Mapping.HardwareInputVariant.MouseVariant" /> if this instance is mouse variant; otherwise throws exception.</returns>
            <exception cref="T:Geisha.Engine.Input.Mapping.InvalidOperationForCurrentVariantException">
                Thrown when <see cref="P:Geisha.Engine.Input.Mapping.HardwareInputVariant.CurrentVariant" /> is not
                <see cref="F:Geisha.Engine.Input.Mapping.HardwareInputVariant.Variant.Mouse" />.
            </exception>
        </member>
        <member name="M:Geisha.Engine.Input.Mapping.HardwareInputVariant.ToString">
            <summary>
                Converts the value of the current <see cref="T:Geisha.Engine.Input.Mapping.HardwareInputVariant" /> object to its equivalent string
                representation.
            </summary>
            <returns>A string representation of the value of the current <see cref="T:Geisha.Engine.Input.Mapping.HardwareInputVariant" /> object.</returns>
        </member>
        <member name="M:Geisha.Engine.Input.Mapping.HardwareInputVariant.Equals(Geisha.Engine.Input.Mapping.HardwareInputVariant)">
            <summary>
                Returns a value indicating whether the value of this instance is equal to the value of the specified
                <see cref="T:Geisha.Engine.Input.Mapping.HardwareInputVariant" /> instance.
            </summary>
            <param name="other">The object to compare to this instance.</param>
            <returns>
                <c>true</c> if the <paramref name="other" /> parameter equals the value of this instance; otherwise,
                <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Engine.Input.Mapping.HardwareInputVariant.Equals(System.Object)">
            <summary>
                Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="obj">The object to compare to this instance.</param>
            <returns>
                <c>true</c> if <paramref name="obj" /> is an instance of <see cref="T:Geisha.Engine.Input.Mapping.HardwareInputVariant" /> and equals the value
                of this
                instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Engine.Input.Mapping.HardwareInputVariant.GetHashCode">
            <summary>
                Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Geisha.Engine.Input.Mapping.HardwareInputVariant.op_Equality(Geisha.Engine.Input.Mapping.HardwareInputVariant,Geisha.Engine.Input.Mapping.HardwareInputVariant)">
            <summary>
                Determines whether two specified instances of <see cref="T:Geisha.Engine.Input.Mapping.HardwareInputVariant" /> are equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> and <paramref name="right" /> represent the same
                <see cref="T:Geisha.Engine.Input.Mapping.HardwareInputVariant" />; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Engine.Input.Mapping.HardwareInputVariant.op_Inequality(Geisha.Engine.Input.Mapping.HardwareInputVariant,Geisha.Engine.Input.Mapping.HardwareInputVariant)">
            <summary>
                Determines whether two specified instances of <see cref="T:Geisha.Engine.Input.Mapping.HardwareInputVariant" /> are not equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> and <paramref name="right" /> do not represent the same
                <see cref="T:Geisha.Engine.Input.Mapping.HardwareInputVariant" />; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Geisha.Engine.Input.Mapping.InvalidOperationForCurrentVariantException">
            <summary>
                The exception that is thrown when converting <see cref="T:Geisha.Engine.Input.Mapping.HardwareInputVariant" /> to specific input device variant
                that this instance of <see cref="T:Geisha.Engine.Input.Mapping.HardwareInputVariant" /> does not represent.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.Mapping.InvalidOperationForCurrentVariantException.Variant">
            <summary>
                Current variant of <see cref="T:Geisha.Engine.Input.Mapping.HardwareInputVariant" />.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Input.Mapping.InputMapping">
            <summary>
                Defines mapping of hardware input to actions and axes.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.Mapping.InputMapping.ActionMappings">
            <summary>
                List of action mappings.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.Mapping.InputMapping.AxisMappings">
            <summary>
                List of axis mappings.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Input.Mapping.ActionMapping">
            <summary>
                Defines mapping of list of hardware actions to a single logical action.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.Mapping.ActionMapping.ActionName">
            <summary>
                Name of action.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.Mapping.ActionMapping.HardwareActions">
            <summary>
                List of hardware actions this logical action is based on.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Input.Mapping.AxisMapping">
            <summary>
                Defines mapping of list of hardware axes to a single logical axis.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.Mapping.AxisMapping.AxisName">
            <summary>
                Name of axis.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.Mapping.AxisMapping.HardwareAxes">
            <summary>
                List of hardware axes this logical axis is based on.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Input.Mapping.HardwareAction">
            <summary>
                Represents a single hardware action that is defined by hardware input variant i.e. a particular keyboard key press.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.Mapping.HardwareAction.HardwareInputVariant">
            <summary>
                Hardware input variant this hardware action is based on.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Input.Mapping.HardwareAxis">
            <summary>
                Represents a single hardware axis that is defined by hardware input variant i.e. a particular keyboard key press.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.Mapping.HardwareAxis.HardwareInputVariant">
            <summary>
                Hardware input variant this hardware axis is based on.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.Mapping.HardwareAxis.Scale">
            <summary>
                Scaling factor of hardware axis state to logical axis state. For discrete input +1 and -1 is mostly used. For
                analog input it can be used as sensitivity.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Input.MouseInput">
            <summary>
                Represents state of the mouse.
            </summary>
            <remarks>
                Value <c>true</c> of button state means the button is in pressed state. Value <c>false</c> of button state means
                the button is in released state.
            </remarks>
        </member>
        <member name="M:Geisha.Engine.Input.MouseInput.#ctor(Geisha.Engine.Input.MouseInputBuilder)">
            <summary>
                Creates new instance of <see cref="T:Geisha.Engine.Input.MouseInput" /> struct initialized as defined by
                <see cref="T:Geisha.Engine.Input.MouseInputBuilder" /> instance.
            </summary>
            <param name="mouseInputBuilder">
                <see cref="T:Geisha.Engine.Input.MouseInputBuilder" /> instance that defines position, scroll delta and state of all mouse buttons.
            </param>
        </member>
        <member name="P:Geisha.Engine.Input.MouseInput.Position">
            <summary>
                Position of the mouse relative to left upper corner of the window with X axis towards right and Y axis towards
                bottom of the window.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.MouseInput.PositionDelta">
            <summary>
                Delta of the mouse position since last input capture. It is mouse movement vector relative to last captured
                position of the mouse. <see cref="P:Geisha.Engine.Input.MouseInput.PositionDelta" /> is defined in the same coordinates as <see cref="P:Geisha.Engine.Input.MouseInput.Position" />.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.MouseInput.LeftButton">
            <summary>
                State of the left mouse button. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.MouseInput.MiddleButton">
            <summary>
                State of the middle mouse button. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.MouseInput.RightButton">
            <summary>
                State of the right mouse button. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.MouseInput.XButton1">
            <summary>
                State of the first extended mouse button. <c>true</c> indicates pressed state, while <c>false</c> indicates
                released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.MouseInput.XButton2">
            <summary>
                State of the second extended mouse button. <c>true</c> indicates pressed state, while <c>false</c> indicates
                released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.MouseInput.ScrollDelta">
            <summary>
                Value indicating rotation of mouse wheel since last mouse input capture (typically last fixed update). Sign of the
                value defines direction of rotation.
            </summary>
            <remarks>
                This value is not normalized so the game should check for a positive or negative value rather than an aggregate
                total.
            </remarks>
        </member>
        <member name="T:Geisha.Engine.Input.MouseInputBuilder">
            <summary>
                Provides simple way of setting initial state of <see cref="T:Geisha.Engine.Input.MouseInput" />. Represents temporary state of
                mouse and allows to create actual <see cref="T:Geisha.Engine.Input.MouseInput" /> in that state.
            </summary>
            <remarks>
                Value <c>true</c> of button state means the button is in pressed state. Value <c>false</c> of button state means
                the button is in released state.
            </remarks>
        </member>
        <member name="P:Geisha.Engine.Input.MouseInputBuilder.Position">
            <summary>
                Position of the mouse relative to left upper corner of the window with X axis towards right and Y axis towards
                bottom of the window.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.MouseInputBuilder.PositionDelta">
            <summary>
                Delta of the mouse position since last input capture. It is mouse movement vector relative to last captured
                position of the mouse. <see cref="P:Geisha.Engine.Input.MouseInputBuilder.PositionDelta" /> is defined in the same coordinates as <see cref="P:Geisha.Engine.Input.MouseInputBuilder.Position" />.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.MouseInputBuilder.LeftButton">
            <summary>
                State of the left mouse button. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.MouseInputBuilder.MiddleButton">
            <summary>
                State of the middle mouse button. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.MouseInputBuilder.RightButton">
            <summary>
                State of the right mouse button. <c>true</c> indicates pressed state, while <c>false</c> indicates released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.MouseInputBuilder.XButton1">
            <summary>
                State of the first extended mouse button. <c>true</c> indicates pressed state, while <c>false</c> indicates
                released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.MouseInputBuilder.XButton2">
            <summary>
                State of the second extended mouse button. <c>true</c> indicates pressed state, while <c>false</c> indicates
                released state.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Input.MouseInputBuilder.ScrollDelta">
            <summary>
                Value indicating rotation of mouse wheel since last mouse input capture (typically last fixed update). Sign of the
                value defines direction of rotation.
            </summary>
            <remarks>
                This value is not normalized so the game should check for a positive or negative value rather than an aggregate
                total.
            </remarks>
        </member>
        <member name="M:Geisha.Engine.Input.MouseInputBuilder.Build">
            <summary>
                Creates new <see cref="T:Geisha.Engine.Input.MouseInput" /> with the state defined by the current state of the builder.
            </summary>
            <returns><see cref="T:Geisha.Engine.Input.MouseInput" /> with the state defined by the current state of the builder.</returns>
        </member>
        <member name="T:Geisha.Engine.Physics.Components.CircleColliderComponent">
            <summary>
                2D collider component in shape of a circle.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Physics.Components.CircleColliderComponent.Radius">
            <summary>
                Radius of circle.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Physics.Components.Collider2DComponent">
            <summary>
                Base class for 2D colliders components.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Physics.Components.Collider2DComponent.IsColliding">
            <summary>
                Indicates whether this collider is colliding with some other one.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Physics.Components.Collider2DComponent.CollidingEntities">
            <summary>
                Collection of all entities colliding with this collider.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Physics.Components.RectangleColliderComponent">
            <summary>
                2D collider component in shape of a rectangle.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Physics.Components.RectangleColliderComponent.Dimension">
            <summary>
                Dimension of rectangle. Rectangle has center at point (0,0) in local coordinate system.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Physics.Components.Serialization.SerializableCircleColliderComponent">
            <summary>
                Represents serializable <see cref="T:Geisha.Engine.Physics.Components.CircleColliderComponent" /> that is used in a scene file content.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Physics.Components.Serialization.SerializableCircleColliderComponent.Radius">
            <summary>
                Represents <see cref="P:Geisha.Engine.Physics.Components.CircleColliderComponent.Radius" /> property of <see cref="T:Geisha.Engine.Physics.Components.CircleColliderComponent" />.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Physics.Components.Serialization.SerializableRectangleColliderComponent">
            <summary>
                Represents serializable <see cref="T:Geisha.Engine.Physics.Components.RectangleColliderComponent" /> that is used in a scene file content.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Physics.Components.Serialization.SerializableRectangleColliderComponent.Dimension">
            <summary>
                Represents <see cref="P:Geisha.Engine.Physics.Components.RectangleColliderComponent.Dimension" /> property of
                <see cref="T:Geisha.Engine.Physics.Components.RectangleColliderComponent" />.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Physics.PhysicsModule">
            <summary>
                Provides physics system and related components.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Rendering.Assets.RenderingFileExtensions">
            <summary>
                Defines constants representing file extensions of rendering assets used by engine.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Rendering.Assets.RenderingFileExtensions.Sprite">
            <summary>
                Extension of sprite asset file (including dot).
            </summary>
        </member>
        <member name="F:Geisha.Engine.Rendering.Assets.RenderingFileExtensions.Texture">
            <summary>
                Extension of texture asset file (including dot).
            </summary>
        </member>
        <member name="T:Geisha.Engine.Rendering.Assets.Serialization.SpriteFileContent">
            <summary>
                Represents sprite file content to be used to load <see cref="T:Geisha.Engine.Rendering.Sprite" /> from a file into memory.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Assets.Serialization.SpriteFileContent.AssetId">
            <summary>
                Asset id.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Assets.Serialization.SpriteFileContent.TextureAssetId">
            <summary>
                Asset id of texture asset.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Assets.Serialization.SpriteFileContent.SourceUV">
            <summary>
                Source UV data for <see cref="T:Geisha.Engine.Rendering.Sprite" />.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Assets.Serialization.SpriteFileContent.SourceDimension">
            <summary>
                Source dimension data for <see cref="T:Geisha.Engine.Rendering.Sprite" />.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Assets.Serialization.SpriteFileContent.SourceAnchor">
            <summary>
                Source anchor data for <see cref="T:Geisha.Engine.Rendering.Sprite" />.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Assets.Serialization.SpriteFileContent.PixelsPerUnit">
            <summary>
                Pixels per unit data for <see cref="T:Geisha.Engine.Rendering.Sprite" />.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Rendering.Assets.Serialization.TextureFileContent">
            <summary>
                Represents texture file content to be used to load <see cref="T:Geisha.Engine.Rendering.ITexture" /> from a file into memory.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Assets.Serialization.TextureFileContent.AssetId">
            <summary>
                Asset id.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Assets.Serialization.TextureFileContent.TextureFilePath">
            <summary>
                Path to texture file.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Rendering.Color">
            <summary>
                Encapsulates 32-bit color as an ARGB integer value.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Color.A">
            <summary>
                Alpha component of color.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Color.R">
            <summary>
                Red component of color.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Color.G">
            <summary>
                Green component of color.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Color.B">
            <summary>
                Blue component of color.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Color.DoubleA">
            <summary>
                Alpha component of color as double value between 0.0 to 1.0.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Color.DoubleR">
            <summary>
                Red component of color as double value between 0.0 to 1.0.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Color.DoubleG">
            <summary>
                Green component of color as double value between 0.0 to 1.0.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Color.DoubleB">
            <summary>
                Blue component of color as double value between 0.0 to 1.0.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Rendering.Color.FromArgb(System.Int32)">
            <summary>
                Creates new instance of <see cref="T:Geisha.Engine.Rendering.Color" /> out of raw ARGB 32-bit integer.
            </summary>
            <param name="argb">32-bit ARGB color value.</param>
            <returns><see cref="T:Geisha.Engine.Rendering.Color" /> instance with specified color.</returns>
        </member>
        <member name="M:Geisha.Engine.Rendering.Color.FromArgb(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Creates new instance of <see cref="T:Geisha.Engine.Rendering.Color" /> given ARGB components. Component value should be between 0 and 255.
            </summary>
            <param name="alpha">Alpha component value.</param>
            <param name="red">Red component value.</param>
            <param name="green">Green component value.</param>
            <param name="blue">Blue component value.</param>
            <returns><see cref="T:Geisha.Engine.Rendering.Color" /> instance with specified color components.</returns>
            <remarks>
                If component value is outside 0 and 255 range then it is clamped that is values below 0 are treated as 0 and
                values above 255 are treated as 255.
            </remarks>
        </member>
        <member name="M:Geisha.Engine.Rendering.Color.FromArgb(System.Double,System.Double,System.Double,System.Double)">
            <summary>
                Creates new instance of <see cref="T:Geisha.Engine.Rendering.Color" /> given ARGB components. Component value should be between 0.0 and 1.0.
            </summary>
            <param name="alpha">Alpha component value.</param>
            <param name="red">Red component value.</param>
            <param name="green">Green component value.</param>
            <param name="blue">Blue component value.</param>
            <returns><see cref="T:Geisha.Engine.Rendering.Color" /> instance with specified color components.</returns>
            <remarks>
                If component value is outside 0.0 and 1.0 range then it is clamped that is values below 0.0 are treated as 0.0
                and values above 1.0 are treated as 1.0.
            </remarks>
        </member>
        <member name="M:Geisha.Engine.Rendering.Color.ToArgb">
            <summary>
                Returns ARGB color value as 32-bit integer.
            </summary>
            <returns>Integer consisting ARGB color value.</returns>
        </member>
        <member name="M:Geisha.Engine.Rendering.Color.Equals(Geisha.Engine.Rendering.Color)">
            <summary>
                Returns a value indicating whether the value of this instance is equal to the value of the specified
                <see cref="T:Geisha.Engine.Rendering.Color" /> instance.
            </summary>
            <param name="other">The object to compare to this instance.</param>
            <returns>
                <c>true</c> if the <paramref name="other" /> parameter equals the value of this instance; otherwise,
                <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Engine.Rendering.Color.Equals(System.Object)">
            <summary>
                Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="obj">The object to compare to this instance.</param>
            <returns>
                <c>true</c> if <paramref name="obj" /> is an instance of <see cref="T:Geisha.Engine.Rendering.Color" /> and equals the value of this
                instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Engine.Rendering.Color.GetHashCode">
            <summary>
                Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Geisha.Engine.Rendering.Color.op_Equality(Geisha.Engine.Rendering.Color,Geisha.Engine.Rendering.Color)">
            <summary>
                Determines whether two specified instances of <see cref="T:Geisha.Engine.Rendering.Color" /> are equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> and <paramref name="right" /> represent the same
                <see cref="T:Geisha.Engine.Rendering.Color" />; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Engine.Rendering.Color.op_Inequality(Geisha.Engine.Rendering.Color,Geisha.Engine.Rendering.Color)">
            <summary>
                Determines whether two specified instances of <see cref="T:Geisha.Engine.Rendering.Color" /> are not equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> and <paramref name="right" /> do not represent the same
                <see cref="T:Geisha.Engine.Rendering.Color" />; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Engine.Rendering.Color.ToString">
            <summary>
                Converts the value of the current <see cref="T:Geisha.Engine.Rendering.Color" /> object to its equivalent string representation.
            </summary>
            <returns>A string representation of the value of the current <see cref="T:Geisha.Engine.Rendering.Color" /> object.</returns>
        </member>
        <member name="T:Geisha.Engine.Rendering.Components.CameraComponent">
            <summary>
                Represents camera that defines view-port.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.CameraComponent.ScreenWidth">
            <summary>
                Width of the screen (full screen) or client area in the window (excluding window frame) in pixels.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.CameraComponent.ScreenHeight">
            <summary>
                Height of the screen (full screen) or client area in the window (excluding window frame) in pixels.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Rendering.Components.CameraExtensions">
            <summary>
                Provides common methods for camera that is for entity with camera component attached.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Rendering.Components.CameraExtensions.ScreenPointTo2DWorldPoint(Geisha.Engine.Core.SceneModel.Entity,Geisha.Common.Math.Vector2)">
            <summary>
                Transforms point in screen space to point in 2D world space as seen by camera.
            </summary>
            <param name="cameraEntity">Entity with camera component attached.</param>
            <param name="screenPoint">Point in screen space.</param>
            <returns>Point in 2D world space corresponding to given point in screen space as seen by camera.</returns>
        </member>
        <member name="M:Geisha.Engine.Rendering.Components.CameraExtensions.Create2DWorldToScreenMatrix(Geisha.Engine.Core.SceneModel.Entity)">
            <summary>
                Creates view matrix that converts coordinates from 2D space to the screen space as seen by camera.
            </summary>
            <param name="cameraEntity">Entity with camera component attached.</param>
            <returns>View matrix that converts coordinates from 2D space to the screen space as seen by camera.</returns>
        </member>
        <member name="T:Geisha.Engine.Rendering.Components.EllipseRendererComponent">
            <summary>
                Ellipse renderer component enables entity with ellipse rendering functionality.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.EllipseRendererComponent.Radius">
            <summary>
                Radius of the circle.
            </summary>
            <remarks>
                If assigned changes ellipse to circle by modifying <see cref="P:Geisha.Engine.Rendering.Components.EllipseRendererComponent.RadiusX" /> and <see cref="P:Geisha.Engine.Rendering.Components.EllipseRendererComponent.RadiusY" />. When
                accessed returns circle radius if ellipse is circle; otherwise throws <see cref="T:Geisha.Engine.Rendering.Components.EllipseIsNotCircleException" />.
            </remarks>
            <exception cref="T:Geisha.Engine.Rendering.Components.EllipseIsNotCircleException">Thrown when ellipse does not represent a circle.</exception>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.EllipseRendererComponent.RadiusX">
            <summary>
                X radius of the ellipse.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.EllipseRendererComponent.RadiusY">
            <summary>
                Y radius of the ellipse.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.EllipseRendererComponent.Color">
            <summary>
                Color of the ellipse.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.EllipseRendererComponent.FillInterior">
            <summary>
                Specifies whether to fill interior of ellipse or draw only border. If true interior is filled with color.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Rendering.Components.EllipseIsNotCircleException">
            <summary>
                The exception that is thrown when accessing <see cref="P:Geisha.Engine.Rendering.Components.EllipseRendererComponent.Radius" /> when ellipse does not
                represent a circle.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.EllipseIsNotCircleException.RadiusX">
            <summary>
                X radius of the ellipse.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.EllipseIsNotCircleException.RadiusY">
            <summary>
                Y radius of the ellipse.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Rendering.Components.RectangleRendererComponent">
            <summary>
                Rectangle renderer component enables entity with rectangle rendering functionality.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.RectangleRendererComponent.Dimension">
            <summary>
                Dimension of rectangle. Rectangle has center at point (0,0) in local coordinate system.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.RectangleRendererComponent.Color">
            <summary>
                Color of the rectangle.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.RectangleRendererComponent.FillInterior">
            <summary>
                Specifies whether to fill interior of rectangle or draw only border. If true interior is filled with color.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Rendering.Components.Renderer2DComponent">
            <summary>
                Base class for 2D rendering components that provides common features.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.Renderer2DComponent.Visible">
            <summary>
                Indicates whether result of rendering is visible.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.Renderer2DComponent.SortingLayerName">
            <summary>
                Name of sorting layer the rendered object will be placed in. Sorting layers are used to define order of objects
                rendering. Order of layers is defined in <see cref="T:Geisha.Engine.Rendering.Configuration.RenderingConfiguration" />.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.Renderer2DComponent.OrderInLayer">
            <summary>
                Defines order of objects rendering in the same layer. Rendering order is from smaller to higher.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Rendering.Components.Serialization.SerializableCameraComponent">
            <summary>
                Represents serializable <see cref="T:Geisha.Engine.Rendering.Components.CameraComponent" /> that is used in a scene file content.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Rendering.Components.Serialization.SerializableEllipseRendererComponent">
            <summary>
                Represents serializable <see cref="T:Geisha.Engine.Rendering.Components.EllipseRendererComponent" /> that is used in a scene file content.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.Serialization.SerializableEllipseRendererComponent.Visible">
            <summary>
                Represents <see cref="!:EllipseRendererComponent.Visible" /> property of <see cref="T:Geisha.Engine.Rendering.Components.EllipseRendererComponent" />.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.Serialization.SerializableEllipseRendererComponent.SortingLayerName">
            <summary>
                Represents <see cref="!:EllipseRendererComponent.SortingLayerName" /> property of
                <see cref="T:Geisha.Engine.Rendering.Components.EllipseRendererComponent" />.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.Serialization.SerializableEllipseRendererComponent.OrderInLayer">
            <summary>
                Represents <see cref="!:EllipseRendererComponent.OrderInLayer" /> property of
                <see cref="T:Geisha.Engine.Rendering.Components.EllipseRendererComponent" />.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.Serialization.SerializableEllipseRendererComponent.RadiusX">
            <summary>
                Represents <see cref="P:Geisha.Engine.Rendering.Components.EllipseRendererComponent.RadiusX" /> property of
                <see cref="T:Geisha.Engine.Rendering.Components.EllipseRendererComponent" />.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.Serialization.SerializableEllipseRendererComponent.RadiusY">
            <summary>
                Represents <see cref="P:Geisha.Engine.Rendering.Components.EllipseRendererComponent.RadiusY" /> property of
                <see cref="T:Geisha.Engine.Rendering.Components.EllipseRendererComponent" />.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.Serialization.SerializableEllipseRendererComponent.ColorArgb">
            <summary>
                Represents <see cref="P:Geisha.Engine.Rendering.Components.EllipseRendererComponent.Color" /> property of <see cref="T:Geisha.Engine.Rendering.Components.EllipseRendererComponent" />.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.Serialization.SerializableEllipseRendererComponent.FillInterior">
            <summary>
                Represents <see cref="P:Geisha.Engine.Rendering.Components.EllipseRendererComponent.FillInterior" /> property of
                <see cref="T:Geisha.Engine.Rendering.Components.EllipseRendererComponent" />.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Rendering.Components.Serialization.SerializableRectangleRendererComponent">
            <summary>
                Represents serializable <see cref="T:Geisha.Engine.Rendering.Components.RectangleRendererComponent" /> that is used in a scene file content.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.Serialization.SerializableRectangleRendererComponent.Visible">
            <summary>
                Represents <see cref="!:RectangleRendererComponent.Visible" /> property of <see cref="T:Geisha.Engine.Rendering.Components.RectangleRendererComponent" />.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.Serialization.SerializableRectangleRendererComponent.SortingLayerName">
            <summary>
                Represents <see cref="!:RectangleRendererComponent.SortingLayerName" /> property of
                <see cref="T:Geisha.Engine.Rendering.Components.RectangleRendererComponent" />.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.Serialization.SerializableRectangleRendererComponent.OrderInLayer">
            <summary>
                Represents <see cref="!:RectangleRendererComponent.OrderInLayer" /> property of
                <see cref="T:Geisha.Engine.Rendering.Components.RectangleRendererComponent" />.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.Serialization.SerializableRectangleRendererComponent.Dimension">
            <summary>
                Represents <see cref="P:Geisha.Engine.Rendering.Components.RectangleRendererComponent.Dimension" /> property of
                <see cref="T:Geisha.Engine.Rendering.Components.RectangleRendererComponent" />.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.Serialization.SerializableRectangleRendererComponent.ColorArgb">
            <summary>
                Represents <see cref="P:Geisha.Engine.Rendering.Components.RectangleRendererComponent.Color" /> property of <see cref="T:Geisha.Engine.Rendering.Components.RectangleRendererComponent" />.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.Serialization.SerializableRectangleRendererComponent.FillInterior">
            <summary>
                Represents <see cref="P:Geisha.Engine.Rendering.Components.RectangleRendererComponent.FillInterior" /> property of
                <see cref="T:Geisha.Engine.Rendering.Components.RectangleRendererComponent" />.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Rendering.Components.Serialization.SerializableSpriteRendererComponent">
            <summary>
                Represents serializable <see cref="T:Geisha.Engine.Rendering.Components.SpriteRendererComponent" /> that is used in a scene file content.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.Serialization.SerializableSpriteRendererComponent.Visible">
            <summary>
                Represents <see cref="!:SpriteRendererComponent.Visible" /> property of <see cref="T:Geisha.Engine.Rendering.Components.SpriteRendererComponent" />.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.Serialization.SerializableSpriteRendererComponent.SortingLayerName">
            <summary>
                Represents <see cref="!:SpriteRendererComponent.SortingLayerName" /> property of
                <see cref="T:Geisha.Engine.Rendering.Components.SpriteRendererComponent" />.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.Serialization.SerializableSpriteRendererComponent.OrderInLayer">
            <summary>
                Represents <see cref="!:SpriteRendererComponent.OrderInLayer" /> property of <see cref="T:Geisha.Engine.Rendering.Components.SpriteRendererComponent" />.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.Serialization.SerializableSpriteRendererComponent.SpriteAssetId">
            <summary>
                Asset id of <see cref="T:Geisha.Engine.Rendering.Sprite" /> asset.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Rendering.Components.Serialization.SerializableTextRendererComponent">
            <summary>
                Represents serializable <see cref="T:Geisha.Engine.Rendering.Components.TextRendererComponent" /> that is used in a scene file content.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.Serialization.SerializableTextRendererComponent.Visible">
            <summary>
                Represents <see cref="!:TextRendererComponent.Visible" /> property of <see cref="T:Geisha.Engine.Rendering.Components.TextRendererComponent" />.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.Serialization.SerializableTextRendererComponent.SortingLayerName">
            <summary>
                Represents <see cref="!:TextRendererComponent.SortingLayerName" /> property of <see cref="T:Geisha.Engine.Rendering.Components.TextRendererComponent" />.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.Serialization.SerializableTextRendererComponent.OrderInLayer">
            <summary>
                Represents <see cref="!:TextRendererComponent.OrderInLayer" /> property of <see cref="T:Geisha.Engine.Rendering.Components.TextRendererComponent" />.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.Serialization.SerializableTextRendererComponent.Text">
            <summary>
                Represents <see cref="P:Geisha.Engine.Rendering.Components.TextRendererComponent.Text" /> property of <see cref="T:Geisha.Engine.Rendering.Components.TextRendererComponent" />.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.Serialization.SerializableTextRendererComponent.FontSize">
            <summary>
                Represents <see cref="P:Geisha.Engine.Rendering.Components.TextRendererComponent.FontSize" /> property of <see cref="T:Geisha.Engine.Rendering.Components.TextRendererComponent" /> in points
                (unit).
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.Serialization.SerializableTextRendererComponent.ColorArgb">
            <summary>
                Represents <see cref="P:Geisha.Engine.Rendering.Components.TextRendererComponent.Color" /> property of <see cref="T:Geisha.Engine.Rendering.Components.TextRendererComponent" />.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Rendering.Components.SpriteRendererComponent">
            <summary>
                Sprite renderer component enables entity with sprite rendering functionality.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.SpriteRendererComponent.Sprite">
            <summary>
                Sprite to be rendered.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Rendering.Components.TextRendererComponent">
            <summary>
                Text renderer component enables entity with text rendering functionality.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.TextRendererComponent.Text">
            <summary>
                Text content to be rendered.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.TextRendererComponent.FontSize">
            <summary>
                Size of font used for text rendering.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Components.TextRendererComponent.Color">
            <summary>
                Color of font used for text rendering.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Rendering.Configuration.RenderingConfiguration">
            <summary>
                Represents type safe rendering engine configuration.
            </summary>
        </member>
        <member name="F:Geisha.Engine.Rendering.Configuration.RenderingConfiguration.DefaultSortingLayerName">
            <summary>
                Provides name of default sorting layer.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Configuration.RenderingConfiguration.EnableVSync">
            <summary>
                If true, enables VSync. That is rendered frames wait for vertical synchronization in order to be presented
                therefore frame rate is limited to refresh rate of display.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Configuration.RenderingConfiguration.SortingLayersOrder">
            <summary>
                List of sorting layers in order of rendering that is first layer in the list is rendered first, last layer in the
                list is rendered last (on top of previous layers). Default is <c>["Default"]</c>.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Rendering.FontSize">
            <summary>
                Represents font size encapsulating particular value together with unit.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.FontSize.Points">
            <summary>
                Font size in points unit.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.FontSize.Dips">
            <summary>
                Font size in device-independent pixels unit.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Rendering.FontSize.FromPoints(System.Double)">
            <summary>
                Creates new instance of <see cref="T:Geisha.Engine.Rendering.FontSize" /> with size given in points.
            </summary>
            <param name="points">Size of the font in points.</param>
            <returns><see cref="T:Geisha.Engine.Rendering.FontSize" /> instance with specified size.</returns>
        </member>
        <member name="M:Geisha.Engine.Rendering.FontSize.FromDips(System.Double)">
            <summary>
                Creates new instance of <see cref="T:Geisha.Engine.Rendering.FontSize" /> with size given in device-independent pixels.
            </summary>
            <param name="dips">Size of the font in device-independent pixels.</param>
            <returns><see cref="T:Geisha.Engine.Rendering.FontSize" /> instance with specified size.</returns>
        </member>
        <member name="M:Geisha.Engine.Rendering.FontSize.Equals(Geisha.Engine.Rendering.FontSize)">
            <summary>
                Returns a value indicating whether the value of this instance is equal to the value of the specified
                <see cref="T:Geisha.Engine.Rendering.FontSize" /> instance.
            </summary>
            <param name="other">The object to compare to this instance.</param>
            <returns>
                <c>true</c> if the <paramref name="other" /> parameter equals the value of this instance; otherwise,
                <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Engine.Rendering.FontSize.Equals(System.Object)">
            <summary>
                Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="obj">The object to compare to this instance.</param>
            <returns>
                <c>true</c> if <paramref name="obj" /> is an instance of <see cref="T:Geisha.Engine.Rendering.FontSize" /> and equals the value of this
                instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Engine.Rendering.FontSize.GetHashCode">
            <summary>
                Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Geisha.Engine.Rendering.FontSize.op_Equality(Geisha.Engine.Rendering.FontSize,Geisha.Engine.Rendering.FontSize)">
            <summary>
                Determines whether two specified instances of <see cref="T:Geisha.Engine.Rendering.FontSize" /> are equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> and <paramref name="right" /> represent the same
                <see cref="T:Geisha.Engine.Rendering.FontSize" />; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Engine.Rendering.FontSize.op_Inequality(Geisha.Engine.Rendering.FontSize,Geisha.Engine.Rendering.FontSize)">
            <summary>
                Determines whether two specified instances of <see cref="T:Geisha.Engine.Rendering.FontSize" /> are not equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> and <paramref name="right" /> do not represent the same
                <see cref="T:Geisha.Engine.Rendering.FontSize" />; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Engine.Rendering.FontSize.ToString">
            <summary>
                Converts the value of the current <see cref="T:Geisha.Engine.Rendering.FontSize" /> object to its equivalent string representation.
            </summary>
            <returns>A string representation of the value of the current <see cref="T:Geisha.Engine.Rendering.FontSize" /> object.</returns>
        </member>
        <member name="T:Geisha.Engine.Rendering.IRenderer2D">
            <summary>
                Defines interface of a 2D rendering service that implements 2D graphical resources loading and rendering.
            </summary>
            <remarks>
                Coordinates system used by rendering methods is x-axis going right and y-axis going up with origin, that is
                point (0,0), in the center of the render target - half width and half height.
            </remarks>
        </member>
        <member name="P:Geisha.Engine.Rendering.IRenderer2D.ScreenWidth">
            <summary>
                Width of the screen (full screen) or client area in the window (excluding window frame) in pixels.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.IRenderer2D.ScreenHeight">
            <summary>
                Height of the screen (full screen) or client area in the window (excluding window frame) in pixels.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Rendering.IRenderer2D.CreateTexture(System.IO.Stream)">
            <summary>
                Creates <see cref="T:Geisha.Engine.Rendering.ITexture" /> object out of data given in a <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="stream">Stream of data representing 2D image in supported format that is to be used as a texture.</param>
            <returns><see cref="T:Geisha.Engine.Rendering.ITexture" /> object that can be used in rendering.</returns>
        </member>
        <member name="M:Geisha.Engine.Rendering.IRenderer2D.BeginRendering">
            <summary>
                Prepares render target for rendering. It should be called in pair with <see cref="M:Geisha.Engine.Rendering.IRenderer2D.EndRendering(System.Boolean)" /> for each frame
                to be rendered.
            </summary>
        </member>
        <member name="M:Geisha.Engine.Rendering.IRenderer2D.EndRendering(System.Boolean)">
            <summary>
                Ends rendering operations on render target and presents results to the user. It should be called in pair with
                <see cref="M:Geisha.Engine.Rendering.IRenderer2D.BeginRendering" /> for each frame to be rendered.
            </summary>
            <param name="waitForVSync">If true, completed frame waits for vertical synchronization in order to be presented.</param>
            <remarks>
                This method can be invoked with <paramref name="waitForVSync" /> set to <c>true</c> to wait for vertical
                synchronization before presenting completed frame. The wait is synchronous and makes the calling code to wait until
                frame is presented.
            </remarks>
        </member>
        <member name="M:Geisha.Engine.Rendering.IRenderer2D.Clear(Geisha.Engine.Rendering.Color)">
            <summary>
                Clears whole render target with single color.
            </summary>
            <param name="color"><see cref="T:Geisha.Engine.Rendering.Color" /> to be used for all pixels in the render target.</param>
        </member>
        <member name="M:Geisha.Engine.Rendering.IRenderer2D.RenderSprite(Geisha.Engine.Rendering.Sprite,Geisha.Common.Math.Matrix3x3)">
            <summary>
                Renders given <see cref="T:Geisha.Engine.Rendering.Sprite" /> transformed using provided transformation.
            </summary>
            <param name="sprite"><see cref="T:Geisha.Engine.Rendering.Sprite" /> to be rendered on the render target.</param>
            <param name="transform">Transformation applied to the <see cref="T:Geisha.Engine.Rendering.Sprite" />.</param>
        </member>
        <member name="M:Geisha.Engine.Rendering.IRenderer2D.RenderText(System.String,Geisha.Engine.Rendering.FontSize,Geisha.Engine.Rendering.Color,Geisha.Common.Math.Matrix3x3)">
            <summary>
                Renders given text using specified <see cref="T:Geisha.Engine.Rendering.FontSize" /> and <see cref="T:Geisha.Engine.Rendering.Color" /> transformed using provided
                transformation.
            </summary>
            <param name="text">Text to be rendered on the render target.</param>
            <param name="fontSize">Font size of the rendered text.</param>
            <param name="color">Color of the rendered text.</param>
            <param name="transform">Transformation applied to the text.</param>
        </member>
        <member name="M:Geisha.Engine.Rendering.IRenderer2D.RenderRectangle(Geisha.Common.Math.Rectangle,Geisha.Engine.Rendering.Color,System.Boolean,Geisha.Common.Math.Matrix3x3)">
            <summary>
                Renders given <paramref name="rectangle" /> with specified <paramref name="color" /> transformed using provided
                transformation.
            </summary>
            <param name="rectangle">Rectangle to render.</param>
            <param name="color">Color of rendered rectangle.</param>
            <param name="fillInterior">Specifies whether to fill interior of rectangle. If true, interior is filled in.</param>
            <param name="transform">Transformation applied to the rectangle.</param>
        </member>
        <member name="M:Geisha.Engine.Rendering.IRenderer2D.RenderEllipse(Geisha.Common.Math.Ellipse,Geisha.Engine.Rendering.Color,System.Boolean,Geisha.Common.Math.Matrix3x3)">
            <summary>
                Renders given <paramref name="ellipse" /> with specified <paramref name="color" /> transformed using provided
                transformation.
            </summary>
            <param name="ellipse">Ellipse to render.</param>
            <param name="color">Color of rendered ellipse.</param>
            <param name="fillInterior">Specifies whether to fill interior of ellipse. If true, interior is filled in.</param>
            <param name="transform">Transformation applied to the ellipse.</param>
        </member>
        <member name="T:Geisha.Engine.Rendering.IRenderingBackend">
            <summary>
                Defines interface of rendering backend used by the engine.
            </summary>
            <remarks>
                Rendering backend provides services for loading graphical resources (like textures) and rendering them to the
                screen.
            </remarks>
        </member>
        <member name="P:Geisha.Engine.Rendering.IRenderingBackend.Renderer2D">
            <summary>
                2D rendering service provided by the rendering backend.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Rendering.ITexture">
            <summary>
                Represents texture that is pixel data and attributes of 2D image.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.ITexture.Dimension">
            <summary>
                Dimension of texture in pixels.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Rendering.RenderingModule">
            <summary>
                Provides rendering system and related components.
            </summary>
        </member>
        <member name="T:Geisha.Engine.Rendering.Sprite">
            <summary>
                Represents 2D rectangular image that is basic element of 2D game graphics.
            </summary>
            <remarks>
                <para>
                    Sprite is 2D image based on texture. Often single texture is used for many sprites, each of them using only
                    part of texture.
                </para>
                <para>
                    Texture space coordinates are based on the origin in left upper corner of texture being a (0,0) point with axes
                    going x-right and y-down, up to dimension of texture.
                    <br />
                    Sprite space coordinates are based on the origin in left upper corner of sprite being a (0,0) point with axes
                    going x-right and y-down.
                </para>
            </remarks>
        </member>
        <member name="P:Geisha.Engine.Rendering.Sprite.SourceTexture">
            <summary>
                Texture that is source of sprite's raw data.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Sprite.SourceUV">
            <summary>
                Coordinates in source texture space that are origin (left upper corner) of sprite's rectangular part of texture.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Sprite.SourceDimension">
            <summary>
                Dimension in source texture space that is width and height of sprite's rectangular part of texture.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Sprite.SourceAnchor">
            <summary>
                Coordinates of point in sprite space that is used as an origin of sprite during rendering. In example anchor equal
                half of <see cref="P:Geisha.Engine.Rendering.Sprite.SourceDimension" /> makes rendering origin aligned with sprite's geometrical center.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Sprite.PixelsPerUnit">
            <summary>
                Conversion factor specifying how many pixels make a single unit.
            </summary>
        </member>
        <member name="P:Geisha.Engine.Rendering.Sprite.Rectangle">
            <summary>
                Rectangle based on <see cref="P:Geisha.Engine.Rendering.Sprite.SourceDimension" />, <see cref="P:Geisha.Engine.Rendering.Sprite.SourceAnchor" /> and <see cref="P:Geisha.Engine.Rendering.Sprite.PixelsPerUnit" />
                that represents sprite's raw geometry (in units) used in rendering.
            </summary>
            <remarks>
                Rectangle has dimension equal to <see cref="P:Geisha.Engine.Rendering.Sprite.SourceDimension" /> converted to units with factor
                <see cref="P:Geisha.Engine.Rendering.Sprite.PixelsPerUnit" />. It is transformed relatively to coordinate system origin as defined by
                <see cref="P:Geisha.Engine.Rendering.Sprite.SourceAnchor" />.
            </remarks>
        </member>
    </members>
</doc>
