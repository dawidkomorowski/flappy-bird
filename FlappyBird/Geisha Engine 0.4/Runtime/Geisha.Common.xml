<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Geisha.Common</name>
    </assembly>
    <members>
        <member name="T:Geisha.Common.CircularBuffer`1">
            <summary>
                Represents a strongly typed, fixed size, buffer of objects that can be added to the end of the buffer by replacing
                objects at the beginning of the buffer.
            </summary>
            <typeparam name="T">The type of elements in the circular buffer.</typeparam>
            <remarks>
                The <see cref="T:Geisha.Common.CircularBuffer`1" /> class implements contiguous, fixed size buffer hence it does only single
                memory allocation of internal buffer itself at construction time. It does not move elements, rather it properly
                indexes internal buffer hence it is value types friendly (no copying).
            </remarks>
        </member>
        <member name="M:Geisha.Common.CircularBuffer`1.#ctor(System.Int32)">
            <summary>
                Creates new instance of <see cref="T:Geisha.Common.CircularBuffer`1" /> with specified number of elements initialized with default
                values.
            </summary>
            <param name="count">Number of elements for which the buffer allocates memory.</param>
        </member>
        <member name="P:Geisha.Common.CircularBuffer`1.Count">
            <summary>
                The number of elements contained in the <see cref="T:Geisha.Common.CircularBuffer`1" />. It is equal to the fixed size of the
                <see cref="T:Geisha.Common.CircularBuffer`1" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.CircularBuffer`1.Item(System.Int32)">
            <summary>
                Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="M:Geisha.Common.CircularBuffer`1.GetEnumerator">
            <summary>
                Returns an enumerator that iterates through the <see cref="T:Geisha.Common.CircularBuffer`1" />.
            </summary>
            <returns>An enumerator that can be used to iterate through the <see cref="T:Geisha.Common.CircularBuffer`1" />.</returns>
        </member>
        <member name="M:Geisha.Common.CircularBuffer`1.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Geisha.Common.CircularBuffer`1.Add(`0)">
            <summary>
                Adds an object to the end of the <see cref="T:Geisha.Common.CircularBuffer`1" /> at the same time replacing the object at the
                beginning.
            </summary>
            <param name="item">
                The object to be added to the end of the <see cref="T:Geisha.Common.CircularBuffer`1" />. The value can be null for
                reference types.
            </param>
        </member>
        <member name="T:Geisha.Common.IDateTimeProvider">
            <summary>
                Interface providing date and time information.
            </summary>
        </member>
        <member name="M:Geisha.Common.IDateTimeProvider.Now">
            <summary>
                Returns <see cref="T:System.DateTime" /> object that is set to current date and time on this computer, expressed as the
                local time.
            </summary>
            <returns>
                <see cref="T:System.DateTime" /> object that is set to current date and time on this computer, expressed as the local
                time.
            </returns>
        </member>
        <member name="T:Geisha.Common.DateTimeProvider">
            <summary>
                Class providing date and time information.
            </summary>
            <remarks>
                This class is thin wrapper around <see cref="T:System.DateTime" /> to provide easy stubbing of date and time
                information and improve testability of dependent components.
            </remarks>
        </member>
        <member name="M:Geisha.Common.DateTimeProvider.Now">
            <inheritdoc />
            <summary>
                Returns <see cref="T:System.DateTime" /> object that is set to current date and time on this computer, expressed as
                the local time.
            </summary>
            <remarks>This method is a thin wrapper around <see cref="P:System.DateTime.Now" />.</remarks>
        </member>
        <member name="T:Geisha.Common.Extensibility.ExtensionsManager">
            <summary>
                Implements discovery and loading of extensions.
            </summary>
        </member>
        <member name="M:Geisha.Common.Extensibility.ExtensionsManager.LoadExtensions(System.String)">
            <summary>
                Discovers and loads extensions located in specified directory.
            </summary>
            <param name="directoryPath">Path to directory from which extensions are being loaded.</param>
            <returns>Extensions that were successfully discovered and loaded.</returns>
        </member>
        <member name="T:Geisha.Common.Extensibility.IExtension">
            <summary>
                Specifies interface of extension for Geisha Engine. Implement this interface to provide custom functionality within
                an extension. Extension must have public parameterless constructor.
            </summary>
        </member>
        <member name="P:Geisha.Common.Extensibility.IExtension.Name">
            <summary>
                Name of extension.
            </summary>
        </member>
        <member name="P:Geisha.Common.Extensibility.IExtension.Description">
            <summary>
                Description of extension. Provides brief information about functionality an extension implements.
            </summary>
        </member>
        <member name="P:Geisha.Common.Extensibility.IExtension.Category">
            <summary>
                Category of extension. Allows identifying and grouping similar extensions with common functionality.
            </summary>
        </member>
        <member name="P:Geisha.Common.Extensibility.IExtension.Author">
            <summary>
                Author of extension.
            </summary>
        </member>
        <member name="P:Geisha.Common.Extensibility.IExtension.Version">
            <summary>
                Version of extension.
            </summary>
        </member>
        <member name="M:Geisha.Common.Extensibility.IExtension.Register(Autofac.ContainerBuilder)">
            <summary>
                Registers extension components in Autofac container.
            </summary>
            <param name="containerBuilder">Autofac container builder that provides components registration API.</param>
            <remarks>Implement this method to register components and services an extension provides in Autofac container.</remarks>
        </member>
        <member name="T:Geisha.Common.Extensibility.ExtensionExtensions">
            <summary>
                Provides extension methods for <see cref="T:Geisha.Common.Extensibility.IExtension" /> interface.
            </summary>
        </member>
        <member name="M:Geisha.Common.Extensibility.ExtensionExtensions.Format(Geisha.Common.Extensibility.IExtension)">
            <summary>
                Returns human-readable string representation of <see cref="T:Geisha.Common.Extensibility.IExtension" /> object.
            </summary>
            <param name="extension">An extension object to be used.</param>
            <returns>Human-readable string representation of <see cref="T:Geisha.Common.Extensibility.IExtension" /> object.</returns>
        </member>
        <member name="T:Geisha.Common.FileSystem.IDirectory">
            <summary>
                Represents a directory and provides methods for inspecting files and directories it contains.
            </summary>
        </member>
        <member name="P:Geisha.Common.FileSystem.IDirectory.Name">
            <summary>
                Name of the directory.
            </summary>
        </member>
        <member name="P:Geisha.Common.FileSystem.IDirectory.Path">
            <summary>
                Absolute path to this directory.
            </summary>
        </member>
        <member name="P:Geisha.Common.FileSystem.IDirectory.Directories">
            <summary>
                Directories in this directory.
            </summary>
        </member>
        <member name="P:Geisha.Common.FileSystem.IDirectory.Files">
            <summary>
                Files in this directory.
            </summary>
        </member>
        <member name="T:Geisha.Common.FileSystem.IFile">
            <summary>
                Represents a file and provides methods for reading and writing to a file.
            </summary>
        </member>
        <member name="P:Geisha.Common.FileSystem.IFile.Name">
            <summary>
                Name of the file including its extension.
            </summary>
        </member>
        <member name="P:Geisha.Common.FileSystem.IFile.Extension">
            <summary>
                Extension of the file including dot character at the beginning.
            </summary>
        </member>
        <member name="P:Geisha.Common.FileSystem.IFile.Path">
            <summary>
                Absolute path to this file.
            </summary>
        </member>
        <member name="M:Geisha.Common.FileSystem.IFile.ReadAllText">
            <summary>
                Opens this text file, reads all lines of the file, and then closes the file.
            </summary>
            <returns>A string containing all lines of the file.</returns>
        </member>
        <member name="M:Geisha.Common.FileSystem.IFile.WriteAllText(System.String)">
            <summary>
                Opens this text file, writes the specified string to the file, and then closes the file.
            </summary>
            <param name="contents">The string to write to the file.  </param>
        </member>
        <member name="M:Geisha.Common.FileSystem.IFile.OpenRead">
            <summary>
                Opens this file for reading.
            </summary>
            <returns>A read-only <see cref="T:System.IO.Stream" /> for reading this file.</returns>
        </member>
        <member name="T:Geisha.Common.FileSystem.IFileSystem">
            <summary>
                Provides access to file system.
            </summary>
        </member>
        <member name="M:Geisha.Common.FileSystem.IFileSystem.CreateFile(System.String)">
            <summary>
                Creates or overwrites a file in the specified path.
            </summary>
            <param name="filePath">The path and name of the file to create.</param>
            <returns>
                An <see cref="T:Geisha.Common.FileSystem.IFile" /> instance that represents the file specified in <paramref name="filePath" />.
            </returns>
        </member>
        <member name="M:Geisha.Common.FileSystem.IFileSystem.GetFile(System.String)">
            <summary>
                Gets an <see cref="T:Geisha.Common.FileSystem.IFile" /> instance that represents the file specified in <paramref name="filePath" />.
            </summary>
            <param name="filePath">The path and name of the existing file.</param>
            <returns>
                An <see cref="T:Geisha.Common.FileSystem.IFile" /> instance that represents the file specified in <paramref name="filePath" />.
            </returns>
        </member>
        <member name="M:Geisha.Common.FileSystem.IFileSystem.GetDirectory(System.String)">
            <summary>
                Gets an <see cref="T:Geisha.Common.FileSystem.IDirectory" /> instance that represents the directory specified in
                <paramref name="directoryPath" />.
            </summary>
            <param name="directoryPath">The path to existing directory.</param>
            <returns>
                An <see cref="T:Geisha.Common.FileSystem.IDirectory" /> instance that represents the directory specified in
                <paramref name="directoryPath" />.
            </returns>
        </member>
        <member name="T:Geisha.Common.GeishaException">
            <summary>
                Represents general error that occur in Geisha ecosystem. Base exception for all Geisha related components.
            </summary>
        </member>
        <member name="M:Geisha.Common.GeishaException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Geisha.Common.GeishaException" /> class.
            </summary>
        </member>
        <member name="M:Geisha.Common.GeishaException.#ctor(System.String)">
            <inheritdoc />
            <summary>
                Initializes a new instance of the <see cref="T:Geisha.Common.GeishaException" /> class with a specified error
                message.
            </summary>
        </member>
        <member name="M:Geisha.Common.GeishaException.#ctor(System.String,System.Exception)">
            <inheritdoc />
            <summary>
                Initializes a new instance of the <see cref="T:Geisha.Common.GeishaException" /> class with a specified error
                message and a reference to the inner exception that is the cause of this exception.
            </summary>
        </member>
        <member name="M:Geisha.Common.GeishaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc />
            <summary>
                Initializes a new instance of the <see cref="T:Geisha.Common.GeishaException" /> class with serialized data.
            </summary>
        </member>
        <member name="T:Geisha.Common.HighResolutionTimeSpan">
            <summary>
                Static class providing utility methods for handling <see cref="T:System.TimeSpan" /> with single tick precision.
            </summary>
        </member>
        <member name="M:Geisha.Common.HighResolutionTimeSpan.FromSeconds(System.Double)">
            <summary>
                Returns a <see cref="T:System.TimeSpan" /> that represents a specified number of seconds.
            </summary>
            <param name="seconds">A number of seconds.</param>
            <returns>An object that represents <paramref name="seconds" />.</returns>
        </member>
        <member name="T:Geisha.Common.Logging.ILog">
            <summary>
                Provides logging interface.
            </summary>
        </member>
        <member name="M:Geisha.Common.Logging.ILog.Trace(System.String)">
            <summary>
                Writes the diagnostic message at the Trace level.
            </summary>
            <param name="message">Log message.</param>
        </member>
        <member name="M:Geisha.Common.Logging.ILog.Debug(System.String)">
            <summary>
                Writes the diagnostic message at the Debug level.
            </summary>
            <param name="message">Log message.</param>
        </member>
        <member name="M:Geisha.Common.Logging.ILog.Info(System.String)">
            <summary>
                Writes the diagnostic message at the Info level.
            </summary>
            <param name="message">Log message.</param>
        </member>
        <member name="M:Geisha.Common.Logging.ILog.Warn(System.String)">
            <summary>
                Writes the diagnostic message at the Warn level.
            </summary>
            <param name="message">Log message.</param>
        </member>
        <member name="M:Geisha.Common.Logging.ILog.Error(System.String)">
            <summary>
                Writes the diagnostic message at the Error level.
            </summary>
            <param name="message">Log message.</param>
        </member>
        <member name="M:Geisha.Common.Logging.ILog.Fatal(System.String)">
            <summary>
                Writes the diagnostic message at the Fatal level.
            </summary>
            <param name="message">Log message.</param>
        </member>
        <member name="T:Geisha.Common.Math.Angle">
            <summary>
                Provides collection of helper methods for common angle operations.
            </summary>
        </member>
        <member name="M:Geisha.Common.Math.Angle.Deg2Rad(System.Double)">
            <summary>
                Converts angle given in degrees to respective angle in radians.
            </summary>
            <param name="degrees">Angle in degrees.</param>
            <returns>Angle in radians.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Angle.Rad2Deg(System.Double)">
            <summary>
                Converts angle given in radians to respective angle in degrees.
            </summary>
            <param name="radians">Angle in radians.</param>
            <returns>Angle in degrees.</returns>
        </member>
        <member name="T:Geisha.Common.Math.Circle">
            <summary>
                Represents 2D circle.
            </summary>
        </member>
        <member name="M:Geisha.Common.Math.Circle.#ctor(System.Double)">
            <summary>
                Creates new instance of <see cref="T:Geisha.Common.Math.Circle" /> with given radius and center at point (0,0).
            </summary>
            <param name="radius">Length of circle radius.</param>
        </member>
        <member name="M:Geisha.Common.Math.Circle.#ctor(Geisha.Common.Math.Vector2,System.Double)">
            <summary>
                Creates new instance of <see cref="T:Geisha.Common.Math.Circle" /> with given radius and center at given position.
            </summary>
            <param name="center">Position of circle center.</param>
            <param name="radius">Length of circle radius.</param>
        </member>
        <member name="P:Geisha.Common.Math.Circle.Center">
            <summary>
                Center of circle.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Circle.Radius">
            <summary>
                Radius of circle.
            </summary>
        </member>
        <member name="M:Geisha.Common.Math.Circle.Transform(Geisha.Common.Math.Matrix3x3)">
            <summary>
                Returns <see cref="T:Geisha.Common.Math.Circle" /> that is this <see cref="T:Geisha.Common.Math.Circle" /> transformed by given <see cref="T:Geisha.Common.Math.Matrix3x3" />.
            </summary>
            <param name="transform">Transformation matrix used to transform circle.</param>
            <returns><see cref="T:Geisha.Common.Math.Circle" /> transformed by given matrix.</returns>
            <remarks>
                This method transforms only circle center therefore scaling of circle is not supported.
            </remarks>
        </member>
        <member name="M:Geisha.Common.Math.Circle.Overlaps(Geisha.Common.Math.Circle)">
            <summary>
                Tests whether this <see cref="T:Geisha.Common.Math.Circle" /> is overlapping other <see cref="T:Geisha.Common.Math.Circle" />.
            </summary>
            <param name="other"><see cref="T:Geisha.Common.Math.Circle" /> to test for overlapping.</param>
            <returns>True, if circles overlap, false otherwise.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Circle.AsShape">
            <summary>
                Returns representation of this <see cref="T:Geisha.Common.Math.Circle" /> as implementation of <see cref="T:Geisha.Common.Math.SAT.IShape" />.
            </summary>
            <returns><see cref="T:Geisha.Common.Math.SAT.IShape" /> representing this <see cref="T:Geisha.Common.Math.Circle" />.</returns>
        </member>
        <member name="T:Geisha.Common.Math.Ellipse">
            <summary>
                Represents 2D ellipse.
            </summary>
        </member>
        <member name="M:Geisha.Common.Math.Ellipse.#ctor(System.Double,System.Double)">
            <summary>
                Creates new instance of <see cref="T:Geisha.Common.Math.Ellipse" /> with given <paramref name="radiusX" />, <paramref name="radiusY" />
                and center at point (0,0).
            </summary>
            <param name="radiusX">Length of the ellipse X radius.</param>
            <param name="radiusY">Length of the ellipse Y radius.</param>
        </member>
        <member name="M:Geisha.Common.Math.Ellipse.#ctor(Geisha.Common.Math.Vector2,System.Double,System.Double)">
            <summary>
                Creates new instance of <see cref="T:Geisha.Common.Math.Ellipse" /> with given <paramref name="radiusX" />, <paramref name="radiusY" />
                and center at given position.
            </summary>
            <param name="center">Position of the ellipse center.</param>
            <param name="radiusX">Length of the ellipse X radius.</param>
            <param name="radiusY">Length of the ellipse Y radius.</param>
        </member>
        <member name="P:Geisha.Common.Math.Ellipse.Center">
            <summary>
                Center of ellipse.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Ellipse.RadiusX">
            <summary>
                X radius of the ellipse. It is the ellipse radius alongside X axis.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Ellipse.RadiusY">
            <summary>
                Y radius of the ellipse. It is the ellipse radius alongside Y axis.
            </summary>
        </member>
        <member name="T:Geisha.Common.Math.Serialization.SerializableVector2">
            <summary>
                Represents serializable <see cref="T:Geisha.Common.Math.Vector2" />.
            </summary>
        </member>
        <member name="T:Geisha.Common.Math.Serialization.SerializableVector3">
            <summary>
                Represents serializable <see cref="T:Geisha.Common.Math.Vector3" />.
            </summary>
        </member>
        <member name="T:Geisha.Common.Math.SAT.Axis">
            <summary>
                Represents 2D axis used in SAT.
            </summary>
        </member>
        <member name="M:Geisha.Common.Math.SAT.Axis.#ctor(Geisha.Common.Math.Vector2)">
            <summary>
                Creates new instance of <see cref="T:Geisha.Common.Math.SAT.Axis" /> with direction given by vector.
            </summary>
            <param name="axisAlignedVector">Vector being source of direction for an axis.</param>
        </member>
        <member name="M:Geisha.Common.Math.SAT.Axis.GetProjectionOf(Geisha.Common.Math.SAT.IShape)">
            <summary>
                Returns orthogonal projection of an <see cref="T:Geisha.Common.Math.SAT.IShape" /> onto an axis.
            </summary>
            <param name="shape"><see cref="T:Geisha.Common.Math.SAT.IShape" /> to be projected.</param>
            <returns>Orthogonal projection of an <see cref="T:Geisha.Common.Math.SAT.IShape" /> onto an axis.</returns>
        </member>
        <member name="M:Geisha.Common.Math.SAT.Axis.GetProjectionOf(Geisha.Common.Math.Vector2[])">
            <summary>
                Returns orthogonal projection of a polygon, defined as set of points, onto an axis.
            </summary>
            <param name="vertices">Set of points to be projected.</param>
            <returns>Orthogonal projection of a polygon, defined as set of points, onto an axis.</returns>
        </member>
        <member name="M:Geisha.Common.Math.SAT.Axis.GetProjectionOf(Geisha.Common.Math.Vector2)">
            <summary>
                Returns orthogonal projection of a point onto an axis.
            </summary>
            <param name="point">Point to be projected.</param>
            <returns>Orthogonal projection of a point onto an axis.</returns>
            <remarks>
                <see cref="T:Geisha.Common.Math.SAT.Projection" /> for a single point has <see cref="F:Geisha.Common.Math.SAT.Projection.Min" /> equal to
                <see cref="F:Geisha.Common.Math.SAT.Projection.Max" />.
            </remarks>
        </member>
        <member name="T:Geisha.Common.Math.SAT.IShape">
            <summary>
                Interface representing 2D geometric shape that can be used in Separating Axis Theorem algorithm. Represents either
                circle or convex polygon.
            </summary>
            <remarks>
                If you would like to enable some 2D geometric shape representation to be able to be consumed by SAT create
                implementation of this interface. SAT supports circles and convex polygons only.
            </remarks>
        </member>
        <member name="P:Geisha.Common.Math.SAT.IShape.IsCircle">
            <summary>
                Indicates whether the shape is a circle. If it is not a circle then it is assumed that the shape is convex polygon.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.SAT.IShape.Center">
            <summary>
                Represents center of a circle.
            </summary>
            <remarks>When implementing <see cref="T:Geisha.Common.Math.SAT.IShape" /> this property is required only for circle.</remarks>
        </member>
        <member name="P:Geisha.Common.Math.SAT.IShape.Radius">
            <summary>
                Represents radius of a circle.
            </summary>
            <remarks>When implementing <see cref="T:Geisha.Common.Math.SAT.IShape" /> this property is required only for circle.</remarks>
        </member>
        <member name="M:Geisha.Common.Math.SAT.IShape.GetAxes">
            <summary>
                Returns unique axes used for projection testing in SAT.
            </summary>
            <returns>Array of <see cref="T:Geisha.Common.Math.SAT.Axis" /> that will be used for projection testing in SAT.</returns>
            <remarks>
                When implementing <see cref="T:Geisha.Common.Math.SAT.IShape" /> this method is required only for polygon.
                <br />
                You can return null as simple implementation of this method.
                <br />
                If this method returns null then SAT provides automatic axis discovery. For each polygon edge there is computed
                single axis. Therefore for certain shapes it is highly recommended to provide custom axes to reduce complexity and
                improve performance. In example rectangle requires only two unique axes (as it consists of two pairs of parallel
                edges) while default SAT discovery will produce four axes for rectangle (one for each edge).
            </remarks>
        </member>
        <member name="M:Geisha.Common.Math.SAT.IShape.GetVertices">
            <summary>
                Returns vertices of convex polygon in counterclockwise winding order.
            </summary>
            <returns>Array of <see cref="T:Geisha.Common.Math.Vector2" /> that contains all vertices of polygon in counterclockwise winding order.</returns>
            <remarks>
                When implementing <see cref="T:Geisha.Common.Math.SAT.IShape" /> this method is required only for polygon.
                <br />
                Order of returned vertices must follow counterclockwise winding as all algorithms assume such representation.
            </remarks>
        </member>
        <member name="T:Geisha.Common.Math.SAT.Projection">
            <summary>
                Projection of a point or 2D shape onto 2D axis used in SAT.
            </summary>
            <remarks>
                <see cref="T:Geisha.Common.Math.SAT.Projection" /> is represented as pair of values: <see cref="F:Geisha.Common.Math.SAT.Projection.Min" /> and <see cref="F:Geisha.Common.Math.SAT.Projection.Max" />, that
                define interval on an axis being the projection of a shape.
            </remarks>
        </member>
        <member name="F:Geisha.Common.Math.SAT.Projection.Min">
            <summary>
                Min value of projection.
            </summary>
        </member>
        <member name="F:Geisha.Common.Math.SAT.Projection.Max">
            <summary>
                Max value of projection.
            </summary>
        </member>
        <member name="M:Geisha.Common.Math.SAT.Projection.#ctor(System.Double,System.Double)">
            <summary>
                Creates new instance of <see cref="T:Geisha.Common.Math.SAT.Projection" /> with given min and max values.
            </summary>
            <param name="min">Min value of projection.</param>
            <param name="max">Max value of projection.</param>
        </member>
        <member name="M:Geisha.Common.Math.SAT.Projection.Overlaps(Geisha.Common.Math.SAT.Projection)">
            <summary>
                Tests whether this <see cref="T:Geisha.Common.Math.SAT.Projection" /> is overlapping other <see cref="T:Geisha.Common.Math.SAT.Projection" />.
            </summary>
            <param name="other"><see cref="T:Geisha.Common.Math.SAT.Projection" /> to test for overlapping.</param>
            <returns>True, if projections overlap, false otherwise.</returns>
        </member>
        <member name="T:Geisha.Common.Math.SAT.ShapeExtensions">
            <summary>
                Provides a set of static methods to perform geometric operations on objects that implement <see cref="T:Geisha.Common.Math.SAT.IShape" />.
            </summary>
        </member>
        <member name="M:Geisha.Common.Math.SAT.ShapeExtensions.Contains(Geisha.Common.Math.SAT.IShape,Geisha.Common.Math.Vector2)">
            <summary>
                Tests whether shape contains a point.
            </summary>
            <param name="shape">Shape to be tested for containing a point.</param>
            <param name="point">Point to be tested for containment in a shape.</param>
            <returns>True, if shape contains a point, false otherwise.</returns>
            <remarks>
                Point is considered to be contained in a shape when it is strictly located inside a shape or it is a part of
                shape's edge
            </remarks>
        </member>
        <member name="M:Geisha.Common.Math.SAT.ShapeExtensions.Overlaps(Geisha.Common.Math.SAT.IShape,Geisha.Common.Math.SAT.IShape)">
            <summary>
                Tests whether two shapes overlaps.
            </summary>
            <param name="shape1">First shape to be tested for overlapping with the other.</param>
            <param name="shape2">Second shape to be tested for overlapping with the other.</param>
            <returns>True, if shapes overlap, false otherwise.</returns>
            <remarks>
                Two shapes are considered overlapping when they strictly intersect each other or they have a common edge
                points or vertices.
            </remarks>
        </member>
        <member name="T:Geisha.Common.Math.Matrix3x3">
            <summary>
                2D transformation matrix in homogeneous coordinates. It is three rows by three columns matrix consisting nine
                components.
            </summary>
            <remarks>
                In computation this matrix treats vectors as column vectors therefore translation is located in last column of
                the matrix.
            </remarks>
        </member>
        <member name="P:Geisha.Common.Math.Matrix3x3.Zero">
            <summary>
                Returns <see cref="T:Geisha.Common.Math.Matrix3x3" /> that has all components set to zero.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Matrix3x3.Identity">
            <summary>
                Returns identity <see cref="T:Geisha.Common.Math.Matrix3x3" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Matrix3x3.M11">
            <summary>
                Component in first row and first column of the <see cref="T:Geisha.Common.Math.Matrix3x3" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Matrix3x3.M12">
            <summary>
                Component in first row and second column of the <see cref="T:Geisha.Common.Math.Matrix3x3" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Matrix3x3.M13">
            <summary>
                Component in first row and third column of the <see cref="T:Geisha.Common.Math.Matrix3x3" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Matrix3x3.M21">
            <summary>
                Component in second row and first column of the <see cref="T:Geisha.Common.Math.Matrix3x3" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Matrix3x3.M22">
            <summary>
                Component in second row and second column of the <see cref="T:Geisha.Common.Math.Matrix3x3" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Matrix3x3.M23">
            <summary>
                Component in second row and third column of the <see cref="T:Geisha.Common.Math.Matrix3x3" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Matrix3x3.M31">
            <summary>
                Component in third row and first column of the <see cref="T:Geisha.Common.Math.Matrix3x3" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Matrix3x3.M32">
            <summary>
                Component in third row and second column of the <see cref="T:Geisha.Common.Math.Matrix3x3" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Matrix3x3.M33">
            <summary>
                Component in third row and third column of the <see cref="T:Geisha.Common.Math.Matrix3x3" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Matrix3x3.Opposite">
            <summary>
                Returns matrix opposite to this matrix, that is matrix with all components negated.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Matrix3x3.Item(System.Int32,System.Int32)">
            <summary>
                Returns component of matrix at specified row and column.
            </summary>
            <param name="row">Zero based row index of component to retrieve.</param>
            <param name="column">Zero based column index of component to retrieve.</param>
            <exception cref="T:System.IndexOutOfRangeException">
                <paramref name="row" /> and <paramref name="column" /> pair exceed matrix
                size.
            </exception>
        </member>
        <member name="M:Geisha.Common.Math.Matrix3x3.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
                Creates new instance of <see cref="T:Geisha.Common.Math.Matrix3x3" /> given nine components values.
            </summary>
            <param name="m11">Component in first row and first column of the <see cref="T:Geisha.Common.Math.Matrix3x3" />.</param>
            <param name="m12">Component in first row and second column of the <see cref="T:Geisha.Common.Math.Matrix3x3" />.</param>
            <param name="m13">Component in first row and third column of the <see cref="T:Geisha.Common.Math.Matrix3x3" />.</param>
            <param name="m21">Component in second row and first column of the <see cref="T:Geisha.Common.Math.Matrix3x3" />.</param>
            <param name="m22">Component in second row and second column of the <see cref="T:Geisha.Common.Math.Matrix3x3" />.</param>
            <param name="m23">Component in second row and third column of the <see cref="T:Geisha.Common.Math.Matrix3x3" />.</param>
            <param name="m31">Component in third row and first column of the <see cref="T:Geisha.Common.Math.Matrix3x3" />.</param>
            <param name="m32">Component in third row and second column of the <see cref="T:Geisha.Common.Math.Matrix3x3" />.</param>
            <param name="m33">Component in third row and third column of the <see cref="T:Geisha.Common.Math.Matrix3x3" />.</param>
        </member>
        <member name="M:Geisha.Common.Math.Matrix3x3.#ctor(System.Collections.Generic.IReadOnlyList{System.Double})">
            <summary>
                Creates new instance of <see cref="T:Geisha.Common.Math.Matrix3x3" /> given array of size nine containing nine components values in
                row-major layout.
            </summary>
            <param name="array">Array of size nine with nine components values in row-major layout.</param>
            <exception cref="T:System.ArgumentException">Length of <paramref name="array" /> is not nine.</exception>
        </member>
        <member name="M:Geisha.Common.Math.Matrix3x3.Add(Geisha.Common.Math.Matrix3x3)">
            <summary>
                Adds other matrix to this matrix.
            </summary>
            <param name="other">Other matrix to add.</param>
            <returns><see cref="T:Geisha.Common.Math.Matrix3x3" /> that is sum of this matrix with the other.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix3x3.Subtract(Geisha.Common.Math.Matrix3x3)">
            <summary>
                Subtracts other matrix from this matrix.
            </summary>
            <param name="other">Other matrix to subtract.</param>
            <returns><see cref="T:Geisha.Common.Math.Matrix3x3" /> that is difference between this matrix and the other.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix3x3.Multiply(System.Double)">
            <summary>
                Multiplies this matrix by given scalar.
            </summary>
            <param name="scalar">Scalar value that is multiplier of matrix.</param>
            <returns><see cref="T:Geisha.Common.Math.Matrix3x3" /> that is multiplied by scalar that is each of its components is multiplied by scalar.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix3x3.Multiply(Geisha.Common.Math.Matrix3x3)">
            <summary>
                Multiplies this matrix by other matrix.
            </summary>
            <param name="other">Matrix to multiply by (the multiplier).</param>
            <returns><see cref="T:Geisha.Common.Math.Matrix3x3" /> that is product of this matrix multiplied by the <paramref name="other" />.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix3x3.Multiply(Geisha.Common.Math.Vector3)">
            <summary>
                Multiplies this matrix by given vector.
            </summary>
            <param name="vector">Vector to multiply by (the multiplier).</param>
            <returns><see cref="T:Geisha.Common.Math.Vector3" /> that is product of this matrix multiplied by the <paramref name="vector" />.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix3x3.Divide(System.Double)">
            <summary>
                Divides this matrix by given scalar.
            </summary>
            <param name="scalar">Scalar value that is divisor of matrix.</param>
            <returns><see cref="T:Geisha.Common.Math.Matrix3x3" /> that is divided by scalar that is each of its components is divided by scalar.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix3x3.ToArray">
            <summary>
                Returns array that contains matrix components in row-major layout.
            </summary>
            <returns>Array with matrix components in row-major layout.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix3x3.Equals(Geisha.Common.Math.Matrix3x3)">
            <summary>
                Returns a value indicating whether the value of this instance is equal to the value of the specified
                <see cref="T:Geisha.Common.Math.Matrix3x3" /> instance.
            </summary>
            <param name="other">The object to compare to this instance.</param>
            <returns>
                <c>true</c> if the <paramref name="other" /> parameter equals the value of this instance; otherwise,
                <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix3x3.Equals(System.Object)">
            <summary>
                Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="obj">The object to compare to this instance.</param>
            <returns>
                <c>true</c> if <paramref name="obj" /> is an instance of <see cref="T:Geisha.Common.Math.Matrix3x3" /> and equals the value of this
                instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix3x3.GetHashCode">
            <summary>
                Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix3x3.CreateTranslation(Geisha.Common.Math.Vector2)">
            <summary>
                Returns 2D translation matrix that represents translation by specified <paramref name="translation" /> vector.
            </summary>
            <param name="translation">Translation that is applied by matrix.</param>
            <returns><see cref="T:Geisha.Common.Math.Matrix3x3" /> that represents translation by <paramref name="translation" /> vector.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix3x3.CreateRotation(System.Double)">
            <summary>
                Returns 2D rotation matrix that represents counterclockwise rotation by <paramref name="angle" /> specified in
                radians.
            </summary>
            <param name="angle">Rotation angle in radians that is applied by matrix.</param>
            <returns><see cref="T:Geisha.Common.Math.Matrix3x3" /> that represents counterclockwise rotation by <paramref name="angle" /> radians.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix3x3.CreateScale(Geisha.Common.Math.Vector2)">
            <summary>
                Returns 2D scale matrix that represents scaling by <paramref name="scale" /> vector.
            </summary>
            <param name="scale">
                Scale that is applied by matrix. Scale is a <see cref="T:Geisha.Common.Math.Vector2" /> where X is scaling factor along X axis and Y is
                scaling factor along Y axis.
            </param>
            <returns><see cref="T:Geisha.Common.Math.Matrix3x3" /> that represents scaling by <paramref name="scale" /> vector.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix3x3.op_Addition(Geisha.Common.Math.Matrix3x3,Geisha.Common.Math.Matrix3x3)">
            <summary>
                Adds one matrix to another.
            </summary>
            <param name="left">The first matrix to add.</param>
            <param name="right">The second matrix to add.</param>
            <returns>An object that is the sum of the values of <paramref name="left" /> and <paramref name="right" />.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix3x3.op_Subtraction(Geisha.Common.Math.Matrix3x3,Geisha.Common.Math.Matrix3x3)">
            <summary>
                Subtracts one matrix from another.
            </summary>
            <param name="left">Matrix to subtract from (the minuend).</param>
            <param name="right">Matrix to subtract (the subtrahend).</param>
            <returns>
                An object that is the result of the value of <paramref name="left" /> minus the value of
                <paramref name="right" />.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix3x3.op_Multiply(Geisha.Common.Math.Matrix3x3,System.Double)">
            <summary>
                Multiplies specified matrix by given scalar.
            </summary>
            <param name="left">Matrix to be multiplied.</param>
            <param name="right">Scalar value that is multiplier of matrix.</param>
            <returns><see cref="T:Geisha.Common.Math.Matrix3x3" /> that is multiplied by scalar that is each of its components is multiplied by scalar.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix3x3.op_Multiply(Geisha.Common.Math.Matrix3x3,Geisha.Common.Math.Matrix3x3)">
            <summary>
                Multiplies one matrix by another.
            </summary>
            <param name="left">Matrix to be multiplied (the multiplicand).</param>
            <param name="right">Matrix to multiply by (the multiplier).</param>
            <returns>
                <see cref="T:Geisha.Common.Math.Matrix3x3" /> that is product of <paramref name="left" /> matrix multiplied by the
                <paramref name="right" /> matrix.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix3x3.op_Multiply(Geisha.Common.Math.Matrix3x3,Geisha.Common.Math.Vector3)">
            <summary>
                Multiplies specified matrix by given vector.
            </summary>
            <param name="left">Matrix to be multiplied (the multiplicand).</param>
            <param name="right">Vector to multiply by (the multiplier).</param>
            <returns>
                <see cref="T:Geisha.Common.Math.Matrix3x3" /> that is product of <paramref name="left" /> matrix multiplied by the
                <paramref name="right" /> vector.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix3x3.op_Division(Geisha.Common.Math.Matrix3x3,System.Double)">
            <summary>
                Divides specified matrix by given scalar.
            </summary>
            <param name="left">Matrix to be divided.</param>
            <param name="right">Scalar value that is divisor of matrix.</param>
            <returns><see cref="T:Geisha.Common.Math.Matrix3x3" /> that is divided by scalar that is each of its components is divided by scalar.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix3x3.op_UnaryNegation(Geisha.Common.Math.Matrix3x3)">
            <summary>
                Returns matrix opposite to the specified matrix, that is matrix with all components negated.
            </summary>
            <param name="right">Matrix to be negated.</param>
            <returns>Matrix opposite to the specified matrix, that is matrix with all components negated.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix3x3.op_Equality(Geisha.Common.Math.Matrix3x3,Geisha.Common.Math.Matrix3x3)">
            <summary>
                Determines whether two specified instances of <see cref="T:Geisha.Common.Math.Matrix3x3" /> are equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> and <paramref name="right" /> represent the same
                <see cref="T:Geisha.Common.Math.Matrix3x3" />; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix3x3.op_Inequality(Geisha.Common.Math.Matrix3x3,Geisha.Common.Math.Matrix3x3)">
            <summary>
                Determines whether two specified instances of <see cref="T:Geisha.Common.Math.Matrix3x3" /> are not equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> and <paramref name="right" /> do not represent the same
                <see cref="T:Geisha.Common.Math.Matrix3x3" />; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Geisha.Common.Math.Matrix4x4">
            <summary>
                3D transformation matrix in homogeneous coordinates. It is four rows by four columns matrix consisting sixteen
                components.
            </summary>
            <remarks>
                In computation this matrix treats vectors as column vectors therefore translation is located in last column of
                the matrix.
            </remarks>
        </member>
        <member name="P:Geisha.Common.Math.Matrix4x4.Zero">
            <summary>
                Returns <see cref="T:Geisha.Common.Math.Matrix4x4" /> that has all components set to zero.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Matrix4x4.Identity">
            <summary>
                Returns identity <see cref="T:Geisha.Common.Math.Matrix4x4" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Matrix4x4.M11">
            <summary>
                Component in first row and first column of the <see cref="T:Geisha.Common.Math.Matrix4x4" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Matrix4x4.M12">
            <summary>
                Component in first row and second column of the <see cref="T:Geisha.Common.Math.Matrix4x4" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Matrix4x4.M13">
            <summary>
                Component in first row and third column of the <see cref="T:Geisha.Common.Math.Matrix4x4" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Matrix4x4.M14">
            <summary>
                Component in first row and fourth column of the <see cref="T:Geisha.Common.Math.Matrix4x4" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Matrix4x4.M21">
            <summary>
                Component in second row and first column of the <see cref="T:Geisha.Common.Math.Matrix4x4" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Matrix4x4.M22">
            <summary>
                Component in second row and second column of the <see cref="T:Geisha.Common.Math.Matrix4x4" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Matrix4x4.M23">
            <summary>
                Component in second row and third column of the <see cref="T:Geisha.Common.Math.Matrix4x4" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Matrix4x4.M24">
            <summary>
                Component in second row and fourth column of the <see cref="T:Geisha.Common.Math.Matrix4x4" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Matrix4x4.M31">
            <summary>
                Component in third row and first column of the <see cref="T:Geisha.Common.Math.Matrix4x4" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Matrix4x4.M32">
            <summary>
                Component in third row and second column of the <see cref="T:Geisha.Common.Math.Matrix4x4" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Matrix4x4.M33">
            <summary>
                Component in third row and third column of the <see cref="T:Geisha.Common.Math.Matrix4x4" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Matrix4x4.M34">
            <summary>
                Component in third row and fourth column of the <see cref="T:Geisha.Common.Math.Matrix4x4" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Matrix4x4.M41">
            <summary>
                Component in fourth row and first column of the <see cref="T:Geisha.Common.Math.Matrix4x4" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Matrix4x4.M42">
            <summary>
                Component in fourth row and second column of the <see cref="T:Geisha.Common.Math.Matrix4x4" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Matrix4x4.M43">
            <summary>
                Component in fourth row and third column of the <see cref="T:Geisha.Common.Math.Matrix4x4" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Matrix4x4.M44">
            <summary>
                Component in fourth row and fourth column of the <see cref="T:Geisha.Common.Math.Matrix4x4" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Matrix4x4.Opposite">
            <summary>
                Returns matrix opposite to this matrix, that is matrix with all components negated.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Matrix4x4.Item(System.Int32,System.Int32)">
            <summary>
                Returns component of matrix at specified row and column.
            </summary>
            <param name="row">Zero based row index of component to retrieve.</param>
            <param name="column">Zero based column index of component to retrieve.</param>
            <exception cref="T:System.IndexOutOfRangeException">
                <paramref name="row" /> and <paramref name="column" /> pair exceed matrix
                size.
            </exception>
        </member>
        <member name="M:Geisha.Common.Math.Matrix4x4.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
                Creates new instance of <see cref="T:Geisha.Common.Math.Matrix4x4" /> given sixteen components values.
            </summary>
            <param name="m11">Component in first row and first column of the <see cref="T:Geisha.Common.Math.Matrix4x4" />.</param>
            <param name="m12">Component in first row and second column of the <see cref="T:Geisha.Common.Math.Matrix4x4" />.</param>
            <param name="m13">Component in first row and third column of the <see cref="T:Geisha.Common.Math.Matrix4x4" />.</param>
            <param name="m14">Component in first row and fourth column of the <see cref="T:Geisha.Common.Math.Matrix4x4" />.</param>
            <param name="m21">Component in second row and first column of the <see cref="T:Geisha.Common.Math.Matrix4x4" />.</param>
            <param name="m22">Component in second row and second column of the <see cref="T:Geisha.Common.Math.Matrix4x4" />.</param>
            <param name="m23">Component in second row and third column of the <see cref="T:Geisha.Common.Math.Matrix4x4" />.</param>
            <param name="m24">Component in second row and fourth column of the <see cref="T:Geisha.Common.Math.Matrix4x4" />.</param>
            <param name="m31">Component in third row and first column of the <see cref="T:Geisha.Common.Math.Matrix4x4" />.</param>
            <param name="m32">Component in third row and second column of the <see cref="T:Geisha.Common.Math.Matrix4x4" />.</param>
            <param name="m33">Component in third row and third column of the <see cref="T:Geisha.Common.Math.Matrix4x4" />.</param>
            <param name="m34">Component in third row and fourth column of the <see cref="T:Geisha.Common.Math.Matrix4x4" />.</param>
            <param name="m41">Component in fourth row and first column of the <see cref="T:Geisha.Common.Math.Matrix4x4" />.</param>
            <param name="m42">Component in fourth row and second column of the <see cref="T:Geisha.Common.Math.Matrix4x4" />.</param>
            <param name="m43">Component in fourth row and third column of the <see cref="T:Geisha.Common.Math.Matrix4x4" />.</param>
            <param name="m44">Component in fourth row and fourth column of the <see cref="T:Geisha.Common.Math.Matrix4x4" />.</param>
        </member>
        <member name="M:Geisha.Common.Math.Matrix4x4.#ctor(System.Collections.Generic.IReadOnlyList{System.Double})">
            <summary>
                Creates new instance of <see cref="T:Geisha.Common.Math.Matrix4x4" /> given array of size sixteen containing sixteen components values
                in row-major layout.
            </summary>
            <param name="array">Array of size sixteen with sixteen components values in row-major layout.</param>
            <exception cref="T:System.ArgumentException">Length of <paramref name="array" /> is not sixteen.</exception>
        </member>
        <member name="M:Geisha.Common.Math.Matrix4x4.Add(Geisha.Common.Math.Matrix4x4)">
            <summary>
                Adds other matrix to this matrix.
            </summary>
            <param name="other">Other matrix to add.</param>
            <returns><see cref="T:Geisha.Common.Math.Matrix4x4" /> that is sum of this matrix with the other.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix4x4.Subtract(Geisha.Common.Math.Matrix4x4)">
            <summary>
                Subtracts other matrix from this matrix.
            </summary>
            <param name="other">Other matrix to subtract.</param>
            <returns><see cref="T:Geisha.Common.Math.Matrix4x4" /> that is difference between this matrix and the other.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix4x4.Multiply(System.Double)">
            <summary>
                Multiplies this matrix by given scalar.
            </summary>
            <param name="scalar">Scalar value that is multiplier of matrix.</param>
            <returns><see cref="T:Geisha.Common.Math.Matrix4x4" /> that is multiplied by scalar that is each of its components is multiplied by scalar.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix4x4.Multiply(Geisha.Common.Math.Matrix4x4)">
            <summary>
                Multiplies this matrix by other matrix.
            </summary>
            <param name="other">Matrix to multiply by (the multiplier).</param>
            <returns><see cref="T:Geisha.Common.Math.Matrix4x4" /> that is product of this matrix multiplied by the <paramref name="other" />.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix4x4.Multiply(Geisha.Common.Math.Vector4)">
            <summary>
                Multiplies this matrix by given vector.
            </summary>
            <param name="vector">Vector to multiply by (the multiplier).</param>
            <returns><see cref="T:Geisha.Common.Math.Vector4" /> that is product of this matrix multiplied by the <paramref name="vector" />.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix4x4.Divide(System.Double)">
            <summary>
                Divides this matrix by given scalar.
            </summary>
            <param name="scalar">Scalar value that is divisor of matrix.</param>
            <returns><see cref="T:Geisha.Common.Math.Matrix4x4" /> that is divided by scalar that is each of its components is divided by scalar.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix4x4.ToArray">
            <summary>
                Returns array that contains matrix components in row-major layout.
            </summary>
            <returns>Array with matrix components in row-major layout.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix4x4.Equals(Geisha.Common.Math.Matrix4x4)">
            <summary>
                Returns a value indicating whether the value of this instance is equal to the value of the specified
                <see cref="T:Geisha.Common.Math.Matrix4x4" /> instance.
            </summary>
            <param name="other">The object to compare to this instance.</param>
            <returns>
                <c>true</c> if the <paramref name="other" /> parameter equals the value of this instance; otherwise,
                <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix4x4.Equals(System.Object)">
            <summary>
                Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="obj">The object to compare to this instance.</param>
            <returns>
                <c>true</c> if <paramref name="obj" /> is an instance of <see cref="T:Geisha.Common.Math.Matrix4x4" /> and equals the value of this
                instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix4x4.GetHashCode">
            <summary>
                Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix4x4.CreateTranslation(Geisha.Common.Math.Vector3)">
            <summary>
                Returns 3D translation matrix that represents translation by specified <paramref name="translation" /> vector.
            </summary>
            <param name="translation">Translation that is applied by matrix.</param>
            <returns><see cref="T:Geisha.Common.Math.Matrix4x4" /> that represents translation by <paramref name="translation" /> vector.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix4x4.CreateRotationX(System.Double)">
            <summary>
                Returns 3D rotation matrix that represents counterclockwise rotation around X axis by <paramref name="angle" />
                specified in radians.
            </summary>
            <param name="angle">Rotation angle in radians that is applied by matrix.</param>
            <returns>
                <see cref="T:Geisha.Common.Math.Matrix4x4" /> that represents counterclockwise rotation around X axis by <paramref name="angle" />
                radians.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix4x4.CreateRotationY(System.Double)">
            <summary>
                Returns 3D rotation matrix that represents counterclockwise rotation around Y axis by <paramref name="angle" />
                specified in radians.
            </summary>
            <param name="angle">Rotation angle in radians that is applied by matrix.</param>
            <returns>
                <see cref="T:Geisha.Common.Math.Matrix4x4" /> that represents counterclockwise rotation around Y axis by <paramref name="angle" />
                radians.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix4x4.CreateRotationZ(System.Double)">
            <summary>
                Returns 3D rotation matrix that represents counterclockwise rotation around Z axis by <paramref name="angle" />
                specified in radians.
            </summary>
            <param name="angle">Rotation angle in radians that is applied by matrix.</param>
            <returns>
                <see cref="T:Geisha.Common.Math.Matrix4x4" /> that represents counterclockwise rotation around Z axis by <paramref name="angle" />
                radians.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix4x4.CreateRotationZXY(Geisha.Common.Math.Vector3)">
            <summary>
                Returns 3D rotation matrix that represents counterclockwise rotation around Z axis then around X axis and then Y
                axis by <paramref name="rotation" /> angles specified in radians.
            </summary>
            <param name="rotation">
                Rotation angles around three axes in radians that are applied by matrix. Rotation is a
                <see cref="T:Geisha.Common.Math.Vector3" /> where X is rotation angle around X axis, Y is rotation angle around Y axis and Z is rotation
                angle around Z axis.
            </param>
            <returns>
                <see cref="T:Geisha.Common.Math.Matrix4x4" /> that represents counterclockwise rotations around Z axis then around X axis and then Y
                axis by <paramref name="rotation" /> angles specified in radians.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix4x4.CreateScale(Geisha.Common.Math.Vector3)">
            <summary>
                Returns 3D scale matrix that represents scaling by <paramref name="scale" /> vector.
            </summary>
            <param name="scale">
                Scale that is applied by matrix. Scale is a <see cref="T:Geisha.Common.Math.Vector3" /> where X is scaling factor along X axis, Y is
                scaling factor along Y axis and Z is scaling factor along Z axis.
            </param>
            <returns><see cref="T:Geisha.Common.Math.Matrix4x4" /> that represents scaling by <paramref name="scale" /> vector.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix4x4.op_Addition(Geisha.Common.Math.Matrix4x4,Geisha.Common.Math.Matrix4x4)">
            <summary>
                Adds one matrix to another.
            </summary>
            <param name="left">The first matrix to add.</param>
            <param name="right">The second matrix to add.</param>
            <returns>An object that is the sum of the values of <paramref name="left" /> and <paramref name="right" />.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix4x4.op_Subtraction(Geisha.Common.Math.Matrix4x4,Geisha.Common.Math.Matrix4x4)">
            <summary>
                Subtracts one matrix from another.
            </summary>
            <param name="left">Matrix to subtract from (the minuend).</param>
            <param name="right">Matrix to subtract (the subtrahend).</param>
            <returns>
                An object that is the result of the value of <paramref name="left" /> minus the value of
                <paramref name="right" />.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix4x4.op_Multiply(Geisha.Common.Math.Matrix4x4,System.Double)">
            <summary>
                Multiplies specified matrix by given scalar.
            </summary>
            <param name="left">Matrix to be multiplied.</param>
            <param name="right">Scalar value that is multiplier of matrix.</param>
            <returns><see cref="T:Geisha.Common.Math.Matrix4x4" /> that is multiplied by scalar that is each of its components is multiplied by scalar.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix4x4.op_Multiply(Geisha.Common.Math.Matrix4x4,Geisha.Common.Math.Matrix4x4)">
            <summary>
                Multiplies one matrix by another.
            </summary>
            <param name="left">Matrix to be multiplied (the multiplicand).</param>
            <param name="right">Matrix to multiply by (the multiplier).</param>
            <returns>
                <see cref="T:Geisha.Common.Math.Matrix4x4" /> that is product of <paramref name="left" /> matrix multiplied by the
                <paramref name="right" /> matrix.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix4x4.op_Multiply(Geisha.Common.Math.Matrix4x4,Geisha.Common.Math.Vector4)">
            <summary>
                Multiplies specified matrix by given vector.
            </summary>
            <param name="left">Matrix to be multiplied (the multiplicand).</param>
            <param name="right">Vector to multiply by (the multiplier).</param>
            <returns>
                <see cref="T:Geisha.Common.Math.Matrix4x4" /> that is product of <paramref name="left" /> matrix multiplied by the
                <paramref name="right" /> vector.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix4x4.op_Division(Geisha.Common.Math.Matrix4x4,System.Double)">
            <summary>
                Divides specified matrix by given scalar.
            </summary>
            <param name="left">Matrix to be divided.</param>
            <param name="right">Scalar value that is divisor of matrix.</param>
            <returns><see cref="T:Geisha.Common.Math.Matrix4x4" /> that is divided by scalar that is each of its components is divided by scalar.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix4x4.op_UnaryNegation(Geisha.Common.Math.Matrix4x4)">
            <summary>
                Returns matrix opposite to the specified matrix, that is matrix with all components negated.
            </summary>
            <param name="right">Matrix to be negated.</param>
            <returns>Matrix opposite to the specified matrix, that is matrix with all components negated.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix4x4.op_Equality(Geisha.Common.Math.Matrix4x4,Geisha.Common.Math.Matrix4x4)">
            <summary>
                Determines whether two specified instances of <see cref="T:Geisha.Common.Math.Matrix4x4" /> are equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> and <paramref name="right" /> represent the same
                <see cref="T:Geisha.Common.Math.Matrix4x4" />; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Matrix4x4.op_Inequality(Geisha.Common.Math.Matrix4x4,Geisha.Common.Math.Matrix4x4)">
            <summary>
                Determines whether two specified instances of <see cref="T:Geisha.Common.Math.Matrix4x4" /> are not equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> and <paramref name="right" /> do not represent the same
                <see cref="T:Geisha.Common.Math.Matrix4x4" />; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Geisha.Common.Math.Quad">
            <summary>
                Represents 2D quad.
            </summary>
            <remarks>
                Vertices of <see cref="T:Geisha.Common.Math.Quad" /> are indexed in counterclockwise winding order.
            </remarks>
        </member>
        <member name="M:Geisha.Common.Math.Quad.#ctor(Geisha.Common.Math.Vector2,Geisha.Common.Math.Vector2,Geisha.Common.Math.Vector2,Geisha.Common.Math.Vector2)">
            <summary>
                Creates new instance of <see cref="T:Geisha.Common.Math.Quad" /> with given vertices. Those should be in counterclockwise winding order.
            </summary>
            <param name="v1">First vertex of <see cref="T:Geisha.Common.Math.Quad" />.</param>
            <param name="v2">Second vertex of <see cref="T:Geisha.Common.Math.Quad" />.</param>
            <param name="v3">Third vertex of <see cref="T:Geisha.Common.Math.Quad" />.</param>
            <param name="v4">Fourth vertex of <see cref="T:Geisha.Common.Math.Quad" />.</param>
        </member>
        <member name="P:Geisha.Common.Math.Quad.V1">
            <summary>
                First vertex of quad.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Quad.V2">
            <summary>
                Second vertex of quad.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Quad.V3">
            <summary>
                Third vertex of quad.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Quad.V4">
            <summary>
                Fourth vertex of quad.
            </summary>
        </member>
        <member name="M:Geisha.Common.Math.Quad.Transform(Geisha.Common.Math.Matrix3x3)">
            <summary>
                Returns <see cref="T:Geisha.Common.Math.Quad" /> that is this <see cref="T:Geisha.Common.Math.Quad" /> transformed by given <see cref="T:Geisha.Common.Math.Matrix3x3" />.
            </summary>
            <param name="transform">Transformation matrix used to transform quad.</param>
            <returns><see cref="T:Geisha.Common.Math.Quad" /> transformed by given matrix.</returns>
        </member>
        <member name="T:Geisha.Common.Math.Rectangle">
            <summary>
                Represents 2D rectangle.
            </summary>
        </member>
        <member name="M:Geisha.Common.Math.Rectangle.#ctor(Geisha.Common.Math.Vector2)">
            <summary>
                Creates new instance of <see cref="T:Geisha.Common.Math.Rectangle" /> with given dimension and center at point (0,0).
            </summary>
            <param name="dimension">Dimension, width and height, of rectangle.</param>
        </member>
        <member name="M:Geisha.Common.Math.Rectangle.#ctor(Geisha.Common.Math.Vector2,Geisha.Common.Math.Vector2)">
            <summary>
                Creates new instance of <see cref="T:Geisha.Common.Math.Rectangle" /> with given dimension and center at given position.
            </summary>
            <param name="center">Position of rectangle center.</param>
            <param name="dimension">Dimension, width and height, or rectangle.</param>
        </member>
        <member name="P:Geisha.Common.Math.Rectangle.UpperLeft">
            <summary>
                Upper-left vertex of rectangle.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Rectangle.UpperRight">
            <summary>
                Upper-right vertex of rectangle.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Rectangle.LowerLeft">
            <summary>
                Lower-left vertex of rectangle.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Rectangle.LowerRight">
            <summary>
                Lower-right vertex of rectangle.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Rectangle.Width">
            <summary>
                Width of rectangle.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Rectangle.Height">
            <summary>
                Height of rectangle.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Rectangle.Center">
            <summary>
                Center of rectangle.
            </summary>
        </member>
        <member name="M:Geisha.Common.Math.Rectangle.Transform(Geisha.Common.Math.Matrix3x3)">
            <summary>
                Returns <see cref="T:Geisha.Common.Math.Rectangle" /> that is this <see cref="T:Geisha.Common.Math.Rectangle" /> transformed by given
                <see cref="T:Geisha.Common.Math.Matrix3x3" />.
            </summary>
            <param name="transform">Transformation matrix used to transform rectangle.</param>
            <returns><see cref="T:Geisha.Common.Math.Rectangle" /> transformed by given matrix.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Rectangle.Overlaps(Geisha.Common.Math.Rectangle)">
            <summary>
                Tests whether this <see cref="T:Geisha.Common.Math.Rectangle" /> is overlapping other <see cref="T:Geisha.Common.Math.Rectangle" />.
            </summary>
            <param name="other"><see cref="T:Geisha.Common.Math.Rectangle" /> to test for overlapping.</param>
            <returns>True, if rectangles overlap, false otherwise.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Rectangle.AsShape">
            <summary>
                Returns representation of this <see cref="T:Geisha.Common.Math.Rectangle" /> as implementation of <see cref="T:Geisha.Common.Math.SAT.IShape" />.
            </summary>
            <returns><see cref="T:Geisha.Common.Math.SAT.IShape" /> representing this <see cref="T:Geisha.Common.Math.Rectangle" />.</returns>
        </member>
        <member name="T:Geisha.Common.Math.Vector2">
            <summary>
                2D mathematical vector consisting of two components X and Y. It is also used as a point in 2D space.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector2.Zero">
            <summary>
                Returns <see cref="T:Geisha.Common.Math.Vector2" /> that has all components set to zero.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector2.One">
            <summary>
                Returns <see cref="T:Geisha.Common.Math.Vector2" /> that has all components set to one.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector2.UnitX">
            <summary>
                Returns unit <see cref="T:Geisha.Common.Math.Vector2" /> directed along the X axis, that is vector (1,0).
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector2.UnitY">
            <summary>
                Returns unit <see cref="T:Geisha.Common.Math.Vector2" /> directed along the Y axis, that is vector (0,1).
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector2.X">
            <summary>
                X component of <see cref="T:Geisha.Common.Math.Vector2" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector2.Y">
            <summary>
                Y component of <see cref="T:Geisha.Common.Math.Vector2" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector2.Length">
            <summary>
                Length of <see cref="T:Geisha.Common.Math.Vector2" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector2.Unit">
            <summary>
                Returns unit vector out of this <see cref="T:Geisha.Common.Math.Vector2" /> that is vector with the same direction but with length equal
                one.
            </summary>
            <remarks>For vector with near zero length this property returns zero vector.</remarks>
        </member>
        <member name="P:Geisha.Common.Math.Vector2.Opposite">
            <summary>
                Returns vector opposite to this vector, that is vector with all components negated.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector2.Normal">
            <summary>
                Returns normal (perpendicular unit vector) <see cref="T:Geisha.Common.Math.Vector2" /> rotated 90 degrees counterclockwise.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector2.Homogeneous">
            <summary>
                Returns <see cref="T:Geisha.Common.Math.Vector3" /> that is this <see cref="T:Geisha.Common.Math.Vector2" /> in homogeneous coordinates.
            </summary>
            <remarks>
                Homogeneous coordinates add additional component of value one therefore <see cref="T:Geisha.Common.Math.Vector2" /> in homogeneous
                coordinates is represented by <see cref="T:Geisha.Common.Math.Vector3" /> with Z component equal one.
            </remarks>
        </member>
        <member name="M:Geisha.Common.Math.Vector2.#ctor(System.Double,System.Double)">
            <summary>
                Creates new instance of <see cref="T:Geisha.Common.Math.Vector2" /> given X and Y components values.
            </summary>
            <param name="x">X component value.</param>
            <param name="y">Y component value.</param>
        </member>
        <member name="M:Geisha.Common.Math.Vector2.#ctor(System.Collections.Generic.IReadOnlyList{System.Double})">
            <summary>
                Creates new instance of <see cref="T:Geisha.Common.Math.Vector2" /> given array of size two containing X and Y components values.
            </summary>
            <param name="array">Array of size two with X and Y components values.</param>
            <exception cref="T:System.ArgumentException">Length of <paramref name="array" /> is not two.</exception>
        </member>
        <member name="M:Geisha.Common.Math.Vector2.Add(Geisha.Common.Math.Vector2)">
            <summary>
                Adds other vector to this vector.
            </summary>
            <param name="other">Other vector to add.</param>
            <returns><see cref="T:Geisha.Common.Math.Vector2" /> that is sum of this vector with the other.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector2.Subtract(Geisha.Common.Math.Vector2)">
            <summary>
                Subtracts other vector from this vector.
            </summary>
            <param name="other">Other vector to subtract.</param>
            <returns><see cref="T:Geisha.Common.Math.Vector2" /> that is difference between this vector and the other.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector2.Multiply(System.Double)">
            <summary>
                Multiplies this vector by given scalar.
            </summary>
            <param name="scalar">Scalar value that is multiplier of vector.</param>
            <returns><see cref="T:Geisha.Common.Math.Vector2" /> that is multiplied by scalar that is each of its components is multiplied by scalar.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector2.Divide(System.Double)">
            <summary>
                Divides this vector by given scalar.
            </summary>
            <param name="scalar">Scalar value that is divisor of vector.</param>
            <returns><see cref="T:Geisha.Common.Math.Vector2" /> that is divided by scalar that is each of its components is divided by scalar.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector2.Dot(Geisha.Common.Math.Vector2)">
            <summary>
                Calculates dot product of this vector with the other.
            </summary>
            <param name="other">Other vector that is part of dot product calculation as a second parameter.</param>
            <returns>Dot product of this vector with the other.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector2.Distance(Geisha.Common.Math.Vector2)">
            <summary>
                Calculates distance between point represented by this vector and point represented by other vector.
            </summary>
            <param name="other">Other vector representing a point.</param>
            <returns>Distance between points represented by this vector and the other.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector2.OfLength(System.Double)">
            <summary>
                Returns <see cref="T:Geisha.Common.Math.Vector2" /> that has the same direction to this <see cref="T:Geisha.Common.Math.Vector2" /> but is of given length.
            </summary>
            <param name="length">Length of returned <see cref="T:Geisha.Common.Math.Vector2" />.</param>
            <returns><see cref="T:Geisha.Common.Math.Vector2" /> of given length.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector2.Clamp(System.Double)">
            <summary>
                Returns <see cref="T:Geisha.Common.Math.Vector2" /> that has the same direction to this <see cref="T:Geisha.Common.Math.Vector2" /> but is, at most, of given
                length.
            </summary>
            <param name="maxLength">Maximum allowed length of returned <see cref="T:Geisha.Common.Math.Vector2" />.</param>
            <returns>
                Copy of this <see cref="T:Geisha.Common.Math.Vector2" /> if its <see cref="P:Geisha.Common.Math.Vector2.Length" /> is lower or equal to given length or
                <see cref="T:Geisha.Common.Math.Vector2" /> of given length.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector2.Clamp(System.Double,System.Double)">
            <summary>
                Returns <see cref="T:Geisha.Common.Math.Vector2" /> that has the same direction to this <see cref="T:Geisha.Common.Math.Vector2" /> but is at least of given
                <paramref name="minLength" /> and at most of given <paramref name="maxLength" />.
            </summary>
            <param name="minLength">Minimum allowed length of returned <see cref="T:Geisha.Common.Math.Vector2" />.</param>
            <param name="maxLength">Maximum allowed length of returned <see cref="T:Geisha.Common.Math.Vector2" />.</param>
            <returns>
                <see cref="T:Geisha.Common.Math.Vector2" /> of <paramref name="minLength" /> when this <see cref="T:Geisha.Common.Math.Vector2" />
                <see cref="P:Geisha.Common.Math.Vector2.Length" /> is lower than <paramref name="minLength" />. <see cref="T:Geisha.Common.Math.Vector2" /> of
                <paramref name="maxLength" /> when this <see cref="T:Geisha.Common.Math.Vector2" /> <see cref="P:Geisha.Common.Math.Vector2.Length" /> is greater than
                <paramref name="maxLength" />. Copy of this <see cref="T:Geisha.Common.Math.Vector2" /> if its <see cref="P:Geisha.Common.Math.Vector2.Length" /> is grater or equal
                to <paramref name="minLength" /> and lower or equal to <paramref name="maxLength" />.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector2.WithX(System.Double)">
            <summary>
                Returns copy of this vector with X component set as specified.
            </summary>
            <param name="x">X component value of new vector.</param>
            <returns>Copy of this vector with X component set as specified.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector2.WithY(System.Double)">
            <summary>
                Returns copy of this vector with Y component set as specified.
            </summary>
            <param name="y">Y component value of new vector.</param>
            <returns>Copy of this vector with Y component set as specified.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector2.ToArray">
            <summary>
                Returns array that contains vector components in order X, Y.
            </summary>
            <returns>Array with vector components.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector2.Equals(Geisha.Common.Math.Vector2)">
            <summary>
                Returns a value indicating whether the value of this instance is equal to the value of the specified
                <see cref="T:Geisha.Common.Math.Vector2" /> instance.
            </summary>
            <param name="other">The object to compare to this instance.</param>
            <returns>
                <c>true</c> if the <paramref name="other" /> parameter equals the value of this instance; otherwise,
                <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector2.Equals(System.Object)">
            <summary>
                Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="obj">The object to compare to this instance.</param>
            <returns>
                <c>true</c> if <paramref name="obj" /> is an instance of <see cref="T:Geisha.Common.Math.Vector2" /> and equals the value of this
                instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector2.GetHashCode">
            <summary>
                Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector2.ToString">
            <summary>
                Converts the value of the current <see cref="T:Geisha.Common.Math.Vector2" /> object to its equivalent string representation.
            </summary>
            <returns>A string representation of the value of the current <see cref="T:Geisha.Common.Math.Vector2" /> object.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector2.ToVector3">
            <summary>
                Returns <see cref="T:Geisha.Common.Math.Vector3" /> that represents this <see cref="T:Geisha.Common.Math.Vector2" />. Returned <see cref="T:Geisha.Common.Math.Vector3" /> has the
                same X and Y while its Z is set to zero.
            </summary>
            <returns><see cref="T:Geisha.Common.Math.Vector3" /> that has the same X and Y to this <see cref="T:Geisha.Common.Math.Vector2" /> while its Z is set to zero.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector2.ToVector4">
            <summary>
                Returns <see cref="T:Geisha.Common.Math.Vector4" /> that represents this <see cref="T:Geisha.Common.Math.Vector2" />. Returned <see cref="T:Geisha.Common.Math.Vector4" /> has the
                same X and Y while its Z and W are set to zero.
            </summary>
            <returns>
                <see cref="T:Geisha.Common.Math.Vector4" /> that has the same X and Y to this <see cref="T:Geisha.Common.Math.Vector2" /> while its Z and W are set to
                zero.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector2.op_Addition(Geisha.Common.Math.Vector2,Geisha.Common.Math.Vector2)">
            <summary>
                Adds one vector to another.
            </summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>An object that is the sum of the values of <paramref name="left" /> and <paramref name="right" />.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector2.op_Subtraction(Geisha.Common.Math.Vector2,Geisha.Common.Math.Vector2)">
            <summary>
                Subtracts one vector from another.
            </summary>
            <param name="left">Vector to subtract from (the minuend).</param>
            <param name="right">Vector to subtract (the subtrahend).</param>
            <returns>
                An object that is the result of the value of <paramref name="left" /> minus the value of
                <paramref name="right" />.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector2.op_Multiply(Geisha.Common.Math.Vector2,System.Double)">
            <summary>
                Multiplies specified vector by given scalar.
            </summary>
            <param name="left">Vector to be multiplied.</param>
            <param name="right">Scalar value that is multiplier of vector.</param>
            <returns><see cref="T:Geisha.Common.Math.Vector2" /> that is multiplied by scalar that is each of its components is multiplied by scalar.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector2.op_Division(Geisha.Common.Math.Vector2,System.Double)">
            <summary>
                Divides specified vector by given scalar.
            </summary>
            <param name="left">Vector to be divided.</param>
            <param name="right">Scalar value that is divisor of vector.</param>
            <returns><see cref="T:Geisha.Common.Math.Vector2" /> that is divided by scalar that is each of its components is divided by scalar.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector2.op_UnaryNegation(Geisha.Common.Math.Vector2)">
            <summary>
                Returns vector opposite to the specified vector, that is vector with all components negated.
            </summary>
            <param name="right">Vector to be negated.</param>
            <returns>Vector opposite to the specified vector, that is vector with all components negated.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector2.op_Equality(Geisha.Common.Math.Vector2,Geisha.Common.Math.Vector2)">
            <summary>
                Determines whether two specified instances of <see cref="T:Geisha.Common.Math.Vector2" /> are equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> and <paramref name="right" /> represent the same
                <see cref="T:Geisha.Common.Math.Vector2" />; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector2.op_Inequality(Geisha.Common.Math.Vector2,Geisha.Common.Math.Vector2)">
            <summary>
                Determines whether two specified instances of <see cref="T:Geisha.Common.Math.Vector2" /> are not equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> and <paramref name="right" /> do not represent the same
                <see cref="T:Geisha.Common.Math.Vector2" />; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Geisha.Common.Math.Vector3">
            <summary>
                3D mathematical vector consisting of three components X, Y and Z. It is also used as a point in 3D space.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector3.Zero">
            <summary>
                Returns <see cref="T:Geisha.Common.Math.Vector3" /> that has all components set to zero.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector3.One">
            <summary>
                Returns <see cref="T:Geisha.Common.Math.Vector3" /> that has all components set to one.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector3.UnitX">
            <summary>
                Returns unit <see cref="T:Geisha.Common.Math.Vector3" /> directed along the X axis, that is vector (1,0,0).
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector3.UnitY">
            <summary>
                Returns unit <see cref="T:Geisha.Common.Math.Vector3" /> directed along the Y axis, that is vector (0,1,0).
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector3.UnitZ">
            <summary>
                Returns unit <see cref="T:Geisha.Common.Math.Vector3" /> directed along the Z axis, that is vector (0,0,1).
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector3.X">
            <summary>
                X component of <see cref="T:Geisha.Common.Math.Vector3" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector3.Y">
            <summary>
                Y component of <see cref="T:Geisha.Common.Math.Vector3" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector3.Z">
            <summary>
                Z component of <see cref="T:Geisha.Common.Math.Vector3" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector3.Length">
            <summary>
                Length of <see cref="T:Geisha.Common.Math.Vector3" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector3.Unit">
            <summary>
                Returns unit vector out of this <see cref="T:Geisha.Common.Math.Vector3" /> that is vector with the same direction but with length equal
                one.
            </summary>
            <remarks>For vector with near zero length this property returns zero vector.</remarks>
        </member>
        <member name="P:Geisha.Common.Math.Vector3.Opposite">
            <summary>
                Returns vector opposite to this vector, that is vector with all components negated.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector3.Homogeneous">
            <summary>
                Returns <see cref="T:Geisha.Common.Math.Vector4" /> that is this <see cref="T:Geisha.Common.Math.Vector3" /> in homogeneous coordinates.
            </summary>
            <remarks>
                Homogeneous coordinates add additional component of value one therefore <see cref="T:Geisha.Common.Math.Vector3" /> in homogeneous
                coordinates is represented by <see cref="T:Geisha.Common.Math.Vector4" /> with W component equal one.
            </remarks>
        </member>
        <member name="M:Geisha.Common.Math.Vector3.#ctor(System.Double,System.Double,System.Double)">
            <summary>
                Creates new instance of <see cref="T:Geisha.Common.Math.Vector3" /> given X, Y and Z components values.
            </summary>
            <param name="x">X component value.</param>
            <param name="y">Y component value.</param>
            <param name="z">Z component value.</param>
        </member>
        <member name="M:Geisha.Common.Math.Vector3.#ctor(System.Collections.Generic.IReadOnlyList{System.Double})">
            <summary>
                Creates new instance of <see cref="T:Geisha.Common.Math.Vector3" /> given array of size three containing X, Y and Z components values.
            </summary>
            <param name="array">Array of size three with X, Y and Z components values.</param>
            <exception cref="T:System.ArgumentException">Length of <paramref name="array" /> is not three.</exception>
        </member>
        <member name="M:Geisha.Common.Math.Vector3.Add(Geisha.Common.Math.Vector3)">
            <summary>
                Adds other vector to this vector.
            </summary>
            <param name="other">Other vector to add.</param>
            <returns><see cref="T:Geisha.Common.Math.Vector3" /> that is sum of this vector with the other.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector3.Subtract(Geisha.Common.Math.Vector3)">
            <summary>
                Subtracts other vector from this vector.
            </summary>
            <param name="other">Other vector to subtract.</param>
            <returns><see cref="T:Geisha.Common.Math.Vector3" /> that is difference between this vector and the other.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector3.Multiply(System.Double)">
            <summary>
                Multiplies this vector by given scalar.
            </summary>
            <param name="scalar">Scalar value that is multiplier of vector.</param>
            <returns><see cref="T:Geisha.Common.Math.Vector3" /> that is multiplied by scalar that is each of its components is multiplied by scalar.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector3.Divide(System.Double)">
            <summary>
                Divides this vector by given scalar.
            </summary>
            <param name="scalar">Scalar value that is divisor of vector.</param>
            <returns><see cref="T:Geisha.Common.Math.Vector3" /> that is divided by scalar that is each of its components is divided by scalar.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector3.Dot(Geisha.Common.Math.Vector3)">
            <summary>
                Calculates dot product of this vector with the other.
            </summary>
            <param name="other">Other vector that is part of dot product calculation as a second parameter.</param>
            <returns>Dot product of this vector with the other.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector3.Distance(Geisha.Common.Math.Vector3)">
            <summary>
                Calculates distance between point represented by this vector and point represented by other vector.
            </summary>
            <param name="other">Other vector representing a point.</param>
            <returns>Distance between points represented by this vector and the other.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector3.OfLength(System.Double)">
            <summary>
                Returns <see cref="T:Geisha.Common.Math.Vector3" /> that has the same direction to this <see cref="T:Geisha.Common.Math.Vector3" /> but is of given length.
            </summary>
            <param name="length">Length of returned <see cref="T:Geisha.Common.Math.Vector3" />.</param>
            <returns><see cref="T:Geisha.Common.Math.Vector3" /> of given length.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector3.Clamp(System.Double)">
            <summary>
                Returns <see cref="T:Geisha.Common.Math.Vector3" /> that has the same direction to this <see cref="T:Geisha.Common.Math.Vector3" /> but is, at most, of given
                length.
            </summary>
            <param name="maxLength">Maximum allowed length of returned <see cref="T:Geisha.Common.Math.Vector3" />.</param>
            <returns>
                Copy of this <see cref="T:Geisha.Common.Math.Vector3" /> if its <see cref="P:Geisha.Common.Math.Vector3.Length" /> is lower or equal to given length or
                <see cref="T:Geisha.Common.Math.Vector3" /> of given length.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector3.Clamp(System.Double,System.Double)">
            <summary>
                Returns <see cref="T:Geisha.Common.Math.Vector3" /> that has the same direction to this <see cref="T:Geisha.Common.Math.Vector3" /> but is at least of given
                <paramref name="minLength" /> and at most of given <paramref name="maxLength" />.
            </summary>
            <param name="minLength">Minimum allowed length of returned <see cref="T:Geisha.Common.Math.Vector3" />.</param>
            <param name="maxLength">Maximum allowed length of returned <see cref="T:Geisha.Common.Math.Vector3" />.</param>
            <returns>
                <see cref="T:Geisha.Common.Math.Vector3" /> of <paramref name="minLength" /> when this <see cref="T:Geisha.Common.Math.Vector3" />
                <see cref="P:Geisha.Common.Math.Vector3.Length" /> is lower than <paramref name="minLength" />. <see cref="T:Geisha.Common.Math.Vector3" /> of
                <paramref name="maxLength" /> when this <see cref="T:Geisha.Common.Math.Vector3" /> <see cref="P:Geisha.Common.Math.Vector3.Length" /> is greater than
                <paramref name="maxLength" />. Copy of this <see cref="T:Geisha.Common.Math.Vector3" /> if its <see cref="P:Geisha.Common.Math.Vector3.Length" /> is grater or equal
                to <paramref name="minLength" /> and lower or equal to <paramref name="maxLength" />.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector3.WithX(System.Double)">
            <summary>
                Returns copy of this vector with X component set as specified.
            </summary>
            <param name="x">X component value of new vector.</param>
            <returns>Copy of this vector with X component set as specified.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector3.WithY(System.Double)">
            <summary>
                Returns copy of this vector with Y component set as specified.
            </summary>
            <param name="y">Y component value of new vector.</param>
            <returns>Copy of this vector with Y component set as specified.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector3.WithZ(System.Double)">
            <summary>
                Returns copy of this vector with Z component set as specified.
            </summary>
            <param name="z">Z component value of new vector.</param>
            <returns>Copy of this vector with Z component set as specified.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector3.ToArray">
            <summary>
                Returns array that contains vector components in order X, Y, Z.
            </summary>
            <returns>Array with vector components.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector3.Equals(Geisha.Common.Math.Vector3)">
            <summary>
                Returns a value indicating whether the value of this instance is equal to the value of the specified
                <see cref="T:Geisha.Common.Math.Vector3" /> instance.
            </summary>
            <param name="other">The object to compare to this instance.</param>
            <returns>
                <c>true</c> if the <paramref name="other" /> parameter equals the value of this instance; otherwise,
                <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector3.Equals(System.Object)">
            <summary>
                Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="obj">The object to compare to this instance.</param>
            <returns>
                <c>true</c> if <paramref name="obj" /> is an instance of <see cref="T:Geisha.Common.Math.Vector3" /> and equals the value of this
                instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector3.GetHashCode">
            <summary>
                Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector3.ToString">
            <summary>
                Converts the value of the current <see cref="T:Geisha.Common.Math.Vector3" /> object to its equivalent string representation.
            </summary>
            <returns>A string representation of the value of the current <see cref="T:Geisha.Common.Math.Vector3" /> object.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector3.ToVector2">
            <summary>
                Returns <see cref="T:Geisha.Common.Math.Vector2" /> that represents this <see cref="T:Geisha.Common.Math.Vector3" />. Returned <see cref="T:Geisha.Common.Math.Vector2" /> has the
                same X and Y while this <see cref="T:Geisha.Common.Math.Vector3" /> Z is truncated.
            </summary>
            <returns><see cref="T:Geisha.Common.Math.Vector2" /> that has the same X and Y to this <see cref="T:Geisha.Common.Math.Vector3" />.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector3.ToVector4">
            <summary>
                Returns <see cref="T:Geisha.Common.Math.Vector4" /> that represents this <see cref="T:Geisha.Common.Math.Vector3" />. Returned <see cref="T:Geisha.Common.Math.Vector4" /> has the
                same X, Y and Z while its W is set to zero.
            </summary>
            <returns><see cref="T:Geisha.Common.Math.Vector4" /> that has the same X, Y and Z to this <see cref="T:Geisha.Common.Math.Vector3" /> while its W is set to zero.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector3.op_Addition(Geisha.Common.Math.Vector3,Geisha.Common.Math.Vector3)">
            <summary>
                Adds one vector to another.
            </summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>An object that is the sum of the values of <paramref name="left" /> and <paramref name="right" />.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector3.op_Subtraction(Geisha.Common.Math.Vector3,Geisha.Common.Math.Vector3)">
            <summary>
                Subtracts one vector from another.
            </summary>
            <param name="left">Vector to subtract from (the minuend).</param>
            <param name="right">Vector to subtract (the subtrahend).</param>
            <returns>
                An object that is the result of the value of <paramref name="left" /> minus the value of
                <paramref name="right" />.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector3.op_Multiply(Geisha.Common.Math.Vector3,System.Double)">
            <summary>
                Multiplies specified vector by given scalar.
            </summary>
            <param name="left">Vector to be multiplied.</param>
            <param name="right">Scalar value that is multiplier of vector.</param>
            <returns><see cref="T:Geisha.Common.Math.Vector3" /> that is multiplied by scalar that is each of its components is multiplied by scalar.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector3.op_Division(Geisha.Common.Math.Vector3,System.Double)">
            <summary>
                Divides specified vector by given scalar.
            </summary>
            <param name="left">Vector to be divided.</param>
            <param name="right">Scalar value that is divisor of vector.</param>
            <returns><see cref="T:Geisha.Common.Math.Vector3" /> that is divided by scalar that is each of its components is divided by scalar.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector3.op_UnaryNegation(Geisha.Common.Math.Vector3)">
            <summary>
                Returns vector opposite to the specified vector, that is vector with all components negated.
            </summary>
            <param name="right">Vector to be negated.</param>
            <returns>Vector opposite to the specified vector, that is vector with all components negated.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector3.op_Equality(Geisha.Common.Math.Vector3,Geisha.Common.Math.Vector3)">
            <summary>
                Determines whether two specified instances of <see cref="T:Geisha.Common.Math.Vector3" /> are equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> and <paramref name="right" /> represent the same
                <see cref="T:Geisha.Common.Math.Vector3" />; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector3.op_Inequality(Geisha.Common.Math.Vector3,Geisha.Common.Math.Vector3)">
            <summary>
                Determines whether two specified instances of <see cref="T:Geisha.Common.Math.Vector3" /> are not equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> and <paramref name="right" /> do not represent the same
                <see cref="T:Geisha.Common.Math.Vector3" />; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Geisha.Common.Math.Vector4">
            <summary>
                4D mathematical vector consisting of four components X, Y, Z and W. It is also used as a point in 3D space in
                homogeneous coordinates or as a point in 4D space.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector4.Zero">
            <summary>
                Returns <see cref="T:Geisha.Common.Math.Vector4" /> that has all components set to zero.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector4.One">
            <summary>
                Returns <see cref="T:Geisha.Common.Math.Vector4" /> that has all components set to one.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector4.UnitX">
            <summary>
                Returns unit <see cref="T:Geisha.Common.Math.Vector4" /> directed along the X axis, that is vector (1,0,0,0).
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector4.UnitY">
            <summary>
                Returns unit <see cref="T:Geisha.Common.Math.Vector4" /> directed along the Y axis, that is vector (0,1,0,0).
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector4.UnitZ">
            <summary>
                Returns unit <see cref="T:Geisha.Common.Math.Vector4" /> directed along the Z axis, that is vector (0,0,1,0).
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector4.UnitW">
            <summary>
                Returns unit <see cref="T:Geisha.Common.Math.Vector4" /> directed along the W axis, that is vector (0,0,0,1).
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector4.X">
            <summary>
                X component of <see cref="T:Geisha.Common.Math.Vector4" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector4.Y">
            <summary>
                Y component of <see cref="T:Geisha.Common.Math.Vector4" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector4.Z">
            <summary>
                Z component of <see cref="T:Geisha.Common.Math.Vector4" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector4.W">
            <summary>
                W component of <see cref="T:Geisha.Common.Math.Vector4" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector4.Length">
            <summary>
                Length of <see cref="T:Geisha.Common.Math.Vector4" />.
            </summary>
        </member>
        <member name="P:Geisha.Common.Math.Vector4.Unit">
            <summary>
                Returns unit vector out of this <see cref="T:Geisha.Common.Math.Vector4" /> that is vector with the same direction but with length equal
                one.
            </summary>
            <remarks>For vector with near zero length this property returns zero vector.</remarks>
        </member>
        <member name="P:Geisha.Common.Math.Vector4.Opposite">
            <summary>
                Returns vector opposite to this vector, that is vector with all components negated.
            </summary>
        </member>
        <member name="M:Geisha.Common.Math.Vector4.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
                Creates new instance of <see cref="T:Geisha.Common.Math.Vector4" /> given X, Y, Z and W components values.
            </summary>
            <param name="x">X component value.</param>
            <param name="y">Y component value.</param>
            <param name="z">Z component value.</param>
            <param name="w">W component value.</param>
        </member>
        <member name="M:Geisha.Common.Math.Vector4.#ctor(System.Collections.Generic.IReadOnlyList{System.Double})">
            <summary>
                Creates new instance of <see cref="T:Geisha.Common.Math.Vector4" /> given array of size four containing X, Y, Z and W components values.
            </summary>
            <param name="array">Array of size four with X, Y, Z and W components values.</param>
            <exception cref="T:System.ArgumentException">Length of <paramref name="array" /> is not four.</exception>
        </member>
        <member name="M:Geisha.Common.Math.Vector4.Add(Geisha.Common.Math.Vector4)">
            <summary>
                Adds other vector to this vector.
            </summary>
            <param name="other">Other vector to add.</param>
            <returns><see cref="T:Geisha.Common.Math.Vector4" /> that is sum of this vector with the other.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector4.Subtract(Geisha.Common.Math.Vector4)">
            <summary>
                Subtracts other vector from this vector.
            </summary>
            <param name="other">Other vector to subtract.</param>
            <returns><see cref="T:Geisha.Common.Math.Vector4" /> that is difference between this vector and the other.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector4.Multiply(System.Double)">
            <summary>
                Multiplies this vector by given scalar.
            </summary>
            <param name="scalar">Scalar value that is multiplier of vector.</param>
            <returns><see cref="T:Geisha.Common.Math.Vector4" /> that is multiplied by scalar that is each of its components is multiplied by scalar.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector4.Divide(System.Double)">
            <summary>
                Divides this vector by given scalar.
            </summary>
            <param name="scalar">Scalar value that is divisor of vector.</param>
            <returns><see cref="T:Geisha.Common.Math.Vector4" /> that is divided by scalar that is each of its components is divided by scalar.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector4.Dot(Geisha.Common.Math.Vector4)">
            <summary>
                Calculates dot product of this vector with the other.
            </summary>
            <param name="other">Other vector that is part of dot product calculation as a second parameter.</param>
            <returns>Dot product of this vector with the other.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector4.Distance(Geisha.Common.Math.Vector4)">
            <summary>
                Calculates distance between point represented by this vector and point represented by other vector.
            </summary>
            <param name="other">Other vector representing a point.</param>
            <returns>Distance between points represented by this vector and the other.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector4.OfLength(System.Double)">
            <summary>
                Returns <see cref="T:Geisha.Common.Math.Vector4" /> that has the same direction to this <see cref="T:Geisha.Common.Math.Vector4" /> but is of given length.
            </summary>
            <param name="length">Length of returned <see cref="T:Geisha.Common.Math.Vector4" />.</param>
            <returns><see cref="T:Geisha.Common.Math.Vector4" /> of given length.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector4.Clamp(System.Double)">
            <summary>
                Returns <see cref="T:Geisha.Common.Math.Vector4" /> that has the same direction to this <see cref="T:Geisha.Common.Math.Vector4" /> but is, at most, of given
                length.
            </summary>
            <param name="maxLength">Maximum allowed length of returned <see cref="T:Geisha.Common.Math.Vector4" />.</param>
            <returns>
                Copy of this <see cref="T:Geisha.Common.Math.Vector4" /> if its <see cref="P:Geisha.Common.Math.Vector4.Length" /> is lower or equal to given length or
                <see cref="T:Geisha.Common.Math.Vector4" /> of given length.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector4.Clamp(System.Double,System.Double)">
            <summary>
                Returns <see cref="T:Geisha.Common.Math.Vector4" /> that has the same direction to this <see cref="T:Geisha.Common.Math.Vector4" /> but is at least of given
                <paramref name="minLength" /> and at most of given <paramref name="maxLength" />.
            </summary>
            <param name="minLength">Minimum allowed length of returned <see cref="T:Geisha.Common.Math.Vector4" />.</param>
            <param name="maxLength">Maximum allowed length of returned <see cref="T:Geisha.Common.Math.Vector4" />.</param>
            <returns>
                <see cref="T:Geisha.Common.Math.Vector4" /> of <paramref name="minLength" /> when this <see cref="T:Geisha.Common.Math.Vector4" />
                <see cref="P:Geisha.Common.Math.Vector4.Length" /> is lower than <paramref name="minLength" />. <see cref="T:Geisha.Common.Math.Vector4" /> of
                <paramref name="maxLength" /> when this <see cref="T:Geisha.Common.Math.Vector4" /> <see cref="P:Geisha.Common.Math.Vector4.Length" /> is greater than
                <paramref name="maxLength" />. Copy of this <see cref="T:Geisha.Common.Math.Vector4" /> if its <see cref="P:Geisha.Common.Math.Vector4.Length" /> is grater or equal
                to <paramref name="minLength" /> and lower or equal to <paramref name="maxLength" />.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector4.WithX(System.Double)">
            <summary>
                Returns copy of this vector with X component set as specified.
            </summary>
            <param name="x">X component value of new vector.</param>
            <returns>Copy of this vector with X component set as specified.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector4.WithY(System.Double)">
            <summary>
                Returns copy of this vector with Y component set as specified.
            </summary>
            <param name="y">Y component value of new vector.</param>
            <returns>Copy of this vector with Y component set as specified.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector4.WithZ(System.Double)">
            <summary>
                Returns copy of this vector with Z component set as specified.
            </summary>
            <param name="z">Z component value of new vector.</param>
            <returns>Copy of this vector with Z component set as specified.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector4.WithW(System.Double)">
            <summary>
                Returns copy of this vector with W component set as specified.
            </summary>
            <param name="w">W component value of new vector.</param>
            <returns>Copy of this vector with W component set as specified.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector4.ToArray">
            <summary>
                Returns array that contains vector components in order X, Y, Z, W.
            </summary>
            <returns>Array with vector components.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector4.Equals(Geisha.Common.Math.Vector4)">
            <summary>
                Returns a value indicating whether the value of this instance is equal to the value of the specified
                <see cref="T:Geisha.Common.Math.Vector4" /> instance.
            </summary>
            <param name="other">The object to compare to this instance.</param>
            <returns>
                <c>true</c> if the <paramref name="other" /> parameter equals the value of this instance; otherwise,
                <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector4.Equals(System.Object)">
            <summary>
                Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="obj">The object to compare to this instance.</param>
            <returns>
                <c>true</c> if <paramref name="obj" /> is an instance of <see cref="T:Geisha.Common.Math.Vector4" /> and equals the value of this
                instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector4.GetHashCode">
            <summary>
                Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector4.ToString">
            <summary>
                Converts the value of the current <see cref="T:Geisha.Common.Math.Vector4" /> object to its equivalent string representation.
            </summary>
            <returns>A string representation of the value of the current <see cref="T:Geisha.Common.Math.Vector4" /> object.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector4.ToVector2">
            <summary>
                Returns <see cref="T:Geisha.Common.Math.Vector2" /> that represents this <see cref="T:Geisha.Common.Math.Vector4" />. Returned <see cref="T:Geisha.Common.Math.Vector2" /> has the
                same X and Y while this <see cref="T:Geisha.Common.Math.Vector4" /> Z and W are truncated.
            </summary>
            <returns><see cref="T:Geisha.Common.Math.Vector2" /> that has the same X and Y to this <see cref="T:Geisha.Common.Math.Vector4" />.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector4.ToVector3">
            <summary>
                Returns <see cref="T:Geisha.Common.Math.Vector3" /> that represents this <see cref="T:Geisha.Common.Math.Vector4" />. Returned <see cref="T:Geisha.Common.Math.Vector3" /> has the
                same X, Y and Z while this <see cref="T:Geisha.Common.Math.Vector4" /> W is truncated.
            </summary>
            <returns><see cref="T:Geisha.Common.Math.Vector3" /> that has the same X, Y and Z to this <see cref="T:Geisha.Common.Math.Vector4" />.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector4.op_Addition(Geisha.Common.Math.Vector4,Geisha.Common.Math.Vector4)">
            <summary>
                Adds one vector to another.
            </summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>An object that is the sum of the values of <paramref name="left" /> and <paramref name="right" />.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector4.op_Subtraction(Geisha.Common.Math.Vector4,Geisha.Common.Math.Vector4)">
            <summary>
                Subtracts one vector from another.
            </summary>
            <param name="left">Vector to subtract from (the minuend).</param>
            <param name="right">Vector to subtract (the subtrahend).</param>
            <returns>
                An object that is the result of the value of <paramref name="left" /> minus the value of
                <paramref name="right" />.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector4.op_Multiply(Geisha.Common.Math.Vector4,System.Double)">
            <summary>
                Multiplies specified vector by given scalar.
            </summary>
            <param name="left">Vector to be multiplied.</param>
            <param name="right">Scalar value that is multiplier of vector.</param>
            <returns><see cref="T:Geisha.Common.Math.Vector4" /> that is multiplied by scalar that is each of its components is multiplied by scalar.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector4.op_Division(Geisha.Common.Math.Vector4,System.Double)">
            <summary>
                Divides specified vector by given scalar.
            </summary>
            <param name="left">Vector to be divided.</param>
            <param name="right">Scalar value that is divisor of vector.</param>
            <returns><see cref="T:Geisha.Common.Math.Vector4" /> that is divided by scalar that is each of its components is divided by scalar.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector4.op_UnaryNegation(Geisha.Common.Math.Vector4)">
            <summary>
                Returns vector opposite to the specified vector, that is vector with all components negated.
            </summary>
            <param name="right">Vector to be negated.</param>
            <returns>Vector opposite to the specified vector, that is vector with all components negated.</returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector4.op_Equality(Geisha.Common.Math.Vector4,Geisha.Common.Math.Vector4)">
            <summary>
                Determines whether two specified instances of <see cref="T:Geisha.Common.Math.Vector4" /> are equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> and <paramref name="right" /> represent the same
                <see cref="T:Geisha.Common.Math.Vector4" />; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Geisha.Common.Math.Vector4.op_Inequality(Geisha.Common.Math.Vector4,Geisha.Common.Math.Vector4)">
            <summary>
                Determines whether two specified instances of <see cref="T:Geisha.Common.Math.Vector4" /> are not equal.
            </summary>
            <param name="left">The first object to compare.</param>
            <param name="right">The second object to compare.</param>
            <returns>
                <c>true</c> if <paramref name="left" /> and <paramref name="right" /> do not represent the same
                <see cref="T:Geisha.Common.Math.Vector4" />; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Geisha.Common.Serialization.IJsonSerializer">
            <summary>
                Provides common JSON serialization functionality.
            </summary>
        </member>
        <member name="M:Geisha.Common.Serialization.IJsonSerializer.Serialize(System.Object)">
            <summary>
                Serializes an object to JSON string.
            </summary>
            <param name="value">Object to be serialized.</param>
            <returns>String with serialized object JSON content.</returns>
            <remarks>
                JSON serialization handles objects types names automatically. No type information is serialized as long as
                object type is the same as its declared type. If those differs then type information is included in serialized
                data.
            </remarks>
        </member>
        <member name="M:Geisha.Common.Serialization.IJsonSerializer.Deserialize``1(System.String)">
            <summary>
                Deserializes an object from JSON string.
            </summary>
            <typeparam name="T">Type of object to be deserialized.</typeparam>
            <param name="json">String with serialized object JSON content.</param>
            <returns>Instance of deserialized object initialized with data from JSON string.</returns>
        </member>
        <member name="M:Geisha.Common.Serialization.IJsonSerializer.DeserializePart``1(System.String,System.String)">
            <summary>
                Deserializes an object from part of JSON string specified by JSON path.
            </summary>
            <typeparam name="T">Type of object to be deserialized.</typeparam>
            <param name="json">String with JSON content.</param>
            <param name="partPath">JSON path to part of JSON that will be deserialized to an object.</param>
            <returns>Instance of deserialized object initialized with data from part of JSON string if part under the path exists; otherwise default value of <typeparamref name="T"/>.</returns>
        </member>
        <member name="T:Geisha.Common.Serialization.JsonSerializer">
            <inheritdoc />
            <summary>
                Provides common JSON serialization functionality.
            </summary>
        </member>
        <member name="M:Geisha.Common.Serialization.JsonSerializer.Serialize(System.Object)">
            <inheritdoc />
            <summary>
                Serializes an object to JSON string.
            </summary>
        </member>
        <member name="M:Geisha.Common.Serialization.JsonSerializer.Deserialize``1(System.String)">
            <inheritdoc />
            <summary>
                Deserializes an object from JSON string.
            </summary>
        </member>
        <member name="M:Geisha.Common.Serialization.JsonSerializer.DeserializePart``1(System.String,System.String)">
            <inheritdoc />
            <summary>
                Deserializes an object from part of JSON string specified by JSON path.
            </summary>
        </member>
        <member name="T:Geisha.Common.ISingleOrEmpty`1">
            <summary>
                Represents <see cref="T:System.Collections.Generic.IEnumerable`1" /> that either has exactly one element or is empty.
            </summary>
            <typeparam name="T">The type of element kept.</typeparam>
        </member>
        <member name="T:Geisha.Common.SingleOrEmpty">
            <summary>
                Provides static factory methods for creating <see cref="T:Geisha.Common.ISingleOrEmpty`1" /> instances.
            </summary>
        </member>
        <member name="M:Geisha.Common.SingleOrEmpty.Single``1(``0)">
            <summary>
                Creates <see cref="T:Geisha.Common.ISingleOrEmpty`1" /> with single specified element.
            </summary>
            <typeparam name="T">The type of element kept by created <see cref="T:Geisha.Common.ISingleOrEmpty`1" /> instance.</typeparam>
            <param name="item">Element kept by created <see cref="T:Geisha.Common.ISingleOrEmpty`1" /> instance.</param>
            <returns><see cref="T:Geisha.Common.ISingleOrEmpty`1" /> with single element.</returns>
        </member>
        <member name="M:Geisha.Common.SingleOrEmpty.Empty``1">
            <summary>
                Creates <see cref="T:Geisha.Common.ISingleOrEmpty`1" /> with no elements.
            </summary>
            <typeparam name="T">The type of element kept by created <see cref="T:Geisha.Common.ISingleOrEmpty`1" /> instance.</typeparam>
            <returns><see cref="T:Geisha.Common.ISingleOrEmpty`1" /> with no elements.</returns>
        </member>
        <member name="T:Geisha.Common.StringExtensions">
            <summary>
                Provides common utility functions for <see cref="T:System.String" /> data type.
            </summary>
        </member>
        <member name="M:Geisha.Common.StringExtensions.ToStream(System.String)">
            <summary>
                Creates a <see cref="T:System.IO.Stream" /> that is a copy of specified <see cref="T:System.String" /> using UTF8 encoding.
            </summary>
            <param name="str"><see cref="T:System.String" /> to be copied as <see cref="T:System.IO.Stream" />.</param>
            <returns><see cref="T:System.IO.Stream" /> that is a copy of specified <see cref="T:System.String" /> using UTF8 encoding.</returns>
        </member>
    </members>
</doc>
